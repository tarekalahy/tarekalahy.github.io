<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: PointerType&lt; _Tp &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_pointer_type.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="class_pointer_type-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">PointerType&lt; _Tp &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for PointerType&lt; _Tp &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_pointer_type__inherit__graph.svg" width="147" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for PointerType&lt; _Tp &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_pointer_type__coll__graph.svg" width="147" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae6755c23435fbdbe8ea60d4c383e72b5"><td class="memItemLeft" align="right" valign="top">typedef <br class="typebreak"/>
std::enable_shared_from_this<br class="typebreak"/>
&lt; _Tp &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ae6755c23435fbdbe8ea60d4c383e72b5">_Base</a></td></tr>
<tr class="separator:ae6755c23435fbdbe8ea60d4c383e72b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1ab47000d4c6f77ce300a54b477d6d0"><td class="memItemLeft" align="right" valign="top">typedef std::remove_cv&lt; _Tp &gt;::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a></td></tr>
<tr class="separator:ae1ab47000d4c6f77ce300a54b477d6d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf22a9d4ec4938b1447535741774729c"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; <a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a></td></tr>
<tr class="separator:adf22a9d4ec4938b1447535741774729c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b24c001b2485ee3ac4d46be4fe0d222"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; const <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a></td></tr>
<tr class="separator:a8b24c001b2485ee3ac4d46be4fe0d222"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a79096031ee74f2ff5228db7b2c1272dd"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a79096031ee74f2ff5228db7b2c1272dd">~PointerType</a> ()</td></tr>
<tr class="separator:a79096031ee74f2ff5228db7b2c1272dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a253402439a2f9b96382596074d2d7271"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a> () <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a253402439a2f9b96382596074d2d7271"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666b68a483c467918d8543410095a9b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a666b68a483c467918d8543410095a9b7">Ptr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a666b68a483c467918d8543410095a9b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01f277b03ab0f0ed95555e298af2363f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a01f277b03ab0f0ed95555e298af2363f">ConstPtr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a01f277b03ab0f0ed95555e298af2363f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af17b1cea2ddc60a267a9004cc1c87462"><td class="memTemplParams" colspan="2">template&lt;class _Yp &gt; </td></tr>
<tr class="memitem:af17b1cea2ddc60a267a9004cc1c87462"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Yp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#af17b1cea2ddc60a267a9004cc1c87462">CastPtr</a> () <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:af17b1cea2ddc60a267a9004cc1c87462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45e01ceea460285ffa94ed345976ebfb"><td class="memTemplParams" colspan="2">template&lt;class _Yp &gt; </td></tr>
<tr class="memitem:a45e01ceea460285ffa94ed345976ebfb"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; typename <br class="typebreak"/>
std::add_const&lt; _Yp &gt;::type &gt;<br class="typebreak"/>
::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a45e01ceea460285ffa94ed345976ebfb">CastPtr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a45e01ceea460285ffa94ed345976ebfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a532e3efd5145c8c89933b4fa5531f296"><td class="memTemplParams" colspan="2">template&lt;class , _Sub , typename _Arg1 &gt; </td></tr>
<tr class="memitem:a532e3efd5145c8c89933b4fa5531f296"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; _Tp, _Sub &gt;<br class="typebreak"/>
::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a><br class="typebreak"/>
&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">New</a> (_Arg1 __arg1)</td></tr>
<tr class="separator:a532e3efd5145c8c89933b4fa5531f296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a653ab55fab0626703d04b0084af545d8"><td class="memTemplParams" colspan="2">template&lt;class _Sub , typename _Arg1 , typename _Arg2 &gt; </td></tr>
<tr class="memitem:a653ab55fab0626703d04b0084af545d8"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; _Tp, _Sub &gt;<br class="typebreak"/>
::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a><br class="typebreak"/>
&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a653ab55fab0626703d04b0084af545d8">New</a> (_Arg1 __arg1, _Arg2 __arg2)</td></tr>
<tr class="separator:a653ab55fab0626703d04b0084af545d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5eb544faa76b51f13bfe70ed5aa7359"><td class="memTemplParams" colspan="2">template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 &gt; </td></tr>
<tr class="memitem:ad5eb544faa76b51f13bfe70ed5aa7359"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; _Tp, _Sub &gt;<br class="typebreak"/>
::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a><br class="typebreak"/>
&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ad5eb544faa76b51f13bfe70ed5aa7359">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3)</td></tr>
<tr class="separator:ad5eb544faa76b51f13bfe70ed5aa7359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4760b31634185ee43e7f81d00273f462"><td class="memTemplParams" colspan="2">template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 &gt; </td></tr>
<tr class="memitem:a4760b31634185ee43e7f81d00273f462"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; _Tp, _Sub &gt;<br class="typebreak"/>
::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a><br class="typebreak"/>
&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a4760b31634185ee43e7f81d00273f462">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4)</td></tr>
<tr class="separator:a4760b31634185ee43e7f81d00273f462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6c1c254a8d892c362ac68e3dbf0e903"><td class="memTemplParams" colspan="2">template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 , typename _Arg5 &gt; </td></tr>
<tr class="memitem:ac6c1c254a8d892c362ac68e3dbf0e903"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; _Tp, _Sub &gt;<br class="typebreak"/>
::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a><br class="typebreak"/>
&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ac6c1c254a8d892c362ac68e3dbf0e903">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4, _Arg5 __arg5)</td></tr>
<tr class="separator:ac6c1c254a8d892c362ac68e3dbf0e903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe3f0dde667ab7890d81bb5caadc89f"><td class="memTemplParams" colspan="2">template&lt;typename _Arg1 &gt; </td></tr>
<tr class="memitem:aafe3f0dde667ab7890d81bb5caadc89f"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#aafe3f0dde667ab7890d81bb5caadc89f">New</a> (_Arg1 __arg1)</td></tr>
<tr class="separator:aafe3f0dde667ab7890d81bb5caadc89f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22e92b46086b84e21a567443be4cde72"><td class="memTemplParams" colspan="2">template&lt;typename _Arg1 , typename _Arg2 &gt; </td></tr>
<tr class="memitem:a22e92b46086b84e21a567443be4cde72"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a22e92b46086b84e21a567443be4cde72">New</a> (_Arg1 __arg1, _Arg2 __arg2)</td></tr>
<tr class="separator:a22e92b46086b84e21a567443be4cde72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b5ff632a92c046349e70a8cebeb6e3"><td class="memTemplParams" colspan="2">template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 &gt; </td></tr>
<tr class="memitem:a30b5ff632a92c046349e70a8cebeb6e3"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a30b5ff632a92c046349e70a8cebeb6e3">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3)</td></tr>
<tr class="separator:a30b5ff632a92c046349e70a8cebeb6e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04b3ee41ea9ca5b1f1276e3048d680f6"><td class="memTemplParams" colspan="2">template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 &gt; </td></tr>
<tr class="memitem:a04b3ee41ea9ca5b1f1276e3048d680f6"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a04b3ee41ea9ca5b1f1276e3048d680f6">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4)</td></tr>
<tr class="separator:a04b3ee41ea9ca5b1f1276e3048d680f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea07dd9617da1046d47a0827fc324d0"><td class="memTemplParams" colspan="2">template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 , typename _Arg5 &gt; </td></tr>
<tr class="memitem:a9ea07dd9617da1046d47a0827fc324d0"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a9ea07dd9617da1046d47a0827fc324d0">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4, _Arg5 __arg5)</td></tr>
<tr class="separator:a9ea07dd9617da1046d47a0827fc324d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57ef0d8963aae3e7be26521fba8eba3e"><td class="memTemplParams" colspan="2">template&lt;class _Yp &gt; </td></tr>
<tr class="memitem:a57ef0d8963aae3e7be26521fba8eba3e"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a57ef0d8963aae3e7be26521fba8eba3e">CastFrom</a> (typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Yp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> __from) <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a57ef0d8963aae3e7be26521fba8eba3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a1640de8234736c4f7d8e27a72db16b57"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a1640de8234736c4f7d8e27a72db16b57">PointerType</a> ()</td></tr>
<tr class="separator:a1640de8234736c4f7d8e27a72db16b57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86916470cbec9e61d10aeebb89b04ef0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a86916470cbec9e61d10aeebb89b04ef0">PointerType</a> (const <a class="el" href="class_pointer_type.xhtml">PointerType</a> &amp;__o)</td></tr>
<tr class="separator:a86916470cbec9e61d10aeebb89b04ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class _Tp&gt;<br/>
class PointerType&lt; _Tp &gt;</h3>

<p>A friendly shared-pointer-compatibility superclass.</p>
<p>This class implements a simple forwarding <a class="el" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">New()</a> method which will construct its core object type via std::make_shared&lt;&gt;(), forwarding all arguments. On compilers with no support for variadic macros (VC++10, I'm looking at you) it can handle up to five arguments to this constructor/factory function. It provides handy type definitions for both a standard non-const, non-volatile shared_ptr type and a const version, thus reducing boilerplate while enforcing type-safety and well-known rules.</p>
<p>It also provides simple helpers for the somewhat fiddly shared_from_this(), which often requires explicit calling as <code>std::enable_shared_from_this&lt;SomeType&gt;::shared_from_this()</code> where plain <code>shared_from_this()</code> would be preferred. For this reason, we provide the <a class="el" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr()</a> and <a class="el" href="class_pointer_type.xhtml#a01f277b03ab0f0ed95555e298af2363f">ConstPtr()</a> methods. Thus, for <code>class SomeType : public <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;SomeType&gt;</code> we can use: </p>
<pre class="fragment">SomeType obj = ...
std::shared_ptr&lt;SomeType&gt; ptr = obj.Ptr();
std::shared_ptr&lt;const SomeType&gt; constPtr = obj.ConstPtr();
</pre><p>We also provide casting methods, allowing for easy and brief casting of a shared_ptr to a PointerType-derived object to be cast to a shared_ptr to a related type. Given: </p>
<pre class="fragment">class BaseType { ... };
class SubType : public BaseType, public PointerType&lt;SubType&gt; { ... };
</pre><p>You can freely cast between the shared pointer types defined by both <code><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;SubType&gt;</code> and the (inferred) <code><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;BaseType&gt;</code>, like so: </p>
<pre class="fragment">typedef PointerType&lt;BaseType&gt;::Pointer BaseTypePtr;
typedef PointerType&lt;SubType&gt;::Pointer  SubTypePtr;

SubTypePtr obj = SubType::New(...);
BaseTypePtr base = obj-&gt;CastPtr&lt;BaseType&gt;();
</pre><p>Note that the <code><a class="el" href="class_pointer_type.xhtml#af17b1cea2ddc60a267a9004cc1c87462">CastPtr()</a></code> methods use SFINAE, so the compiler will report a template argument deduction error if you use, say, <code>obj-&gt;CastPtr&lt;SomeUnrelatedType&gt;()</code>. </p>

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00070">70</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="ae6755c23435fbdbe8ea60d4c383e72b5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::enable_shared_from_this&lt;_Tp&gt; <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml#ae6755c23435fbdbe8ea60d4c383e72b5">_Base</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00073">73</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8b24c001b2485ee3ac4d46be4fe0d222"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::shared_ptr&lt;const <a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a>&gt; <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00076">76</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="adf22a9d4ec4938b1447535741774729c"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::shared_ptr&lt;<a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a>&gt; <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00075">75</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae1ab47000d4c6f77ce300a54b477d6d0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::remove_cv&lt;_Tp&gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00074">74</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1640de8234736c4f7d8e27a72db16b57"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml">PointerType</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00079">79</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a86916470cbec9e61d10aeebb89b04ef0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::<a class="el" href="class_pointer_type.xhtml">PointerType</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt; &amp;&#160;</td>
          <td class="paramname"><em>__o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00080">80</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a79096031ee74f2ff5228db7b2c1272dd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::~<a class="el" href="class_pointer_type.xhtml">PointerType</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00083">83</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a57ef0d8963aae3e7be26521fba8eba3e"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Yp &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::CastFrom </td>
          <td>(</td>
          <td class="paramtype">typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Yp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td>
          <td class="paramname"><em>__from</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00201">201</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="af17b1cea2ddc60a267a9004cc1c87462"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Yp &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Yp&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::CastPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00190">190</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a45e01ceea460285ffa94ed345976ebfb"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Yp &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;typename std::add_const&lt;_Yp&gt;::type&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::CastPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00195">195</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a01f277b03ab0f0ed95555e298af2363f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::ConstPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00185">185</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a532e3efd5145c8c89933b4fa5531f296"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class , _Sub , typename _Arg1 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> std::enable_if&lt; std::is_base_of&lt;_Tp, _Sub&gt;::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Sub&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00113">113</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a653ab55fab0626703d04b0084af545d8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Sub , typename _Arg1 , typename _Arg2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> std::enable_if&lt; std::is_base_of&lt;_Tp, _Sub&gt;::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Sub&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00124">124</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="ad5eb544faa76b51f13bfe70ed5aa7359"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> std::enable_if&lt; std::is_base_of&lt;_Tp, _Sub&gt;::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Sub&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00135">135</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4760b31634185ee43e7f81d00273f462"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> std::enable_if&lt; std::is_base_of&lt;_Tp, _Sub&gt;::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Sub&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg4&#160;</td>
          <td class="paramname"><em>__arg4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00146">146</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac6c1c254a8d892c362ac68e3dbf0e903"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;class _Sub , typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 , typename _Arg5 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> std::enable_if&lt; std::is_base_of&lt;_Tp, _Sub&gt;::value, typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt;_Sub&gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;::type <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg4&#160;</td>
          <td class="paramname"><em>__arg4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg5&#160;</td>
          <td class="paramname"><em>__arg5</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00157">157</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="aafe3f0dde667ab7890d81bb5caadc89f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;typename _Arg1 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00162">162</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a22e92b46086b84e21a567443be4cde72"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;typename _Arg1 , typename _Arg2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00166">166</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a30b5ff632a92c046349e70a8cebeb6e3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00170">170</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a04b3ee41ea9ca5b1f1276e3048d680f6"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg4&#160;</td>
          <td class="paramname"><em>__arg4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00174">174</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9ea07dd9617da1046d47a0827fc324d0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<div class="memtemplate">
template&lt;typename _Arg1 , typename _Arg2 , typename _Arg3 , typename _Arg4 , typename _Arg5 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::New </td>
          <td>(</td>
          <td class="paramtype">_Arg1&#160;</td>
          <td class="paramname"><em>__arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg2&#160;</td>
          <td class="paramname"><em>__arg2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg3&#160;</td>
          <td class="paramname"><em>__arg3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg4&#160;</td>
          <td class="paramname"><em>__arg4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_Arg5&#160;</td>
          <td class="paramname"><em>__arg5</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00178">178</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a253402439a2f9b96382596074d2d7271"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::Ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00183">183</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<a class="anchor" id="a666b68a483c467918d8543410095a9b7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _Tp&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a> <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Tp &gt;::Ptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="pointer__type_8h_source.xhtml#l00184">184</a> of file <a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/<a class="el" href="pointer__type_8h_source.xhtml">pointer_type.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="class_pointer_type.xhtml">PointerType</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:42 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
