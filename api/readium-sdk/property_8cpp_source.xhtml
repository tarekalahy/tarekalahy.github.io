<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/property.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('property_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">property.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="property_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  property.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2013-05-03.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;ePub3/property.h&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="iri_8h.xhtml">ePub3/utilities/iri.h</a>&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;ePub3/property_holder.h&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span><span class="keyword">const</span> <a class="code" href="utfstring_8h.xhtml#afb1489b546f7800463867523ffaee1d3">xmlChar</a> * <a class="code" href="property_8h.xhtml#a456c470cdde3996aea35a44ef43386b8">DCMES_uri</a> = (<span class="keyword">const</span> <a class="code" href="utfstring_8h.xhtml#afb1489b546f7800463867523ffaee1d3">xmlChar</a>*)<span class="stringliteral">&quot;http://purl.org/dc/elements/1.1/&quot;</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">const</span> <a class="code" href="utfstring_8h.xhtml#afb1489b546f7800463867523ffaee1d3">xmlChar</a> * <a class="code" href="property_8h.xhtml#a14f1a656a1911802ab879b67cb78d39a">MetaTagName</a> = (<span class="keyword">const</span> <a class="code" href="utfstring_8h.xhtml#afb1489b546f7800463867523ffaee1d3">xmlChar</a>*)<span class="stringliteral">&quot;meta&quot;</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#elif EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="keyword">const</span> TCHAR* <a class="code" href="property_8h.xhtml#a456c470cdde3996aea35a44ef43386b8">DCMES_uri</a> = TEXT(<span class="stringliteral">&quot;http://purl.org/dc/elements/1.1/&quot;</span>);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">const</span> TCHAR* <a class="code" href="property_8h.xhtml#a14f1a656a1911802ab879b67cb78d39a">MetaTagName</a> = TEXT(<span class="stringliteral">&quot;meta&quot;</span>);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="code" href="property_8h.xhtml#a6d59a9d2a010bf2784a3443b7d9312ba">   34</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="property_8cpp.xhtml#a08e88215e3732874b592b9508edb2ded">__lang_from_locale</a>(<span class="keyword">const</span> std::locale&amp; loc)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    std::string lname = loc.name();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// handle custom locales, i.e. &quot;LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C&quot;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">auto</span> __p = lname.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(<span class="stringliteral">&quot;LC_CTYPE=&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">if</span> ( __p != std::string::npos )</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keyword">auto</span> __e = lname.find(<span class="stringliteral">&quot;;&quot;</span>, __p);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span> ( __e == std::string::npos )</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            __e = lname.size();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        lname = lname.substr(__p, __e);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="comment">// now we have something like &quot;en_US.UTF-8&quot; or &quot;en_US&quot;. Strip the &quot;.UTF-8&quot; part, if any</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    __p = lname.find(<span class="stringliteral">&quot;.&quot;</span>);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> ( __p != std::string::npos )</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        lname = lname.substr(0, __p);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml">string</a>(lname);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">   56</a></span>&#160;<span class="keyword">typedef</span> std::pair&lt;string, string&gt; <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor"></span><span class="comment">// C++11 FTW</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">static</span> std::map&lt;string, DCType&gt; NameToIDMap = {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {<span class="stringliteral">&quot;meta&quot;</span>, DCType::Custom},</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {<span class="stringliteral">&quot;identifier&quot;</span>, DCType::Identifier},</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {<span class="stringliteral">&quot;title&quot;</span>, DCType::Title},</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {<span class="stringliteral">&quot;language&quot;</span>, DCType::Language},</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {<span class="stringliteral">&quot;contributor&quot;</span>, DCType::Contributor},</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {<span class="stringliteral">&quot;coverage&quot;</span>, DCType::Coverage},</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {<span class="stringliteral">&quot;creator&quot;</span>, DCType::Creator},</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {<span class="stringliteral">&quot;date&quot;</span>, DCType::Date},</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {<span class="stringliteral">&quot;description&quot;</span>, DCType::Description},</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {<span class="stringliteral">&quot;format&quot;</span>, DCType::Format},</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {<span class="stringliteral">&quot;publisher&quot;</span>, DCType::Publisher},</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {<span class="stringliteral">&quot;relation&quot;</span>, DCType::Relation},</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {<span class="stringliteral">&quot;rights&quot;</span>, DCType::Rights},</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {<span class="stringliteral">&quot;source&quot;</span>, DCType::Source},</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {<span class="stringliteral">&quot;subject&quot;</span>, DCType::Subject},</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {<span class="stringliteral">&quot;type&quot;</span>, DCType::Type}</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">static</span> std::map&lt;DCType, string&gt; IDToNameMap = {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// {DCType::Custom, &quot;meta&quot;}, ?</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {DCType::Identifier, <span class="stringliteral">&quot;identifier&quot;</span>},</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {DCType::Title, <span class="stringliteral">&quot;title&quot;</span>},</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {DCType::Language, <span class="stringliteral">&quot;language&quot;</span>},</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {DCType::Contributor, <span class="stringliteral">&quot;contributor&quot;</span>},</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {DCType::Coverage, <span class="stringliteral">&quot;coverage&quot;</span>},</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {DCType::Creator, <span class="stringliteral">&quot;creator&quot;</span>},</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {DCType::Date, <span class="stringliteral">&quot;date&quot;</span>},</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {DCType::Description, <span class="stringliteral">&quot;description&quot;</span>},</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {DCType::Format, <span class="stringliteral">&quot;format&quot;</span>},</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {DCType::Publisher, <span class="stringliteral">&quot;publisher&quot;</span>},</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {DCType::Relation, <span class="stringliteral">&quot;relation&quot;</span>},</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {DCType::Rights, <span class="stringliteral">&quot;rights&quot;</span>},</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {DCType::Source, <span class="stringliteral">&quot;source&quot;</span>},</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {DCType::Subject, <span class="stringliteral">&quot;subject&quot;</span>},</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {DCType::Type, <span class="stringliteral">&quot;type&quot;</span>}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> std::map&lt;string, RenditionPropertyBits&gt; RenditionSplitPropertyLookup = {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-landscape&quot;</span>, {<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;landscape&quot;</span>}},</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-portrait&quot;</span>, {<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;portrait&quot;</span>}},</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-auto&quot;</span>, {<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>}},</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#layout-reflowable&quot;</span>, {<span class="stringliteral">&quot;layout&quot;</span>, <span class="stringliteral">&quot;reflowable&quot;</span>}},</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#layout-pre-paginated&quot;</span>, {<span class="stringliteral">&quot;layout&quot;</span>, <span class="stringliteral">&quot;pre-paginated&quot;</span>}},</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-none&quot;</span>, {<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;none&quot;</span>}},</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-landscape&quot;</span>, {<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;landscape&quot;</span>}},</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-portrait&quot;</span>, {<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;portrait&quot;</span>}},</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-both&quot;</span>, {<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;both&quot;</span>}},</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-auto&quot;</span>, {<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>}},</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-auto&quot;</span>, {<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>}},</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-paginated&quot;</span>, {<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;paginated&quot;</span>}},</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-scrolled-doc&quot;</span>, {<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;scrolled-doc&quot;</span>}},</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-scrolled-continuous&quot;</span>, {<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;scrolled-continuous&quot;</span>}},</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-left&quot;</span>, {<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-left&quot;</span>}},</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-right&quot;</span>, {<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-right&quot;</span>}},</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#page-spread-center&quot;</span>, {<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-center&quot;</span>}}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;};</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">  118</a></span>&#160;<span class="preprocessor"></span><span class="keyword">typedef</span> std::pair&lt;string, DCType&gt; <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">  119</a></span>&#160;<span class="keyword">typedef</span> std::pair&lt;DCType, string&gt; <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">  120</a></span>&#160;<span class="keyword">typedef</span> std::pair&lt;string, RenditionPropertyBits&gt; <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">static</span> <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a> __to_code_pairs[16] = {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;meta&quot;</span>, DCType::Custom),</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;identifier&quot;</span>, DCType::Identifier),</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;title&quot;</span>, DCType::Title),</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;language&quot;</span>, DCType::Language),</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;contributor&quot;</span>, DCType::Contributor),</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;coverage&quot;</span>, DCType::Coverage),</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;creator&quot;</span>, DCType::Creator),</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;date&quot;</span>, DCType::Date),</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;description&quot;</span>, DCType::Description),</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;format&quot;</span>, DCType::Format),</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;publisher&quot;</span>, DCType::Publisher),</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;relation&quot;</span>, DCType::Relation),</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;rights&quot;</span>, DCType::Rights),</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;source&quot;</span>, DCType::Source),</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;subject&quot;</span>, DCType::Subject),</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="property_8cpp.xhtml#a1bf0fed0b022688bc2b5a17e78e3bf90">__to_code_pair</a>(<span class="stringliteral">&quot;type&quot;</span>, DCType::Type)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;};</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">static</span> std::map&lt;string, DCType&gt; NameToIDMap(&amp;__to_code_pairs[0], &amp;__to_code_pairs[15]);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">static</span> <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a> __to_str_pairs[15] = {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">//__to_code_pair(DCType::Custom, &quot;meta&quot;), ?</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Identifier, <span class="stringliteral">&quot;identifier&quot;</span>),</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Title, <span class="stringliteral">&quot;title&quot;</span>),</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Language, <span class="stringliteral">&quot;language&quot;</span>),</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Contributor, <span class="stringliteral">&quot;contributor&quot;</span>),</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Coverage, <span class="stringliteral">&quot;coverage&quot;</span>),</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Creator, <span class="stringliteral">&quot;creator&quot;</span>),</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Date, <span class="stringliteral">&quot;date&quot;</span>),</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Description, <span class="stringliteral">&quot;description&quot;</span>),</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Format, <span class="stringliteral">&quot;format&quot;</span>),</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Publisher, <span class="stringliteral">&quot;publisher&quot;</span>),</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Relation, <span class="stringliteral">&quot;relation&quot;</span>),</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Rights, <span class="stringliteral">&quot;rights&quot;</span>),</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Source, <span class="stringliteral">&quot;source&quot;</span>),</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Subject, <span class="stringliteral">&quot;subject&quot;</span>),</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="property_8cpp.xhtml#aca92833010196961cd55ce222769c7ef">__to_str_pair</a>(DCType::Type, <span class="stringliteral">&quot;type&quot;</span>)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">static</span> std::map&lt;DCType, string&gt; IDToNameMap(&amp;__to_str_pairs[0], &amp;__to_str_pairs[14]);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">static</span> <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a> __to_rendition_pairs[17] = {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-landscape&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;landscape&quot;</span>)),</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-portrait&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;portrait&quot;</span>)),</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#orientation-auto&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;orientation&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>)),</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#layout-reflowable&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;layout&quot;</span>, <span class="stringliteral">&quot;reflowable&quot;</span>)),</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#layout-pre-paginated&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;layout&quot;</span>, <span class="stringliteral">&quot;pre-paginated&quot;</span>)),</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-none&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;none&quot;</span>)),</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-landscape&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;landscape&quot;</span>)),</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-portrait&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;portrait&quot;</span>)),</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-both&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;both&quot;</span>)),</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#spread-auto&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;spread&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>)),</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-auto&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;auto&quot;</span>)),</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-paginated&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;paginated&quot;</span>)),</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-scrolled-doc&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;scrolled-doc&quot;</span>)),</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#flow-scrolled-continuous&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;flow&quot;</span>, <span class="stringliteral">&quot;scrolled-continuous&quot;</span>)),</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-left&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-left&quot;</span>)),</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-right&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-right&quot;</span>)),</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="property_8cpp.xhtml#af1532b5960871c0de420af9d7f0f5f9e">__to_rendition_pair</a>(<span class="stringliteral">&quot;http://www.idpf.org/vocab/rendition/#page-spread-center&quot;</span>, <a class="code" href="property_8cpp.xhtml#a71c393170c07339c21da426f631214bf">RenditionPropertyBits</a>(<span class="stringliteral">&quot;page-spread&quot;</span>, <span class="stringliteral">&quot;page-spread-center&quot;</span>))</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;};</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">static</span> std::map&lt;string, RenditionPropertyBits&gt; RenditionSplitPropertyLookup(&amp;__to_rendition_pairs[0], &amp;__to_rendition_pairs[16]);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">  186</a></span>&#160;<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">IRIForDCType</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">auto</span> found = IDToNameMap.find(type);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">if</span> ( found == IDToNameMap.end() )</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>(<a class="code" href="property_8h.xhtml#a456c470cdde3996aea35a44ef43386b8">DCMES_uri</a> + found-&gt;second);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="property_8h.xhtml#ab930660ff90f230244cb3082fd5a205a">  195</a></span>&#160;<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> <a class="code" href="property_8cpp.xhtml#ab930660ff90f230244cb3082fd5a205a">DCTypeFromIRI</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> DCType::Invalid;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">auto</span> found = NameToIDMap.find(iri.<a class="code" href="class_i_r_i.xhtml#a76913516cf7fa53447186fd8d1bba665" title="Retrieves any fragment part of a URL IRI.">Fragment</a>());</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">if</span> ( found == NameToIDMap.end() )</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> DCType::Custom;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">return</span> found-&gt;second;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;}</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="code" href="class_property.xhtml#a0504c7d05ee7365c5ea4c71065b17002">  205</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property.xhtml#a0504c7d05ee7365c5ea4c71065b17002">Property::ParseMetaElement</a>(shared_ptr&lt;xml::Node&gt; node)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">if</span> ( !<span class="keywordtype">bool</span>(node) )</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> ( !node-&gt;IsElementNode() )</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">auto</span> ns = node-&gt;Namespace();</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">if</span> ( ns != <span class="keyword">nullptr</span> &amp;&amp; ns-&gt;URI() == <a class="code" href="property_8h.xhtml#a456c470cdde3996aea35a44ef43386b8">DCMES_uri</a> )</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keyword">auto</span> found = NameToIDMap.find(node-&gt;Name());</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">if</span> ( found == NameToIDMap.end() )</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        _type = found-&gt;second;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        _identifier = <a class="code" href="class_i_r_i.xhtml">IRI</a>(<span class="keywordtype">string</span>(<a class="code" href="property_8h.xhtml#a456c470cdde3996aea35a44ef43386b8">DCMES_uri</a>) + node-&gt;Name());</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        _value = node-&gt;Content();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        _language = node-&gt;Language();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <a class="code" href="class_x_m_l_identifiable.xhtml#af68c38400011ff0dfa1ee4ad7a187d72">SetXMLIdentifier</a>(_getProp(node, <span class="stringliteral">&quot;id&quot;</span>));</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( node-&gt;Name() == <a class="code" href="property_8h.xhtml#a14f1a656a1911802ab879b67cb78d39a">MetaTagName</a> )</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordtype">string</span> <span class="keyword">property</span> = _getProp(node, <span class="stringliteral">&quot;property&quot;</span>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">if</span> ( property.empty() )</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        _type = DCType::Custom;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        _identifier = <a class="code" href="class_owned_by.xhtml#aa1ad6fa2756bb243bc88b4c26d186739">OwnedBy::Owner</a>()-&gt;PropertyIRIFromString(property);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        _value = node-&gt;Content();</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        _language = node-&gt;Language();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <a class="code" href="class_x_m_l_identifiable.xhtml#af68c38400011ff0dfa1ee4ad7a187d72">SetXMLIdentifier</a>(_getProp(node, <span class="stringliteral">&quot;id&quot;</span>));</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( ns != <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        _type = DCType::Custom;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        _identifier = <a class="code" href="class_i_r_i.xhtml">IRI</a>(<span class="keywordtype">string</span>(ns-&gt;URI()) + node-&gt;Name());</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        _value = node-&gt;Content();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        _language = node-&gt;Language();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <a class="code" href="class_x_m_l_identifiable.xhtml#af68c38400011ff0dfa1ee4ad7a187d72">SetXMLIdentifier</a>(_getProp(node, <span class="stringliteral">&quot;id&quot;</span>));</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="code" href="class_property.xhtml#a7c3add7b62c9d1c0ff4fda1fa6de9ef1">  255</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property.xhtml#a7c3add7b62c9d1c0ff4fda1fa6de9ef1">Property::SetDCType</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;{</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    _type = type;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">if</span> ( type == DCType::Invalid )</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        _identifier = <a class="code" href="class_i_r_i.xhtml">IRI</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( type != DCType::Custom )</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        _identifier = <a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">IRIForDCType</a>(type);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="code" href="class_property.xhtml#a3fdf62001a52ae822c8fb9d37eef43ea">  267</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property.xhtml#a3fdf62001a52ae822c8fb9d37eef43ea">Property::SetPropertyIdentifier</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;{</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment">// HACKINESS ALERT !!</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// *Some* of the properties in the rendition namespace are boolean values whose names contain hyphens.</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="comment">// *Some* others in that namespace are simply-named with a value; the name and the value are separated by a hyphen.</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="comment">// Le sigh...</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    _identifier = iri;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    _type = <a class="code" href="property_8cpp.xhtml#ab930660ff90f230244cb3082fd5a205a">DCTypeFromIRI</a>(iri);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">auto</span> iriString = iri.<a class="code" href="class_i_r_i.xhtml#a2698ea7751b5dc4bbec3b1902f7b0741">URIString</a>();</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">auto</span> found = RenditionSplitPropertyLookup.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(iriString);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">if</span> ( found != RenditionSplitPropertyLookup.end() )</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        _identifier.<a class="code" href="class_i_r_i.xhtml#a61e08c4e300f426b30ec2de21b7d936d">SetFragment</a>(found-&gt;second.first);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="class_property.xhtml#afb716f28b5f581b78e44c1959a09e9b6">SetValue</a>(found-&gt;second.second);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="code" href="class_property.xhtml#ab1c66e30d6e4865ec3563e16f1bc3b43">  284</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; <a class="code" href="class_property.xhtml#a27c4c6b3ca49febe23e0da49eb788131">Property::LocalizedValue</a>(<span class="keyword">const</span> std::locale&amp; locale)<span class="keyword"> const</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keywordtype">string</span> llang = <a class="code" href="property_8cpp.xhtml#a08e88215e3732874b592b9508edb2ded">__lang_from_locale</a>(locale);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// does this match the main value?</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">if</span> ( llang.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(_language) == 0 || _language.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(llang) == 0 )</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="comment">// main value is explicitly in this language</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="keywordflow">return</span> _value;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="comment">// alternate-script extensions</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="classshared__vector.xhtml">ExtensionList</a> scripts = <a class="code" href="class_property.xhtml#ad67afb34d5dd69d3e8339f16b5e1f52a">AllExtensionsWithIdentifier</a>(<a class="code" href="class_owned_by.xhtml#aa1ad6fa2756bb243bc88b4c26d186739">OwnedBy::Owner</a>()-&gt;PropertyIRIFromString(<span class="stringliteral">&quot;alternate-script&quot;</span>));</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">if</span> ( scripts.empty() )</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> _value;      <span class="comment">// no specializations for different languages/scripts</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> script : scripts )</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">if</span> ( llang.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(script-&gt;Language()) == 0 || script-&gt;Language().find(llang) == 0 )</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="comment">// they match</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="keywordflow">return</span> script-&gt;Value();</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="comment">// no values in requested localization, so use default</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> _value;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div>
<div class="line"><a name="l00312"></a><span class="lineno"><a class="code" href="class_property.xhtml#a05f99db412fefada26b5cb766f8d1c79">  312</a></span>&#160;<span class="keyword">const</span> shared_ptr&lt;PropertyExtension&gt; <a class="code" href="class_property.xhtml#a05f99db412fefada26b5cb766f8d1c79">Property::ExtensionWithIdentifier</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; ident)<span class="keyword"> const</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> extension : _extensions )</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">if</span> ( extension-&gt;PropertyIdentifier() == ident )</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">return</span> extension;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;}</div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="code" href="class_property.xhtml#ad67afb34d5dd69d3e8339f16b5e1f52a">  321</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">Property::ExtensionList</a> <a class="code" href="class_property.xhtml#ad67afb34d5dd69d3e8339f16b5e1f52a">Property::AllExtensionsWithIdentifier</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; ident)<span class="keyword"> const</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="classshared__vector.xhtml">ExtensionList</a> output;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> extension : _extensions )</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">if</span> ( extension-&gt;PropertyIdentifier() == ident )</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            output.push_back(extension);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;}</div>
<div class="line"><a name="l00331"></a><span class="lineno"><a class="code" href="class_property.xhtml#aaed90b8ea7a0b050a3a0cb75bb69a856">  331</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property.xhtml#aaed90b8ea7a0b050a3a0cb75bb69a856">Property::HasExtensionWithIdentifier</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; ident)<span class="keyword"> const</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span>&amp; ext : _extensions )</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span> ( ext-&gt;PropertyIdentifier() == ident )</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="code" href="class_property.xhtml#abe81819759a7efabe0b8c6db181536eb">  340</a></span>&#160;<span class="keyword">const</span> <a class="code" href="class_property.xhtml#ac7ed622d2bbf3212a01d19dd6e8c061c">Property::ValueMap</a> <a class="code" href="class_property.xhtml#abe81819759a7efabe0b8c6db181536eb">Property::DebugValues</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="class_property.xhtml#ac7ed622d2bbf3212a01d19dd6e8c061c">ValueMap</a> values;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    values.emplace_back(_identifier.<a class="code" href="class_i_r_i.xhtml#a1407182eb7fe89e5780e8f91ec380ead">IRIString</a>(), _value);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> extension : _extensions )</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        values.emplace_back(_Str(<span class="stringliteral">&quot;  &quot;</span>, extension-&gt;PropertyIdentifier().IRIString()), extension-&gt;Value());</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">return</span> values;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="property_8cpp.xhtml">property.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
