<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/property_holder.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('property__holder_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">property_holder.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="property__holder_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  property_holder.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2013-05-06.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="property__holder_8h.xhtml">property_holder.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include REGEX_INCLUDE</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span><span class="keyword">const</span> <a class="code" href="class_property_holder.xhtml#a1f1b1540902d99a167b58436790525a8" title="A lookup table for property vocabulary IRI stubs, indexed by prefix.">PropertyHolder::PropertyVocabularyMap</a> <a class="code" href="class_property_holder.xhtml#aeeccf437323f9f91ff427c8df6394738">PropertyHolder::ReservedVocabularies</a>({</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    { <span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#&quot;</span> },</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="comment">//{ &quot;rendition&quot;, &quot;http://www.idpf.org/vocab/rendition/#&quot; }, CANNOT BE INCLUDED, BECAUSE OF OPF package@prefix attribute definition, see Package::InstallPrefixesFromAttributeValue</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    { <span class="stringliteral">&quot;dcterms&quot;</span>, <span class="stringliteral">&quot;http://purl.org/dc/terms/&quot;</span> },</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    { <span class="stringliteral">&quot;marc&quot;</span>, <span class="stringliteral">&quot;http://id.loc.gov/vocabulary/&quot;</span> },</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    { <span class="stringliteral">&quot;media&quot;</span>, <span class="stringliteral">&quot;http://www.idpf.org/epub/vocab/overlays/#&quot;</span> },</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    { <span class="stringliteral">&quot;onix&quot;</span>, <span class="stringliteral">&quot;http://www.editeur.org/ONIX/book/codelists/current.html#&quot;</span> },</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    { <span class="stringliteral">&quot;xsd&quot;</span>, <span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema#&quot;</span> }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;});</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">const</span> std::map&lt;const string, bool&gt; <a class="code" href="class_property_holder.xhtml#a03a702cec1539d0078cc937d69ef0c77" title="The list of Core Media Types from OPF 3.0 ??5.1.">PropertyHolder::CoreMediaTypes</a>({</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// Image Types</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {<span class="stringliteral">&quot;image/gif&quot;</span>, <span class="keyword">true</span>},                            <span class="comment">// GIF Images</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {<span class="stringliteral">&quot;image/jpeg&quot;</span>, <span class="keyword">true</span>},                           <span class="comment">// JPEG Images</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {<span class="stringliteral">&quot;image/png&quot;</span>, <span class="keyword">true</span>},                            <span class="comment">// PNG Images</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {<span class="stringliteral">&quot;image/svg+xml&quot;</span>, <span class="keyword">true</span>},                        <span class="comment">// SVG Documents</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// Application Types</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {<span class="stringliteral">&quot;application/xhtml+xml&quot;</span>, <span class="keyword">true</span>},                <span class="comment">// XHTML Content Documents and the EPUB Navigation Document</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {<span class="stringliteral">&quot;application/x-dtbncx+xml&quot;</span>, <span class="keyword">true</span>},             <span class="comment">// The superceded NCX</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {<span class="stringliteral">&quot;application/vnd.ms-opentype&quot;</span>, <span class="keyword">true</span>},          <span class="comment">// OpenType fonts</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {<span class="stringliteral">&quot;application/font-woff&quot;</span>, <span class="keyword">true</span>},                <span class="comment">// WOFF fonts</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {<span class="stringliteral">&quot;application/smil+xml&quot;</span>, <span class="keyword">true</span>},                 <span class="comment">// EPUB Media Overlay documents</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {<span class="stringliteral">&quot;application/pls+xml&quot;</span>, <span class="keyword">true</span>},                  <span class="comment">// Text-to-Speech (TTS) Pronunciation lexicons</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Audio Types</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {<span class="stringliteral">&quot;audio/mpeg&quot;</span>, <span class="keyword">true</span>},                           <span class="comment">// MP3 audio</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {<span class="stringliteral">&quot;audio/mp4&quot;</span>, <span class="keyword">true</span>},                            <span class="comment">// AAC LC audio using MP4 container</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// Text Types</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {<span class="stringliteral">&quot;text/css&quot;</span>, <span class="keyword">true</span>},                             <span class="comment">// EPUB Style Sheets</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {<span class="stringliteral">&quot;text/javascript&quot;</span>, <span class="keyword">true</span>}                       <span class="comment">// Scripts</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;});</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">   60</a></span>&#160;<span class="preprocessor"></span><span class="keyword">typedef</span> PropertyHolder::PropertyVocabularyMap::value_type <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">   61</a></span>&#160;<span class="keyword">typedef</span> std::pair&lt;const string, bool&gt; <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> __vmap_t __vmap_values[6] = {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#&quot;</span>),</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">//__vmap_t(&quot;rendition&quot;, &quot;http://www.idpf.org/vocab/rendition/#&quot;), CANNOT BE INCLUDED, BECAUSE OF OPF package@prefix attribute definition, see Package::InstallPrefixesFromAttributeValue</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;dcterms&quot;</span>, <span class="stringliteral">&quot;http://purl.org/dc/terms/&quot;</span>),</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;marc&quot;</span>, <span class="stringliteral">&quot;http://id.loc.gov/vocabulary/&quot;</span>),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;media&quot;</span>, <span class="stringliteral">&quot;http://www.idpf.org/epub/vocab/overlays/#&quot;</span>),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;onix&quot;</span>, <span class="stringliteral">&quot;http://www.editeur.org/ONIX/book/codelists/current.html#&quot;</span>),</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#a6e660aa9c6a94df10780709a25935bf8">__vmap_t</a>(<span class="stringliteral">&quot;xsd&quot;</span>, <span class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema#&quot;</span>)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;};</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> __mtype_t __mtype_values[14] = {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="comment">// Image Types</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;image/gif&quot;</span>, <span class="keyword">true</span>),                            <span class="comment">// GIF Images</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;image/jpeg&quot;</span>, <span class="keyword">true</span>),                           <span class="comment">// JPEG Images</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;image/png&quot;</span>, <span class="keyword">true</span>),                            <span class="comment">// PNG Images</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;image/svg+xml&quot;</span>, <span class="keyword">true</span>),                        <span class="comment">// SVG Documents</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Application Types</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/xhtml+xml&quot;</span>, <span class="keyword">true</span>),                <span class="comment">// XHTML Content Documents and the EPUB Navigation Document</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/x-dtbncx+xml&quot;</span>, <span class="keyword">true</span>),             <span class="comment">// The superceded NCX</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/vnd.ms-opentype&quot;</span>, <span class="keyword">true</span>),          <span class="comment">// OpenType fonts</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/font-woff&quot;</span>, <span class="keyword">true</span>),                <span class="comment">// WOFF fonts</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/smil+xml&quot;</span>, <span class="keyword">true</span>),                 <span class="comment">// EPUB Media Overlay documents</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;application/pls+xml&quot;</span>, <span class="keyword">true</span>),                  <span class="comment">// Text-to-Speech (TTS) Pronunciation lexicons</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Audio Types</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;audio/mpeg&quot;</span>, <span class="keyword">true</span>),                           <span class="comment">// MP3 audio</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;audio/mp4&quot;</span>, <span class="keyword">true</span>),                            <span class="comment">// AAC LC audio using MP4 container</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// Text Types</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;text/css&quot;</span>, <span class="keyword">true</span>),                             <span class="comment">// EPUB Style Sheets</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="property__holder_8cpp.xhtml#ac7470d35be8bff67caffd8b121da1b9a">__mtype_t</a>(<span class="stringliteral">&quot;text/javascript&quot;</span>, <span class="keyword">true</span>)                       <span class="comment">// Scripts</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;};</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">const</span> <a class="code" href="class_property_holder.xhtml#a1f1b1540902d99a167b58436790525a8" title="A lookup table for property vocabulary IRI stubs, indexed by prefix.">PropertyHolder::PropertyVocabularyMap</a> <a class="code" href="class_property_holder.xhtml#aeeccf437323f9f91ff427c8df6394738">PropertyHolder::ReservedVocabularies</a>(&amp;__vmap_values[0], &amp;__vmap_values[5]);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">const</span> std::map&lt;const string, bool&gt; <a class="code" href="class_property_holder.xhtml#a03a702cec1539d0078cc937d69ef0c77" title="The list of Core Media Types from OPF 3.0 ??5.1.">PropertyHolder::CoreMediaTypes</a>(&amp;__mtype_values[0], &amp;__mtype_values[13]);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a0f2fbde109014a5b67fea30901a3a87a">   98</a></span>&#160;<a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp; <a class="code" href="class_property_holder.xhtml#a0f2fbde109014a5b67fea30901a3a87a">PropertyHolder::operator=</a>(<span class="keyword">const</span> <a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp; o)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    _parent = o._parent;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    _properties = o._properties;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    _vocabularyLookup = o._vocabularyLookup;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a1d2083c8d3af3d7fd4dace0234450b2d">  105</a></span>&#160;<a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp; <a class="code" href="class_property_holder.xhtml#a0f2fbde109014a5b67fea30901a3a87a">PropertyHolder::operator=</a>(<a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp;&amp; o)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    _parent = std::move(o._parent);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    _properties = std::move(o._properties);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    _vocabularyLookup = std::move(o._vocabularyLookup);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#aabbde2802d7f86ffdccdca0b4764fa3e">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#aabbde2802d7f86ffdccdca0b4764fa3e">PropertyHolder::AppendProperties</a>(<span class="keyword">const</span> <a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp; o, shared_ptr&lt;PropertyHolder&gt; sharedMe)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span>&amp; prop : o._properties )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        prop-&gt;SetOwner(sharedMe);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    _properties.insert(_properties.end(), o._properties.begin(), o._properties.end());</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a9d56e3eabcab91bc398b97a191a616a3">  121</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#aabbde2802d7f86ffdccdca0b4764fa3e">PropertyHolder::AppendProperties</a>(<a class="code" href="class_property_holder.xhtml">PropertyHolder</a>&amp;&amp; o, shared_ptr&lt;PropertyHolder&gt; sharedMe)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span>&amp; i : o._properties )</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        i-&gt;SetOwner(sharedMe);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        _properties.push_back(std::move(i));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a9cd13a6005f6bff261360c96af0d84c3">  129</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#a9cd13a6005f6bff261360c96af0d84c3">PropertyHolder::RemoveProperty</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> pos = _properties.begin(), end = _properties.end(); pos != end; ++pos )</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">if</span> ( (*pos)-&gt;PropertyIdentifier() == iri )</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            _properties.erase(pos);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a91db17cd288103f7772c3d99b1ff5caa">  140</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#a9cd13a6005f6bff261360c96af0d84c3">PropertyHolder::RemoveProperty</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a>(reference, prefix);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="class_property_holder.xhtml#a9cd13a6005f6bff261360c96af0d84c3">RemoveProperty</a>(iri);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#aa7f56dc2e10314b0f6ba34c2989eee9c">  147</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#aa7f56dc2e10314b0f6ba34c2989eee9c">PropertyHolder::ErasePropertyAt</a>(<a class="code" href="class_property_holder.xhtml#a60bf75abba08ca8848965e90b9dcee41">size_type</a> idx)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> ( idx &gt; _properties.size() )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;ErasePropertyAt: Index out of range&quot;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">auto</span> pos = _properties.begin();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    pos += idx;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    _properties.erase(pos);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">  156</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">IRIForDCType</a>(type);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a>(iri, lookupParents);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#ad678449d25da15f9839c5eca486b9e88">  161</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp;i : _properties )</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">if</span> ( i-&gt;PropertyIdentifier() == iri )</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">if</span> (lookupParents)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keyword">auto</span> parent = _parent.lock();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">if</span> ( parent )</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> parent-&gt;ContainsProperty(iri, lookupParents);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a2f6d4e094ac3551e09df26709a60d979">  178</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a>(reference, prefix);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a>(iri, lookupParents);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#ad30431e76dd9330275bcd9f11ee36745">  185</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type)<span class="keyword"> const</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a>(type, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a329e0402334717fa2465bd76e1d7155d">  190</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)<span class="keyword"> const</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a>(iri, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a248d8195d8aa1a606ed813eabb379651">  195</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">PropertyHolder::ContainsProperty</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix)<span class="keyword"> const</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a>(reference, prefix, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">  200</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">IRIForDCType</a>(type);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a>(iri, lookupParents);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a327c9c840c576193ab06391748d998be">  205</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="classshared__vector.xhtml">PropertyList</a> output;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="class_property_holder.xhtml#a8a7d13e559fd79cff69dfe8f41bd3ba1">BuildPropertyList</a>(output, iri);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> (lookupParents)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keyword">auto</span> parent = _parent.lock();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">if</span> ( parent )</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="comment">//parent-&gt;BuildPropertyList(output, iri);</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> pList = parent-&gt;PropertiesMatching(iri, lookupParents);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            output.insert(output.end(), pList.begin(), pList.end());</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a78b49527ae4ea92f724238445315f674">  224</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a>(reference, prefix);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14" title="An array of Metadata items, in document order.">PropertyList</a>();</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a>(iri, lookupParents);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#ac6a344909be6ebe10519f4a04852c752">  233</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type)<span class="keyword"> const</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a>(type, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a05dcb5d0073dfd07f0e73aeb221efcda">  238</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)<span class="keyword"> const</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a>(iri, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#aa6d4fb162a61a9f079453a0ee24f152a">  243</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classshared__vector.xhtml">PropertyHolder::PropertyList</a> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertyHolder::PropertiesMatching</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix)<span class="keyword"> const</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a>(reference, prefix, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;}</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">  248</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="group__utilities.xhtml#ga4e601c61468807e4a8c5a80e49cc9e45">IRIForDCType</a>(type);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a>(iri, lookupParents);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#ab5ae72ada57ce05942555853f6a9aa52">  253</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// DEBUG</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">auto</span> iriString = iri.<a class="code" href="class_i_r_i.xhtml#a2698ea7751b5dc4bbec3b1902f7b0741">URIString</a>();</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp;i : _properties )</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span> ( i-&gt;PropertyIdentifier() == iri )</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">if</span> (lookupParents)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">auto</span> parent = _parent.lock();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">if</span> ( parent )</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">return</span> parent-&gt;PropertyMatching(iri, lookupParents);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a57d0f1c82327b749cdf5758176e22ccd">  273</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix, <span class="keywordtype">bool</span> lookupParents)<span class="keyword"> const</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> iri = <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a>(reference, prefix);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a>(iri, lookupParents);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#afc0dc4e6736bc40b570b596a21994a81">  282</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<a class="code" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834" title="Enumerated constants for the DCMES metadata attributes used by EPUB 3.">DCType</a> type)<span class="keyword"> const</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a>(type, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#acc637d07d39db17804ecf0298b9e6894">  287</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)<span class="keyword"> const</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a>(iri, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#aa7307d6982e0fb16991ea72c6d9baaf3">  292</a></span>&#160;<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyHolder::PropertyMatching</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix)<span class="keyword"> const</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a>(reference, prefix, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#ade84a395de1f0557a3a870ea46340c79">  297</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#ade84a395de1f0557a3a870ea46340c79">PropertyHolder::RegisterPrefixIRIStem</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;prefix, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;iriStem)</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;{</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keyword">auto</span> found = _vocabularyLookup.find(prefix);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">if</span> ( found == _vocabularyLookup.end() )</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        _vocabularyLookup[prefix] = iriStem;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">  305</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">PropertyHolder::MakePropertyIRI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;reference, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; prefix)<span class="keyword"> const</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keyword">auto</span> found = _vocabularyLookup.find(prefix);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">if</span> ( found == _vocabularyLookup.end() )</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keyword">auto</span> parent = _parent.lock();</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">if</span> ( parent )</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">return</span> parent-&gt;MakePropertyIRI(reference, prefix);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>();</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>(found-&gt;second + reference);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a0b197fcac3b27605336472c6e5696314">  318</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_property_holder.xhtml#a0b197fcac3b27605336472c6e5696314">PropertyHolder::PropertyIRIFromString</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;attrValue)<span class="keyword"> const</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keyword">static</span> REGEX_NS::regex re(<span class="stringliteral">&quot;^(?:(.+?):)?(.+)$&quot;</span>);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    REGEX_NS::smatch pieces;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">if</span> ( REGEX_NS::regex_match(attrValue.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>(), pieces, re) == <span class="keyword">false</span> )</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(_Str(<span class="stringliteral">&quot;Attribute &#39;&quot;</span>, attrValue, <span class="stringliteral">&quot;&#39; doesn&#39;t look like a property name to me&quot;</span>));</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="comment">// there are two captures, at indices 1 and 2</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a>(pieces.str(2), pieces.str(1));</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="code" href="class_property_holder.xhtml#a8a7d13e559fd79cff69dfe8f41bd3ba1">  328</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_property_holder.xhtml#a8a7d13e559fd79cff69dfe8f41bd3ba1">PropertyHolder::BuildPropertyList</a>(<a class="code" href="classshared__vector.xhtml">PropertyList</a>&amp; output, <span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; iri)<span class="keyword"> const</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">if</span> ( iri.<a class="code" href="class_i_r_i.xhtml#aa8667f24a3cf330b373d7a93c120f16d" title="Returns true if the IRI is empty.">IsEmpty</a>() )</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span>&amp; i : _properties )</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span> ( i-&gt;PropertyIdentifier() == iri || i-&gt;HasExtensionWithIdentifier(iri) )</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            output.push_back(i);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="property__holder_8cpp.xhtml">property_holder.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
