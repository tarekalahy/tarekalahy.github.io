<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/cfi.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('cfi_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">cfi.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cfi_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  cfi.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-12-10.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef __ePub3__cfi__</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __ePub3__cfi__</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;ePub3/epub3.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="utfstring_8h.xhtml">ePub3/utilities/utfstring.h</a>&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_c_f_i.xhtml">CFI</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;#if <a class="code" href="__platform_8h.xhtml#a34ebb2c17c03dd85efc5bed561bda851">EPUB_PLATFORM</a>(WINRT)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    : <span class="keyword">public</span> NativeBridge</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span>{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126">   46</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126" title="Value for side-bias for a character location.">SideBias</a> : uint8_t</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126abe948a5257d63f3cfb2a4a6dee216191">   48</a></span>&#160;        <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126abe948a5257d63f3cfb2a4a6dee216191">Unspecified</a>     = 0,</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126a45e8d3597379abd03853c9f7843c9ba0">   49</a></span>&#160;        <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126a45e8d3597379abd03853c9f7843c9ba0">Before</a>,</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126a002e365ca374367a8a5a28a633049df9">   50</a></span>&#160;        <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126a002e365ca374367a8a5a28a633049df9">After</a>,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    };</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f">   56</a></span>&#160;                    <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>() : <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>(), <a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>(), <a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>(), <a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>(0) {}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; base, <span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; start, <span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; end);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a2d9cf96b27a57b746f6a585d85555646">   74</a></span>&#160;                    <a class="code" href="class_c_f_i.xhtml#a2d9cf96b27a57b746f6a585d85555646" title="Create a copy of an existing CFI.">CFI</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o) : <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>(o.<a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>), <a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>(o.<a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>), <a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>(o.<a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>), <a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>(o.<a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>) {}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o, <span class="keywordtype">size_t</span> fromIndex);</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a360354736a883f64ebe65e56a24121be">   95</a></span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_c_f_i.xhtml#a360354736a883f64ebe65e56a24121be" title="C++11 move constructor.">CFI</a>(<a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;&amp; o) : <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>(std::move(o.<a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>)), <a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>(std::move(o.<a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>)), <a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>(std::move(o.<a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>)), <a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>(o.<a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>) {}</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a9c5605a324bc14a10b8e92d300f003a7">   96</a></span>&#160;    <span class="keyword">virtual</span>         <a class="code" href="class_c_f_i.xhtml#a9c5605a324bc14a10b8e92d300f003a7">~CFI</a>() {}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#ab93b9d0d5ebb03172b019391eb1b3bb6">  102</a></span>&#160;    <span class="keywordtype">string</span>          <a class="code" href="class_c_f_i.xhtml#ab93b9d0d5ebb03172b019391eb1b3bb6">String</a>()<span class="keyword">                const           </span>{ <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a44c777d4c81b85e2d83c3c9d26897346" title="Generates a string representation of the CFI between two components.">Stringify</a>(<a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>.begin(), <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>.end()); }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    </div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#ad31a9cbd452291ebca1c3de4044f24cd">  108</a></span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#ad31a9cbd452291ebca1c3de4044f24cd">IsRangeTriplet</a>()<span class="keyword">        const           </span>{ <span class="keywordflow">return</span> (<a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a> &amp; <a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76a35832fb97f725552f78abcddd624c9f4" title="The CFI represents a range, not a location.">RangeTriplet</a>) == <a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76a35832fb97f725552f78abcddd624c9f4" title="The CFI represents a range, not a location.">RangeTriplet</a>; }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a63626f95caa06f17410b56a3daba9d49">  114</a></span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#a63626f95caa06f17410b56a3daba9d49">Empty</a>()<span class="keyword">                 const           </span>{ <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>.empty(); }</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#ae488698978b6a1a1f2e838fcf5cd6cb5">  117</a></span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_c_f_i.xhtml#ae488698978b6a1a1f2e838fcf5cd6cb5" title="Clears a CFI, making it empty.">Clear</a>()                                 { <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>.clear(); }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#a1b2999044ccca894259fc32f5aa701fe" title="Determines whether two CFIs are equal.">operator==</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o)        <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#a1b2999044ccca894259fc32f5aa701fe" title="Determines whether two CFIs are equal.">operator==</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#ab602bff9236527b58718ccc791c927f3" title="Determines whether two CFIs are inequal.">operator!=</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o)        <span class="keyword">const</span>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_c_f_i.xhtml#ab602bff9236527b58718ccc791c927f3" title="Determines whether two CFIs are inequal.">operator!=</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o);</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#ab17aafc7a6e55154d0bc46ae8226fddc">  140</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#ab17aafc7a6e55154d0bc46ae8226fddc">operator=</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o)                 { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(o); }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(<a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;&amp; o);</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#af2521139bf8643780af63df93fac30ae">  146</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#af2521139bf8643780af63df93fac30ae">operator=</a>(<a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;&amp; o)                      { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(std::move(o)); }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; o, <span class="keywordtype">size_t</span> fromIndex);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a00707007223ae140bdf528751836870a">  156</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#a00707007223ae140bdf528751836870a" title="Assigns a new value to a CFI from a CFI string representation.">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)            { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(str); }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#ace826a7bbe57824f64513f009a92f66c" title="Assigns a new value to a CFI by copying.">Assign</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#a5de00ced731f26121f7b35d63104d329">Append</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; cfi);</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a4454a25046ee4db03d506d11059e5a23">  167</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#a4454a25046ee4db03d506d11059e5a23">operator+=</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; cfi)              { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a5de00ced731f26121f7b35d63104d329">Append</a>(cfi); }</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a85598a80ab8bef6886b9e6c36f7f7ada">  168</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>             <a class="code" href="class_c_f_i.xhtml#a85598a80ab8bef6886b9e6c36f7f7ada">operator+</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp; cfi)<span class="keyword">       const   </span>{ <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>(*this).Append(cfi); }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#a5de00ced731f26121f7b35d63104d329">Append</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a62cd2255d771812dbe70c96403a93075">  177</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>&amp;            <a class="code" href="class_c_f_i.xhtml#a62cd2255d771812dbe70c96403a93075">operator+=</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)           { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a5de00ced731f26121f7b35d63104d329">Append</a>(str); }</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a439b7376502b72422bac62fe10552609">  178</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a>             <a class="code" href="class_c_f_i.xhtml#a439b7376502b72422bac62fe10552609">operator+</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)<span class="keyword">    const   </span>{ <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a7becdf3b1ad8f7dd2d8d7859cc6a396f" title="Create an empty CFI.">CFI</a>(*this).Append(str); }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    </div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a31a3811cae4157c1dedcdfd0d1317941">  182</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126" title="Value for side-bias for a character location.">SideBias</a>        <a class="code" href="class_c_f_i.xhtml#a31a3811cae4157c1dedcdfd0d1317941" title="Returns the side-bias of a character-offset CFI.">CharacterSideBias</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>     { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>.back().sideBias; }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    </div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml">  186</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml" title="The exception thrown when an invalid CFI string is encountered.">InvalidCFI</a> : <span class="keyword">public</span> std::logic_error</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#a941398e3cd29491bd9db7044eebfb4fa">  189</a></span>&#160;        <a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#a941398e3cd29491bd9db7044eebfb4fa">InvalidCFI</a>(<span class="keyword">const</span> std::string&amp; str) <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> : std::logic_error(str) {}</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#ace68be6eb1287112f9df87f14c480260">  190</a></span>&#160;        <a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#ace68be6eb1287112f9df87f14c480260">InvalidCFI</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * str) <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> : std::logic_error(str) {}</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#a916b54e05002fb8e33a52fd3b5826508">  191</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_c_f_i_1_1_invalid_c_f_i.xhtml#a916b54e05002fb8e33a52fd3b5826508">~InvalidCFI</a>() <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> {}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    };</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml">  195</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml" title="An attempt was made to append components to a ranged CFI, which is not valid.">RangedCFIAppendAttempt</a> : <span class="keyword">public</span> std::logic_error</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a42ff8499667ae7fc76cf3e50d4693392">  198</a></span>&#160;        <a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a42ff8499667ae7fc76cf3e50d4693392">RangedCFIAppendAttempt</a>(<span class="keyword">const</span> std::string&amp; str) <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> : std::logic_error(str) {}</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a9bf8a8e77c673dd73ebc45800b51a5ac">  199</a></span>&#160;        <a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a9bf8a8e77c673dd73ebc45800b51a5ac">RangedCFIAppendAttempt</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * str) <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> : std::logic_error(str) {}</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a4ac8c7bd56deed1d1a20d114a7aecd46">  200</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_c_f_i_1_1_ranged_c_f_i_append_attempt.xhtml#a4ac8c7bd56deed1d1a20d114a7aecd46">~RangedCFIAppendAttempt</a>() <a class="code" href="__config_8h.xhtml#a5cc0c8cf0bf0c9d3912c22574b74faa3">_GCC_NOTHROW</a> {}</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    };</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml">  206</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7">  210</a></span>&#160;        <span class="keyword">enum</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7" title="Bitfield values identifying special status for a CFI component.">Flags</a> : uint8_t</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        {</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a8f735f56981c215661b2eb19bad4815c">  212</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a8f735f56981c215661b2eb19bad4815c" title="The component contains an id or idref qualifier, i.e. [bob]">Qualifier</a>        = 1&lt;&lt;0,    </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3f17a74da6656c1ed333f45debb5d0d0">  213</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3f17a74da6656c1ed333f45debb5d0d0" title="The component has a character offset value, i.e. :12">CharacterOffset</a>  = 1&lt;&lt;1,    </div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ac7a778dec5fd511a034804ec7439ffea">  214</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ac7a778dec5fd511a034804ec7439ffea" title="The component has a temporal offset value, i.e. ~87.24.">TemporalOffset</a>   = 1&lt;&lt;2,    </div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a29fb9c2847983628d4d1d913f5b11a82">  215</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a29fb9c2847983628d4d1d913f5b11a82" title="The component has a spatial offset value, i.e. @150:220">SpatialOffset</a>    = 1&lt;&lt;3,    </div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a0c94056a1857f522fd6e7f3c94467de9">  216</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a0c94056a1857f522fd6e7f3c94467de9" title="The component specifies stepping into the identified node (i.e. !)">Indirector</a>       = 1&lt;&lt;4,    </div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3ac07b8401cd61c7915bb2ee5915f996">  217</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3ac07b8401cd61c7915bb2ee5915f996" title="The component contains a text qualifier, i.e. [this]">TextQualifier</a>    = 1&lt;&lt;5,    </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            </div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a88393ba0661fd4cb8ad7460295f846b3">  219</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a88393ba0661fd4cb8ad7460295f846b3" title="Component contains both temporal and spatial offsets.">SpatialTemporalOffset</a>   = <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ac7a778dec5fd511a034804ec7439ffea" title="The component has a temporal offset value, i.e. ~87.24.">TemporalOffset</a>|<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a29fb9c2847983628d4d1d913f5b11a82" title="The component has a spatial offset value, i.e. @150:220">SpatialOffset</a>, </div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ad21d960c666bee77003ae15d5db091eb">  220</a></span>&#160;            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ad21d960c666bee77003ae15d5db091eb">OffsetsMask</a>             = <a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3f17a74da6656c1ed333f45debb5d0d0" title="The component has a character offset value, i.e. :12">CharacterOffset</a>|<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ac7a778dec5fd511a034804ec7439ffea" title="The component has a temporal offset value, i.e. ~87.24.">TemporalOffset</a>|<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a29fb9c2847983628d4d1d913f5b11a82" title="The component has a spatial offset value, i.e. @150:220">SpatialOffset</a>,</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        };</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml">  225</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        {</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a332733bd309798c6152951be90808959">  227</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a332733bd309798c6152951be90808959">x</a>;</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a6bfc5eeb1534590e1da10f96c46230ce">  228</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a6bfc5eeb1534590e1da10f96c46230ce">y</a>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="comment">// impementations are out-of-line, since Xcode does weird things if operator &lt; is defined inline</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#afc2f6f67406f9472ed79b0aa264c23a7">operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a82e50fd503004bf9f771a6ae5459bac2">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#adfbc6fe74c661b7df22888854892bae0">operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a31461e8940099f8e24d5ea025f60da3f">operator&lt;=</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a78a8731d8ab24197520d451101608d7d">operator==</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordtype">bool</span>    <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml#a3dd9f3fbd96e58639b2051b765037527">operator!=</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>&amp; o)  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        };</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        </div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814">  240</a></span>&#160;        uint8_t         <a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>;              </div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389">  241</a></span>&#160;        uint32_t        <a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>;          </div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb">  242</a></span>&#160;        <span class="keywordtype">string</span>          <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>;          </div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd">  243</a></span>&#160;        uint32_t        <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>;    </div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97">  244</a></span>&#160;        <span class="keywordtype">float</span>           <a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>;     </div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745">  245</a></span>&#160;        <a class="code" href="struct_c_f_i_1_1_component_1_1_point.xhtml" title="A simple structure which defines a spatial location and can perform comparisons.">Point</a>           <a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>;      </div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da">  246</a></span>&#160;        <span class="keywordtype">string</span>          <a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>;      </div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">  247</a></span>&#160;        <a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126" title="Value for side-bias for a character location.">SideBias</a>        <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <a class="code" href="struct_c_f_i_1_1_component.xhtml#a507bf7f9f9c0708c16be0a606036e1ad" title="Creates a component from a string.">Component</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a1ddad6d7a0033d074211ee5c900cf6bf">  256</a></span>&#160;        <a class="code" href="struct_c_f_i_1_1_component.xhtml#a1ddad6d7a0033d074211ee5c900cf6bf" title="Creates a numeric component with no flags.">Component</a>(uint32_t __nodeIdx=0) : <a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>(0), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>(__nodeIdx), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>(), <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>(0), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>(), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>(), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>(), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>(<a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126" title="Value for side-bias for a character location.">SideBias</a>::<a class="code" href="class_c_f_i.xhtml#a796b008d301c9236ef9474f440abf126abe948a5257d63f3cfb2a4a6dee216191">Unspecified</a>) {}</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a131648d9105c76880371c80dd4d31e57">  259</a></span>&#160;                        <a class="code" href="struct_c_f_i_1_1_component.xhtml#a131648d9105c76880371c80dd4d31e57" title="Copy constructor.">Component</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp; o) : <a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>) {}</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ae47dbb1e534894c1c79bfd4a570f07d0">  262</a></span>&#160;                        <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae47dbb1e534894c1c79bfd4a570f07d0" title="Move constructor.">Component</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp;&amp; o) : <a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a6a5f6d076c5974b50cd1e681edf0c389" title="The numeric index for the node identified by component.">nodeIndex</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>(std::move(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#ac736394a3bb33910f8546daf06fcf1bb" title="The value of any id or idref qualifier.">qualifier</a>)), <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#aa3a893ad3d3fcf309488e6c756b5b9dd" title="The value of any character offset.">characterOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a31a3bb71dd3668de22c6af10f354ac97" title="The value, in seconds, of any temporal offset.">temporalOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a4fdb6e7ba7de25cdc9aa73247fe56745" title="The value of any spatial offset.">spatialOffset</a>), <a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>(std::move(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#a86ed88c311b4bb9bc159cef74b84a4da" title="The content of any character location qualifier.">textQualifier</a>)), <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>(o.<a class="code" href="struct_c_f_i_1_1_component.xhtml#ac0822e9f76f9c6602aebe912cb4f4ffe">sideBias</a>) {}</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ac2b2491658adf5c16f736cd1799bf0e7">  263</a></span>&#160;                        <a class="code" href="struct_c_f_i_1_1_component.xhtml#ac2b2491658adf5c16f736cd1799bf0e7">~Component</a>() {};</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a7c11bfd1f85fa4b2be1e1ce1470cba6f" title="Compare conpoments for equality.">operator==</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp; o)      <span class="keyword">const</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a8834788cfbd607592f27f63699764233">operator!=</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp; o)      <span class="keyword">const</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp;      <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa860a770fb59910b67d000dde24c3c64" title="Assign a new value to a component.">operator=</a>(<span class="keyword">const</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp; o);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp;      <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa860a770fb59910b67d000dde24c3c64" title="Assign a new value to a component.">operator=</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp;&amp; o);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <a class="code" href="struct_c_f_i_1_1_component.xhtml" title="A single component of a CFI.">Component</a>&amp;      <a class="code" href="struct_c_f_i_1_1_component.xhtml#aa860a770fb59910b67d000dde24c3c64" title="Assign a new value to a component.">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        </div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">  276</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7" title="Bitfield values identifying special status for a CFI component.">Flags</a> flag)                 <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> (<a class="code" href="struct_c_f_i_1_1_component.xhtml#a505ff8273bdd69a1e1d352501694b814" title="The bitfield containing values from the Flags enumeration.">flags</a> &amp; flag) == flag; }</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a2ffbcb6d624a7a237bdeaec171ae5f38">  277</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a2ffbcb6d624a7a237bdeaec171ae5f38">HasQualifier</a>()                      const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a8f735f56981c215661b2eb19bad4815c" title="The component contains an id or idref qualifier, i.e. [bob]">Qualifier</a>); }</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a421cb08acc3a6957c3eb23655e610aaa">  278</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a421cb08acc3a6957c3eb23655e610aaa">HasCharacterOffset</a>()                const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3f17a74da6656c1ed333f45debb5d0d0" title="The component has a character offset value, i.e. :12">CharacterOffset</a>); }</div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#aab8752f486b3a8be8e17f1d6bef8dea6">  279</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#aab8752f486b3a8be8e17f1d6bef8dea6">HasTemporalOffset</a>()                 const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7ac7a778dec5fd511a034804ec7439ffea" title="The component has a temporal offset value, i.e. ~87.24.">TemporalOffset</a>); }</div>
<div class="line"><a name="l00280"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a4b43731988a42c3ffb5dfe4f5647b6b7">  280</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a4b43731988a42c3ffb5dfe4f5647b6b7">HasSpatialOffset</a>()                  const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a29fb9c2847983628d4d1d913f5b11a82" title="The component has a spatial offset value, i.e. @150:220">SpatialOffset</a>); }</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#aaa5359925f91c05098d6aef2e3fbad57">  281</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#aaa5359925f91c05098d6aef2e3fbad57">IsIndirector</a>()                      const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a0c94056a1857f522fd6e7f3c94467de9" title="The component specifies stepping into the identified node (i.e. !)">Indirector</a>); }</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#ad886fa9b248079c7a4d286aceb934200">  282</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#ad886fa9b248079c7a4d286aceb934200">HasTextQualifier</a>()                  const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a3ac07b8401cd61c7915bb2ee5915f996" title="The component contains a text qualifier, i.e. [this]">TextQualifier</a>); }</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="code" href="struct_c_f_i_1_1_component.xhtml#a3f9f284f4e32d11b740ee9231fbb8d35">  283</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="struct_c_f_i_1_1_component.xhtml#a3f9f284f4e32d11b740ee9231fbb8d35">HasSpatialTemporalOffset</a>()          const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> { <span class="keywordflow">return</span> <a class="code" href="struct_c_f_i_1_1_component.xhtml#ae02a0111c7ffeeefd0ecac0d1f74313e">HasFlag</a>(<a class="code" href="struct_c_f_i_1_1_component.xhtml#a9a17b1dcaec33fc163889bbfc1df5de7a88393ba0661fd4cb8ad7460295f846b3" title="Component contains both temporal and spatial offsets.">SpatialTemporalOffset</a>); }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordtype">void</span>            Parse(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    };</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    </div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76">  291</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76" title="Options bitfield for a CFI.">Options</a> : uint8_t</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    {</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76a35832fb97f725552f78abcddd624c9f4">  293</a></span>&#160;        <a class="code" href="class_c_f_i.xhtml#a7121b1b6486daa52d05008910061af76a35832fb97f725552f78abcddd624c9f4" title="The CFI represents a range, not a location.">RangeTriplet</a>        = 1&lt;&lt;0,     </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    };</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    </div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">  296</a></span>&#160;    <span class="keyword">typedef</span> std::vector&lt;Component&gt;  <a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">ComponentList</a>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    </div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad">  298</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">ComponentList</a>   <a class="code" href="class_c_f_i.xhtml#a38df213f93f02fe017f296fa943d41ad" title="The CFI&#39;s discrete components.">_components</a>;        </div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7">  299</a></span>&#160;    uint8_t         <a class="code" href="class_c_f_i.xhtml#a011e2abc5d9cdc57023fde67f83ee8f7" title="CFI options, i.e. Options::RangeTriplet.">_options</a>;           </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    </div>
<div class="line"><a name="l00301"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971">  301</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">ComponentList</a>   <a class="code" href="class_c_f_i.xhtml#a0f07b12916dae8c92a4f94c8dae4d971" title="The components for the start of a range.">_rangeStart</a>;        </div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479">  302</a></span>&#160;    <a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">ComponentList</a>   <a class="code" href="class_c_f_i.xhtml#a850ed4827ffe886dc2cd3314e3c8d479" title="The components for the end of a range.">_rangeEnd</a>;          </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">// PackageBase should be able to work with components</span></div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#afcd50d67220b36088654bb0e336f6f15">  305</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class    </span><a class="code" href="class_package_base.xhtml">PackageBase</a>;</div>
<div class="line"><a name="l00306"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a305c04df1d8a4683e8bfe85167fcfdab">  306</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class    </span><a class="code" href="class_package.xhtml">Package</a>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordtype">size_t</span>              <a class="code" href="class_c_f_i.xhtml#ad5c7c9e38ffb53eb3c6a51bef9b834e8" title="The total number of components in a CFI, including range components.">TotalComponents</a>()                   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordtype">string</span>              <a class="code" href="class_c_f_i.xhtml#a12c1d8bd63a51508d7a3136729ae3bfb" title="Generates a sub-path CFI from a given index.">SubCFIFromIndex</a>(<span class="keywordtype">size_t</span> index)       <span class="keyword">const</span>;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordtype">string</span>              <a class="code" href="class_c_f_i.xhtml#a44c777d4c81b85e2d83c3c9d26897346" title="Generates a string representation of the CFI between two components.">Stringify</a>(ComponentList::const_iterator start, ComponentList::const_iterator end)   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span>         <a class="code" href="class_c_f_i.xhtml#a680d9220d2b0fe714aee377571666f84" title="Appends components to a string stream. Used by Stringify().">AppendComponents</a>(std::stringstream&amp; stream, ComponentList::const_iterator start, ComponentList::const_iterator end);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    </div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a8715debda2b566174da9bd1c3b9cebd8">  323</a></span>&#160;    <span class="keyword">typedef</span> std::vector&lt;string&gt;    <a class="code" href="class_c_f_i.xhtml#a8715debda2b566174da9bd1c3b9cebd8">StringList</a>;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keyword">static</span> <a class="code" href="class_c_f_i.xhtml#a8715debda2b566174da9bd1c3b9cebd8">StringList</a>   <a class="code" href="class_c_f_i.xhtml#a48b39b23d1ffe4370d8097551ed6463c" title="Breaks a CFI string into its components.">CFIComponentStrings</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cfi, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; delimiter = <span class="keywordtype">string</span>(<span class="stringliteral">&quot;/&quot;</span>));</div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="code" href="class_c_f_i.xhtml#a92e9689ff94bf51805fcba239ecc216c">  330</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="class_c_f_i.xhtml#a8715debda2b566174da9bd1c3b9cebd8">StringList</a>   <a class="code" href="class_c_f_i.xhtml#a92e9689ff94bf51805fcba239ecc216c" title="Breaks a ranged CFI string into base, start, and end CFI strings.">RangedCFIComponents</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; cfi)          { <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml#a48b39b23d1ffe4370d8097551ed6463c" title="Breaks a CFI string into its components.">CFIComponentStrings</a>(cfi, <span class="stringliteral">&quot;,&quot;</span>); }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span>         <a class="code" href="class_c_f_i.xhtml#a0262514f0ff7a1c99cc9fb0921e36160" title="Compiles CFI component strings into a component list.">CompileComponentsToList</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml#a8715debda2b566174da9bd1c3b9cebd8">StringList</a>&amp; strings, <a class="code" href="class_c_f_i.xhtml#a9fab2def054b6687ae64bd7d2c62d564">ComponentList</a>* list);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keywordtype">bool</span>                <a class="code" href="class_c_f_i.xhtml#af6a84c1ace46d2069db235d5c4f49b0f" title="Top-level CFI compilation method.">CompileCFI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;};</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;EPUB3_END_NAMESPACE</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(__ePub3__cfi__) */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="cfi_8h.xhtml">cfi.h</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
