<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classstring.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">string Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classstring.xhtml">string</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae026e4459a413e4f8c7f90c00234c897">__base</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a6752a00499d608d1871b1f2d64efe54f">_base</a></td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac6eba7cac4bb56076c1f162b1608f47e">_bchar</a>(const xmlChar *c) _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a85244314c93ed0ad44a8a64d67f536f2">_bchar</a>(xmlChar *c) _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad877fe3f0bf888eadef70b0a428f76db">append</a>(InputIterator first, InputIterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a6e8cbb0c3442fc60ccbce360c384c1fd">append</a>(const string &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a27230994e468bb9d757115d13aaa5aa7">append</a>(const string &amp;o, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a76d832c53762a8365c315026f377233e">append</a>(string &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad279c4072acd7dcf81db365d9d11b357">append</a>(const_u4pointer s, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a52debc7fc689a60ed83bcd4d933b44f6">append</a>(size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a062b89f6fb062f2e56c6c629fcf0cd0b">append</a>(const char16_t *s, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa1083feafe97a911952565d64f158129">append</a>(size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a631ba7710449ca1c61b3d982c61a72c4">append</a>(const __base &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ab591e8f479dce82ceb39a174d3827561">append</a>(const __base &amp;o, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a11fef1885c324fcd1e40e205f7b042f7">append</a>(__base &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa9dfea4eb2c059a3a250b10b191a8c9a">append</a>(const char *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a8743c39f365d00147b460724e31f1a86">append</a>(const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a16933f4e70c69e8a8ad80ecc597a32af">append</a>(size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3acb4bbe4a321fc6233e3e2653b75c9a">append</a>(const xmlChar *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a4b5460bb5d6313544197eb6249b896ae">append</a>(const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4165b75b9e540a5c564b3622e755f717">append</a>(size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a4382419320668de1d9320a1668a711c3">append</a>(const_iterator first, const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3f0417b3cdcea6e153692738a5d71895">append</a>(__base::const_iterator first, __base::const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a0c4116bde4bfda9507d4a47c5d213b86">append</a>(const char *first, const char *last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2667fb3a178d72845db696dbe820a5a4">append</a>(const_iterator first, const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a14e90bb122ac2a088b0d0e84addc5720">append</a>(__base::const_iterator first, __base::const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a877e990770d29f75551d0f1cdfd8a3c8">append</a>(const char *first, const char *last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#afd200ff37ca24bf7c9e190f19647784e">assign</a>(InputIterator first, InputIterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a361b58736449327c21db3aee8675ac3b">assign</a>(const string &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa5555317fae55352345b072a24b152fc">assign</a>(const string &amp;o, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a484d70beb74ff0843394160b7d78a60d">assign</a>(string &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#acd93ec0912a86babec1450ccaa56328a">assign</a>(const_u4pointer s, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a8ead77515162fb85e4ef9cb41531e8c4">assign</a>(size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aab8056bab583bce1285e6b607c076837">assign</a>(const char16_t *s, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#add311bc69bd8fada57806c88a8455f18">assign</a>(size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac2b5e54ff6abbc9d64c565980964a796">assign</a>(const __base &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad6b5054209affa9fb6466c553f2902ca">assign</a>(const __base &amp;o, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a3041ddbf01f038a1ef865d140af3061f">assign</a>(__base &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a21bc4730bd48a4317b6979a64afc5673">assign</a>(const char *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1c81fee61135aaa639b0cae5553993e6">assign</a>(const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a89c97fd0d298be0bf4ec6155b478be91">assign</a>(size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af3792a0010aa64d5dd476ba986465ad7">assign</a>(const xmlChar *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a03efe6523a1aaf27140cd0dba2287788">assign</a>(const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a392481117109494a1c549b33d6b7b4ae">assign</a>(size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a04039569b2bf2293692772721f97ab15">assign</a>(iterator first, iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7bcbd3f12b742e95807a8969a55622cc">assign</a>(__base::const_iterator first, __base::const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a46e54e247f883787f31f9e414de36c63">assign</a>(const char *first, const char *last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2acd7847e69414339157620db6484b56">assign</a>(iterator first, iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a0d5400703eea784148c1774ca7e71698">assign</a>(__base::const_iterator first, __base::const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a83011abe8ad1c79624466abfcbfc555d">assign</a>(const char *first, const char *last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a63f228f3a714fcfdc40d3406443214bf">at</a>(size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af4f4be866fc0b7386413213bb537d964">at</a>(size_type pos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4aacd7724d44ca9e5b29ee513d9b16f9">begin</a>() _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a194aad0ffb22780b76f42bde54bc8edc">begin</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1e4d34bd6574c117666ea7435e3b5acf">capacity</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a350b8142d031e1678ee70e89313507d9">cbegin</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a707dfee633e2f9ef1cd5a1269876dc1b">cend</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>() _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a8fbf8abacdb08c0b5cdcebce05282619">compare</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7b9cace1ac4868c838e8b5542973d949">compare</a>(size_type pos1, size_type n1, const string &amp;str) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aab4f692a9d6b974ad1fae0ddf28ba888">compare</a>(size_type pos1, size_type n1, const string &amp;str, size_type pos2, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4bf5bd229d123312d2d9cf242f79e091">compare</a>(const _CharT *s) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a0b89e1fa6820af4b3f0b01685a58908d">compare</a>(size_type pos1, size_type n1, const _CharT *s) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2d8d8faa664ead00abfc8304690a2ff1">compare</a>(size_type pos1, size_type n1, const _CharT *s, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac7cc5069c0e5e5a8ae7171bd258069da">compare</a>(const std::basic_string&lt; _CharT &gt; &amp;s) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2261d8c911a826ca345ddf5109d57a9c">compare</a>(size_type pos1, size_type n1, const std::basic_string&lt; _CharT &gt; &amp;str) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a24f9dc3138f254c29e153b07a804df13">compare</a>(size_type pos1, size_type n1, const std::basic_string&lt; _CharT &gt; &amp;str, size_type pos2, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a672413882bfb4cf898622edd900dd787">compare</a>(const value_type *s) const noexcept</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a31d2331098477235a57370ddd7561b09">compare</a>(size_type pos1, size_type n1, const_u4pointer s) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a94037d45cceb04d1e59b209111c23613">compare</a>(size_type pos1, size_type n1, const_u4pointer s, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad1159b0a671d1ac7a9f87d6905fef155">compare</a>(const std::u32string &amp;s) const noexcept</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a705dabf6088f8f5938f9fc3afd7673b9">compare</a>(size_type pos1, size_type n1, const std::u32string &amp;str) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a40fb1fdf285600eccb8143fc380f5254">compare</a>(size_type pos1, size_type n1, const std::u32string &amp;str, size_type pos2, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a949b75babe16aeb7786fde9407a60c0f">compare</a>(const value_type *s) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a3fafcc3652afcb5e1fda60e645b05bbb">compare</a>(size_type pos1, size_type n1, const_u4pointer s) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a87c0a66a421e2249e64ff68dfe2f5ce6">compare</a>(size_type pos1, size_type n1, const_u4pointer s, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#afc6aef844126f320e5c4fc53290a0ed9">compare</a>(const std::u32string &amp;s) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a58098a23028f6041301a23c4b1c12f19">compare</a>(size_type pos1, size_type n1, const std::u32string &amp;str) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#adb76611006259764837d0dfe548bba81">compare</a>(size_type pos1, size_type n1, const std::u32string &amp;str, size_type pos2, size_type n2) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9b4c71ee483c3353b07e57625d09a39d">const_iterator</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a237ee0cd652c3bee594812ea840e58b4">const_reference</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afab8195c2ad96661ad90db81fa34f5d7">const_u4pointer</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a383564cfaac408dba9d96e4e37843bf6">copy</a>(u4pointer s, size_type n, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a543448c81e206be9095629551734b106">copy</a>(char16_t *s, size_type n, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#adc7b329f1e9170fd0b8a7fb3498835b3">copyC</a>(char *s, size_type n, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ace5ef26f3cedda04c620443824c6ede1">copyXML</a>(xmlChar *s, size_type n, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a13ba64038a761eae37abec55273003a2">data</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afb4e9c2450f820d77de4fa80cc9eb9a7">difference_type</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">EmptyString</a></td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a153c08a0325e4ca9e21d913e4ba7c424">end</a>() _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3602765dc65a97c0cbb7cafceec41fe5">end</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af0ce19fec16ed458359c7c3dd51e3f46">erase</a>(size_type pos=0, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae52fa57ec243647ccd7c0451487894d7">erase</a>(const_iterator pos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2d0b16a2c9083802d284948f01129d70">erase</a>(const_iterator first, const_iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(const string &amp;str, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af244a36e2cbbbb65ac28d33182b83d86">find</a>(const __base &amp;str, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab78c12d670a704e076ab38e528663840">find</a>(const _CharT *s, size_type pos, size_type n) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a8fb50433bdcc3da86a1ddb27464b9b4d">find</a>(const _CharT *s, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad3ba64f1db54aa28520fc04f8cc8619f">find</a>(_CharT c, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a69ca3168005b323efae49dc3f6f29da4">find_first_not_of</a>(const string &amp;str, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aba2965a2078556fc931e67dbac03bd1b">find_first_not_of</a>(const __base &amp;str, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7af1febbf22e1cc6f7f75484ed2ce1b7">find_first_not_of</a>(const _CharT *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab937d5faa0984500cc0a55bbe2f1dc40">find_first_not_of</a>(const _CharT *s, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad1213f51912cb6ac8abd3760d6223ba9">find_first_not_of</a>(_CharT c, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a491219c30a842532db9dd949c4d07ed2">find_first_not_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a88110cb41fc395f64b3d94cc5679daa5">find_first_not_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a1d6148fc80e404d403d60388bd60eedb">find_first_not_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a9ded32c822090b9f42bc3cc0c60ee050">find_first_not_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a654ef3ab8d4bb3e0939341df33a12f77">find_first_not_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a6ccc7a4e5f8735f9476213dca9b195fc">find_first_not_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7ae74923a10d58a8a79262d6b16c6e18">find_first_not_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ab06bd1e5e21e4e4840ecaa8283800aba">find_first_not_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac98aeabd09f4ff5abccbb96abaf822d1">find_first_of</a>(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __pred) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a70700f69f6338759b4c7cc2163c89f99">find_first_of</a>(const string &amp;str, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a58290b2629205297c2f1bcc4050de8f2">find_first_of</a>(const __base &amp;str, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#acd09cf2f22876df8579f72360de8d8db">find_first_of</a>(const _CharT *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae9bd0508479d6df016934e3b60433c81">find_first_of</a>(const _CharT *s, size_type pos=0) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a72178f3f5a41b02fd966d097a6d0b8d8">find_first_of</a>(_CharT c, size_type pos=0) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afbd4492bda96f81b0d3c41ce285c87c3">find_first_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a58bcf2146769be3722a72b6404f51506">find_first_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a6637bc84cb4c8371893b4a3df78f998a">find_first_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a8c951ff5573a113dde05c448b96c8a9d">find_first_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5cfecc8454a6cb8702b10ec6d0ac9df1">find_first_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a40618bbf7d6524449784ac6af9d070e8">find_first_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a1efe6823c0c3c1ac81ec28bfcdb22b4e">find_first_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af04208f58dafcb4058ed46c9627f3056">find_first_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a452ac115302bd6054c6ce8dd75ea045b">find_last_not_of</a>(const string &amp;str, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a8d43cbabbd68d871c264d6bc736d3aeb">find_last_not_of</a>(const __base &amp;str, size_type pos=npos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a62253eda68706a8a3560cbbaac008d59">find_last_not_of</a>(const _CharT *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac81af2dc893fdaaf8200a0a1d18c36d9">find_last_not_of</a>(const _CharT *s, size_type pos=npos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#adc1e2000c4bf1eef235124a85fd079c0">find_last_not_of</a>(_CharT c, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ab814092526b86d5d6a256367664f8c1a">find_last_not_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a96f0685a5f27e34857494ce1986a9ac3">find_last_not_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1f9c0448ee9399a5a64f0de1d2297b9c">find_last_not_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a6d1b6103d797829a0b0b80b36086a101">find_last_not_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ae379849cb208790df7ec75488e6ba66f">find_last_not_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aab731897d2a67bb098272b0d9e18c723">find_last_not_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#afdab66760ab91036bd75745a43d11fa0">find_last_not_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7eb5b07abfffbe183cb9ac99723d59bf">find_last_not_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af5c0d3abfe2702a234c68fd10c18266a">find_last_of</a>(const string &amp;str, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a66e03c8fced948241b85add467e94939">find_last_of</a>(const __base &amp;str, size_type pos=npos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a97f7af50e369087bcb825ebb92565661">find_last_of</a>(const _CharT *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a67bbcae1088dcfd698c52892100d028c">find_last_of</a>(const _CharT *s, size_type pos=npos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a975a736f578527d88ea3d6ce89275ab9">find_last_of</a>(_CharT c, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2bcbcd385b28cba0b9fc5b86c01bdb11">find_last_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ab1cbd5929b7cf524d0bb16343d3a97c2">find_last_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afb46cbcb723b8bcd0260fc0bc4aa4889">find_last_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aae67fbe6aa43e9a51b1f44459b8251a3">find_last_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2118d0619a7baffd6570793560d22c3f">find_last_of</a>(const char *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a9c0f40c8bf8740bfb57f9863f7a1f9b3">find_last_of</a>(const char *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aabc0c78025d94af38289ed1df37f3b02">find_last_of</a>(const xmlChar *s, size_type pos, size_type n) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1c160f868b6156280260b13fc29d4b92">find_last_of</a>(const xmlChar *s, size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a73e8192386db2f8b9d773f8ad29b242e">get_allocator</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ae2d58f7b6185142dd302a8d00bb4ae6f">insert</a>(iterator p, InputIterator first, InputIterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a79d7e3c219aac19b53bdd735e0ecd4b7">insert</a>(size_type p, const string &amp;s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#abb5524270759154491b86636013bfcd3">insert</a>(iterator p, const string &amp;s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2a42165042f4393eba8589f4234ab947">insert</a>(size_type p, const_u4pointer s, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2071652fa83088b46fa60bf8dc613286">insert</a>(size_type p, size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a96c0067c900650b6494e6cdbf1d14588">insert</a>(iterator p, const_u4pointer s, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a229ae88b2bca17af0bee2c88058993ee">insert</a>(iterator p, size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad41683f3395f405acb0c9170c4fd907e">insert</a>(size_type p, const char16_t *s, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad3adf40e10de82f135745d0cb6ac0e8a">insert</a>(size_type p, size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4492ee269fa849c98bc8db81f4b40273">insert</a>(iterator p, const char16_t *s, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a377d67e288a259b764e03f21a2bb58e0">insert</a>(iterator p, size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac61a1d4f55fef6d39703596152355b1b">insert</a>(size_type p, const __base &amp;s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1d612bf3d568fb183489a5b861b9fd31">insert</a>(size_type p, __base::iterator b, __base::iterator e)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#af7d686ceba5be6350d838d1dbc1c3042">insert</a>(iterator p, const __base &amp;s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a367450f3894876f89236cc978f7436f5">insert</a>(size_type p, const char *s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a0a77eaf8c826c7a5b693dbe4f0af6dcc">insert</a>(size_type p, size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af7fe49363b33b318b26dde16d8e53330">insert</a>(iterator p, const char *s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a69cd472310927b4b1ac695727cc4c889">insert</a>(iterator p, size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a97e87d1140e0260bf81075987a0c7f12">insert</a>(size_type p, const xmlChar *s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae1d3848a85b644e1fa1a232571230c7d">insert</a>(size_type p, size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7757ea920d418b3845ced421495041dc">insert</a>(iterator p, const xmlChar *s, size_type b=0, size_type e=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2502b047c0b47aec3d93c887027d5e20">insert</a>(iterator p, size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad7dbc006c55a114284a9d11d14dbd0fe">insert</a>(iterator pos, iterator first, iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a8bc2c3abcfd13f589fe8882fc230f0e7">insert</a>(iterator pos, __base::iterator first, __base::iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a5d610b970957ec515eb3f6fd947e0f18">insert</a>(iterator pos, iterator first, iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2bd7b1190a46c4ace22c1e5791903728">insert</a>(iterator pos, __base::iterator first, __base::iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af505a660c38168feaf6dfc3d7047d2f7">iterator</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a051c72132ba48143bf73150ac29ba665">length</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7ae28b8592d2434559563706dd9e6a2b">max_size</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">npos</a></td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a08ae8c66eb34f698cdf692d7c44f8414">operator string_view</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a06cd43201daadc884d8082d806d092c3">operator!=</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad2951936aae5cd26f0ccf59801e17ac6">operator!=</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7edc6e5b59dd7e039c45550046c95fc2">operator+=</a>(const string &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af2b93a46d68bfd6c66dcc050ce8146d1">operator+=</a>(string &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a50e65ae35aec658df5a8d19ceaa636f8">operator+=</a>(const_u4pointer s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a59a54bf92611bb073b71cd5fd0273b2c">operator+=</a>(value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afc5723d7bc43369d5bd5ce7207b973d1">operator+=</a>(const char16_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a33fd6aa3d7e39d65d09ae51e12ef9c69">operator+=</a>(char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac2f2cd70a01d07487ffd82f5023abe2f">operator+=</a>(const __base &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a977c96d90103e5bc710976552093aaf5">operator+=</a>(__base &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a2eff128f10305551501801fb5d28336d">operator+=</a>(const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af9d2610eb933b8987407631c2586f21e">operator+=</a>(char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a665ee04d4474ee7f0915fcbf95d50ac3">operator+=</a>(const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a5773143a33a24a896e2b8c3ede69cbd8">operator+=</a>(xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3eda63be710dd93df11af41fed42dc1f">operator&lt;</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad01d9cb89a7032b62a357fc8ddca3d2c">operator&lt;</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac2bca6d0a1df651ce541ce6676462cee">operator&lt;=</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af03b0b43e88ef8c900ac6a6e93b7aa9c">operator&lt;=</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3c2509b32f521e1c33176256673d73b3">operator=</a>(const string &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7e22fc302e8adf0ed01578cb19639ae5">operator=</a>(string &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad02b66ae27ca6fe99159ba9b550b866e">operator=</a>(const_u4pointer s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a75132309eb31b15f5b74765c000f420c">operator=</a>(value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab26babbf2747afa886abebc95dfe1186">operator=</a>(const char16_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a201a3eb870e53afe8d7c8a1319338377">operator=</a>(char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aee4e755d0d7c2154df5f2cb85b6652cd">operator=</a>(const __base &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a74415135ff04b430204c3d14826679fd">operator=</a>(__base &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#abad6a59f7b25040643a4b836a07a11eb">operator=</a>(const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1c22a0d729faf80460f11157578fa41d">operator=</a>(char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae89bfbf1f02a951ed25b2ab37f66f3af">operator=</a>(const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a0a58565bb176fa15ba897cd287a608b6">operator=</a>(xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9e5147dd29baf4205a4271dfffd84b4b">operator==</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a28a96cf80c7f843d1b0fadc9492d56c6">operator==</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7eca482cdd34801ef2f320390f3af05d">operator&gt;</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a74e9a3fc365d846f6e8b94acee9eae65">operator&gt;</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ae0db2b766c3db1379f2b21aac1496d9c">operator&gt;=</a>(const string &amp;str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a5614ed3fd8f4dba1828f162b110c5210">operator&gt;=</a>(const _CharT *str) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a7887b398d1cc17fe924bee6c16ee6d92">operator[]</a>(size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a825f4cf79497227d26e54c2e10aa2130">operator[]</a>(size_type pos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad4573ddde6b80235130619419d805d6a">reference</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a40f92a94edfb869c45832b3abbb794dc">replace</a>(const_iterator i1, const_iterator i2, InputIterator j1, InputIterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aa040f8e2e2df934f50092abb8c13f261">replace</a>(size_type pos1, size_type n1, const string &amp;str)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a0bf856b6cce7b79495611b180e74319f">replace</a>(size_type pos1, size_type n1, const string &amp;str, size_type pos2, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a507320106bba65034ac2817429a55d3b">replace</a>(const_iterator i1, const_iterator i2, const string &amp;str)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad9d4eb17596164bf2b5f512bcc68111d">replace</a>(size_type pos, size_type n1, const_u4pointer s, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4e36640b5d5b7358373aa331355d0315">replace</a>(size_type pos, size_type n1, const_u4pointer s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aeb8cc40e53d99fc148cdfb666c6d58b3">replace</a>(size_type pos, size_type n1, size_type n2, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a48a7d9c6958fe14e628a7c28a21e62e7">replace</a>(const_iterator i1, const_iterator i2, const_u4pointer s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2dba83d94e8d5ce13bfa0f2b5fab794e">replace</a>(const_iterator i1, const_iterator i2, const_u4pointer s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a386858435a8e7731d556cf2d813b47ab">replace</a>(const_iterator i1, const_iterator i2, size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a3a026049a4b221901d1d1f5e42ddc7b8">replace</a>(size_type pos, size_type n1, const char16_t *s, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#accfd766d02cd167386533c570fc28fb6">replace</a>(size_type pos, size_type n1, const char16_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7ac92c75cda98404c168109f70340799">replace</a>(size_type pos, size_type n1, size_type n2, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a39a90a567f448a2fce94d952c3c58cfe">replace</a>(const_iterator i1, const_iterator i2, const char16_t *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a4ca47cabcb082461d182189b86b0878c">replace</a>(const_iterator i1, const_iterator i2, const char16_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aea018bd960dce632176485c9fad9cc86">replace</a>(const_iterator i1, const_iterator i2, size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a02223d27b421f24f6a58634f114d67ec">replace</a>(size_type pos1, size_type n1, const __base &amp;str)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a1a0d27bc99726709fa3cf5be428cf54a">replace</a>(size_type pos1, size_type n1, const __base &amp;str, size_type pos2, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af44ed117dbbc27b1370a56545598bf7f">replace</a>(const_iterator i1, const_iterator i2, const __base &amp;str)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#abb1ca4fe64779c8e4b09e30e5427fe06">replace</a>(size_type pos, size_type n1, const char *s, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a6ceff6eaa92d470503ba4e907b10f31e">replace</a>(size_type pos, size_type n1, const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a4ca849b60f26d771cbede9ed958ad2a7">replace</a>(size_type pos, size_type n1, size_type n2, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a410be014e8b28f310cfff2479c77ff63">replace</a>(const_iterator i1, const_iterator i2, const char *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a46a823743ee370e10b441aeb941e23f0">replace</a>(const_iterator i1, const_iterator i2, const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac400a39081aabdc1b13716ac0bfb7a29">replace</a>(const_iterator i1, const_iterator i2, size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aeb715d0e515cb1b56e9718bcac3dfff1">replace</a>(size_type pos, size_type n1, const xmlChar *s, size_type n2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a4a261580bd87194c53196236f53b1066">replace</a>(size_type pos, size_type n1, const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aaa7de8432d085fbe0d2f52342ac7359a">replace</a>(size_type pos, size_type n1, size_type n2, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7013c5b31333f59badeebd1d32fe6e51">replace</a>(const_iterator i1, const_iterator i2, const xmlChar *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#acac90434c30d1c389e5a14e2b37e0ddc">replace</a>(const_iterator i1, const_iterator i2, const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a9242a1b4fce19ee3497d91e4108b29ee">replace</a>(const_iterator i1, const_iterator i2, size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a096d628ab5bd99248a263e11bc4abbca">replace</a>(const_iterator i1, const_iterator i2, const_iterator j1, const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad210362dd6fff696575bedd6687972f7">replace</a>(const_iterator i1, const_iterator i2, __base::const_iterator j1, __base::const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a64b324f48904f42499ff5fae7d181173">replace</a>(const_iterator i1, const_iterator i2, std::u32string::const_iterator j1, std::u32string::const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a4c2fd186e1ab413a4e95c4f33b0a62fc">replace</a>(cxx11_const_iterator i1, cxx11_const_iterator i2, cxx11_const_iterator j1, cxx11_const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a6a4589e289d358a6f2abf8de33640734">replace</a>(cxx11_const_iterator i1, cxx11_const_iterator i2, __base::const_iterator j1, __base::const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ad259546a4c16f1935b6f2ea82ff4c6cd">replace</a>(cxx11_const_iterator i1, cxx11_const_iterator i2, std::u32string::const_iterator j1, std::u32string::const_iterator j2)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab8b2c358440001bb3adc57c5cb00a8fc">reserve</a>(size_type res_arg=0)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a56063296da164488018a1ed6f824d0af">resize</a>(size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3ba7e1bdd6a856618585531fd793d6e6">resize</a>(size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a646c4270831260d2e77cea0e3b704538">rfind</a>(const string &amp;str, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a802e74bee01815fa87145f4eed8e76ba">rfind</a>(const __base &amp;str, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a881d1242246492d4ce58e9211f801d48">rfind</a>(const _CharT *s, size_type pos, size_type n) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aa95264d91d7aaf45bdbdc37498b0f1d6">rfind</a>(const _CharT *s, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a98dbd5fb127e384e7172ee765c041911">rfind</a>(_CharT c, size_type pos=npos) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a057c3a25bdccd2771f2d1ea6d9a1cd30">shrink_to_fit</a>()</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aecb9d18894116bec678f039638fd0958">size</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a000faf060ecec169c870bd9d8501046c">size_type</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7ea242429f8b63e5750cff43390f4fbb">split</a>(const REGEX_NS::regex &amp;regex) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a362899b7e6f6d35abf0673c0a06f4401">string</a>()</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5a702469fc20900ce62573598294d92f">string</a>(const string &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa26e6814fbf0fe95d041393922cc3be9">string</a>(string &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9843afd396a991bc4a50e4acb78d1e65">string</a>(const string &amp;s, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa2ed08f3d6ca0ad66b9fa8fbf80dfaf8">string</a>(const_u4pointer s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab3d2de0f3ddec39d50a3eb5405a7c6d1">string</a>(const_u4pointer s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a57e846fbaf35565ac1dd16b319733bab">string</a>(size_type n, value_type c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a8d7d818c4e453599ef2d21f762b7ded7">string</a>(const char16_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aed0d98c6c09f7fc44f5c5f211a27cd4f">string</a>(const char16_t *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5630a57527a0789c7d75b45fa989f1f9">string</a>(size_type n, char16_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2e18b1b3e4d97fd05cc2f57fb152bf9d">string</a>(const wchar_t *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#acf87631bbd090c583ba8d722bc87d15d">string</a>(const wchar_t *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a59825c17c8244cc1368f4b1f15da4f94">string</a>(size_type n, wchar_t c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9f4bdb68ad4996c06106a043734fce0a">string</a>(const std::wstring &amp;s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#afe087c84a0496aed7c2279d58d006bd9">string</a>(const __base &amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a8ff90dc50cf42eb5adef6a42e6a79a76">string</a>(__base &amp;&amp;o)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2d89a46ee52683db94908b9eff969c90">string</a>(const __base &amp;s, size_type i, size_type n=npos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#af57b95218cf3f736e262a59fb90e7738">string</a>(const char *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aba6bf3ae27bbdbfdaa11ed834730d97e">string</a>(const char *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9c3ed3be28b310e25bb7af518143e385">string</a>(size_type n, char c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac0358f7a2a7d65ab0db9be7c07c251b1">string</a>(const xmlChar *s)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a9fb5079513d002cd0c5986c86ab0a696">string</a>(const xmlChar *s, size_type n)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#adf3227094b908081f08265a6d45d383a">string</a>(size_type n, xmlChar c)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ad1d2ef81112912aac79152d96d8e820b">string</a>(const string_view &amp;view)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a9c61ebb7671a2a34b4b279a8fe54eef7">string</a>(const u16string_view &amp;view)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#abc60f853196163bad865f15c727bebe4">string</a>(const u32string_view &amp;view)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a39b2d5d9e61071b70e2f36164821fa3e">string</a>(const wstring_view &amp;view)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a50ae1d48f7363746380b914f93499725">string</a>(InputIterator begin, InputIterator end)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2c88fbe866ce536eda2895ca4a6dafcd">string</a>(iterator first, iterator last)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afba6698320052960dab83146f8604371">string</a>(__base::const_iterator pos, __base::const_iterator end)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a145da7e9cf0e38d161c95ce92cd31dc6">string</a>(const char *pos, const char *end)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a75b2c2be6ab51e5010e9f91eb4d6f6e4">string</a>(const xmlChar *pos, const xmlChar *end)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a96b9dd2eeff04a39429870238ddb84a6">substr</a>(size_type pos=0, size_type n=npos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a185a36265bc48a495fc4140053c23178">swap</a>(string &amp;str)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a41fb7372ee924e2705534c9bdfc47c9a">throw_unless_insertable</a>(const __base &amp;s, size_type b, size_type e) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a3969232d86fa03d23749b1f327ea4ce7">throw_unless_insertable</a>(const char *s, size_type b, size_type e) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#af09588f20af088a31fba6108c1224d76">throw_unless_insertable</a>(const xmlChar *s, size_type b, size_type e) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#af76bbadcde627705d3f7b601b6ae72c0">to_byte_size</a>(size_type __n) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a372b77e16bc127bedcd34dbff7c26ba8">to_byte_size</a>(size_type __b, size_type __e) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5b0cd3276016f8111e4d5c12a7fc73aa">to_utf32_size</a>(__base::size_type __n) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a485130d4d7f18ea1c9a78d84f2411a54">to_utf32_size</a>(__base::size_type __b, __base::size_type __e) const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#afb979c58f37bc9b69f2ce5d43fe00820">tolower</a>(const std::locale &amp;loc=std::locale(&quot;&quot;))</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a30d384c20d22734a1ae1e2d6834ab770">tolower</a>(const std::locale &amp;loc=std::locale(&quot;&quot;)) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a765b90173d8c7257c9ed672f0ed921ed">toupper</a>(const std::locale &amp;loc=std::locale(&quot;&quot;))</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2720e7fd317499bda03ddc61876d9e12">toupper</a>(const std::locale &amp;loc=std::locale(&quot;&quot;)) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a0eb9df193f2eaff4058bb173b3eeb3dc">traits_type</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a827ff0d3607b5fe058614fe5f86260ac">u4pointer</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a408aedef03ff148d246d21c25c762f9e">utf16</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#ac536ec55387a215f506cb76e56b91ce8">utf16string</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#adf439480715eb86b26777f9bb5028f1d">utf32</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a99e9baa55c4e4799a2381347097ebe9a">utf32_distance</a>(__base::const_iterator first, __base::const_iterator last) _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a855707c67bb7d50f93f836394a2fdaf4">utf32string</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5138a6601e8c6e948e8ee172680f8d52">utf8_length</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a7ab8dbaa72c6afb0b7081710f8ce40d2">utf8_of</a>(_CharT ch)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a708e8f77226917886c81e234d4ca339c">utf8_size</a>() const _NOEXCEPT</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#afb4f6da67da53b03789b024c96a8e24c">utf8_to_utf32</a>(const xmlChar *utf8)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ab92f5e6a8e67f6b006a594447e691a19">utf8_to_utf32</a>(const __base::const_iterator p)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a2ea41866e34b3f28349389f26df6cb3a">utf8At</a>(size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a5bad4c0a61aa4172f8770ad369885b0e">validate_utf8</a>(const __base &amp;s) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a9f932541239318bba75820c18d2a8db7">validate_utf8</a>(const char *s, size_type sz) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a1fb68c61919e9d31b00a28c991ed3e36">validate_utf8</a>(const xmlChar *s, size_type sz) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a8f1a6eed7c9fc7739f256d2ed4edb525">value_type</a> typedef</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#ac25c03c90f274589b8ccfac0dd81087e">view</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa90e3b2dc3cc15045710eb1297137aef">wchar_str</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a27209c5cb7609e20062324ce55a8e7f2">wchar_string</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#a90ed1b87040abeb2a6bd65e826ff6114">xml_str</a>() const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#a87093cbddedcdd7e65d1a7c68db80f1a">xmlAt</a>(size_type pos) const </td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classstring.xhtml#aa67aa0b3b33e3ef0cd17567714749ff8">xmlAt</a>(size_type pos)</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classstring.xhtml#aa46b81ec44c09fc1bd81ebdbac9d1daf">~string</a>()</td><td class="entry"><a class="el" href="classstring.xhtml">string</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:43 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
