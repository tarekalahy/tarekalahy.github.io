<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: ZipFileByteStream Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_zip_file_byte_stream.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="class_zip_file_byte_stream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ZipFileByteStream Class Reference<div class="ingroups"><a class="el" href="group__utilities.xhtml">Utilities</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ZipFileByteStream:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_zip_file_byte_stream__inherit__graph.svg" width="155" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for ZipFileByteStream:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_zip_file_byte_stream__coll__graph.svg" width="155" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1dc7817cc70616c0249d296692a75711"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a1dc7817cc70616c0249d296692a75711">ZipFileByteStream</a> ()</td></tr>
<tr class="memdesc:a1dc7817cc70616c0249d296692a75711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new unattached stream.  <a href="#a1dc7817cc70616c0249d296692a75711">More...</a><br/></td></tr>
<tr class="separator:a1dc7817cc70616c0249d296692a75711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab427ec4f81bf936f06d3cfba73101440"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#ab427ec4f81bf936f06d3cfba73101440">ZipFileByteStream</a> (struct zip *archive, const <a class="el" href="classstring.xhtml">string</a> &amp;pathToOpen, int zipFlags=0)</td></tr>
<tr class="separator:ab427ec4f81bf936f06d3cfba73101440"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875f1d49a2fff905aef3ef55af834134"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a875f1d49a2fff905aef3ef55af834134">~ZipFileByteStream</a> ()</td></tr>
<tr class="separator:a875f1d49a2fff905aef3ef55af834134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca13371c29b7dc741bcf18609b85a18d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#aca13371c29b7dc741bcf18609b85a18d">BytesAvailable</a> () <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="memdesc:aca13371c29b7dc741bcf18609b85a18d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bytes that can be read at this time.  <a href="#aca13371c29b7dc741bcf18609b85a18d">More...</a><br/></td></tr>
<tr class="separator:aca13371c29b7dc741bcf18609b85a18d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc0e48a2d3902127d41cfcb803a3e6cc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#abc0e48a2d3902127d41cfcb803a3e6cc">SpaceAvailable</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="memdesc:abc0e48a2d3902127d41cfcb803a3e6cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of space available for writing at this time.  <a href="#abc0e48a2d3902127d41cfcb803a3e6cc">More...</a><br/></td></tr>
<tr class="separator:abc0e48a2d3902127d41cfcb803a3e6cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af91c6f0ba2f028976065a62c67d570a3"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#af91c6f0ba2f028976065a62c67d570a3">IsOpen</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="memdesc:af91c6f0ba2f028976065a62c67d570a3"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#af91c6f0ba2f028976065a62c67d570a3">More...</a><br/></td></tr>
<tr class="separator:af91c6f0ba2f028976065a62c67d570a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18ba48327a6fcbd9df72a4d3e9238d1f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a18ba48327a6fcbd9df72a4d3e9238d1f">Open</a> (struct zip *archive, const <a class="el" href="classstring.xhtml">string</a> &amp;path, int zipFlags=0)</td></tr>
<tr class="separator:a18ba48327a6fcbd9df72a4d3e9238d1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c86ce408b15e60c44314d9450305e91"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a3c86ce408b15e60c44314d9450305e91">Close</a> ()</td></tr>
<tr class="memdesc:a3c86ce408b15e60c44314d9450305e91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the stream.  <a href="#a3c86ce408b15e60c44314d9450305e91">More...</a><br/></td></tr>
<tr class="separator:a3c86ce408b15e60c44314d9450305e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cc7140d90aef46925e495325f76770a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a3cc7140d90aef46925e495325f76770a">ReadBytes</a> (void *buf, <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a> len)</td></tr>
<tr class="memdesc:a3cc7140d90aef46925e495325f76770a"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a3cc7140d90aef46925e495325f76770a">More...</a><br/></td></tr>
<tr class="separator:a3cc7140d90aef46925e495325f76770a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff431e295f9bbb4b1938cccb109e87a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#aeff431e295f9bbb4b1938cccb109e87a">WriteBytes</a> (const void *buf, <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a> len)</td></tr>
<tr class="memdesc:aeff431e295f9bbb4b1938cccb109e87a"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#aeff431e295f9bbb4b1938cccb109e87a">More...</a><br/></td></tr>
<tr class="separator:aeff431e295f9bbb4b1938cccb109e87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95bb03a565504898949514faf947c4eb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a95bb03a565504898949514faf947c4eb">Seek</a> (<a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a> by, std::ios::seekdir dir) <a class="el" href="__compiler_8h.xhtml#a5dea698950629d9e51d19c1a25be1c30">OVERRIDE</a></td></tr>
<tr class="separator:a95bb03a565504898949514faf947c4eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693bb0dff6f6c7346d37b39cff0519c1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a693bb0dff6f6c7346d37b39cff0519c1">Position</a> () const <a class="el" href="__compiler_8h.xhtml#a5dea698950629d9e51d19c1a25be1c30">OVERRIDE</a></td></tr>
<tr class="separator:a693bb0dff6f6c7346d37b39cff0519c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa945b0e6354113634599d6d1a3d689a"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="class_seekable_byte_stream.xhtml">SeekableByteStream</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#afa945b0e6354113634599d6d1a3d689a">Clone</a> () const <a class="el" href="__compiler_8h.xhtml#a5dea698950629d9e51d19c1a25be1c30">OVERRIDE</a></td></tr>
<tr class="separator:afa945b0e6354113634599d6d1a3d689a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_seekable_byte_stream"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_seekable_byte_stream')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_seekable_byte_stream.xhtml">SeekableByteStream</a></td></tr>
<tr class="memitem:a76eda62e83013d8e3fd2fa7a50a6ccfd inherit pub_methods_class_seekable_byte_stream"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_seekable_byte_stream.xhtml#a76eda62e83013d8e3fd2fa7a50a6ccfd">SeekableByteStream</a> ()</td></tr>
<tr class="separator:a76eda62e83013d8e3fd2fa7a50a6ccfd inherit pub_methods_class_seekable_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c9a5b9f2d487bd7740478893df8c3e inherit pub_methods_class_seekable_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_seekable_byte_stream.xhtml#a98c9a5b9f2d487bd7740478893df8c3e">~SeekableByteStream</a> ()</td></tr>
<tr class="separator:a98c9a5b9f2d487bd7740478893df8c3e inherit pub_methods_class_seekable_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0922a853bbf0e2469a8344d3164c7d12 inherit pub_methods_class_seekable_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_seekable_byte_stream.xhtml#a0922a853bbf0e2469a8344d3164c7d12">Flush</a> ()</td></tr>
<tr class="separator:a0922a853bbf0e2469a8344d3164c7d12 inherit pub_methods_class_seekable_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_byte_stream"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_byte_stream')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_byte_stream.xhtml">ByteStream</a></td></tr>
<tr class="memitem:a9fedbe553d35af2508bbedbb38d63c5c inherit pub_methods_class_byte_stream"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a9fedbe553d35af2508bbedbb38d63c5c">ByteStream</a> ()</td></tr>
<tr class="separator:a9fedbe553d35af2508bbedbb38d63c5c inherit pub_methods_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21b57a40d287c38f69a33dc763489344 inherit pub_methods_class_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a21b57a40d287c38f69a33dc763489344">~ByteStream</a> ()</td></tr>
<tr class="separator:a21b57a40d287c38f69a33dc763489344 inherit pub_methods_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad43f8a78072c02cf334e9bb639640d7 inherit pub_methods_class_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#aad43f8a78072c02cf334e9bb639640d7">ReadAllBytes</a> (void **buf)</td></tr>
<tr class="separator:aad43f8a78072c02cf334e9bb639640d7 inherit pub_methods_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a2fbfb1a81c144c1bc8e4458f571aee inherit pub_methods_class_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a4a2fbfb1a81c144c1bc8e4458f571aee">AtEnd</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="memdesc:a4a2fbfb1a81c144c1bc8e4458f571aee inherit pub_methods_class_byte_stream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <code>true</code> if an EOF status has occurred.  <a href="#a4a2fbfb1a81c144c1bc8e4458f571aee">More...</a><br/></td></tr>
<tr class="separator:a4a2fbfb1a81c144c1bc8e4458f571aee inherit pub_methods_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fe01bf8b41de060fd2ba416130cbcc4 inherit pub_methods_class_byte_stream"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a4fe01bf8b41de060fd2ba416130cbcc4">Error</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="memdesc:a4fe01bf8b41de060fd2ba416130cbcc4 inherit pub_methods_class_byte_stream"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns any error code reported by the underlying system.  <a href="#a4fe01bf8b41de060fd2ba416130cbcc4">More...</a><br/></td></tr>
<tr class="separator:a4fe01bf8b41de060fd2ba416130cbcc4 inherit pub_methods_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a1881d1eac71b6a66ad17d01aaadcb45c"><td class="memItemLeft" align="right" valign="top">struct zip_file *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#a1881d1eac71b6a66ad17d01aaadcb45c">_file</a></td></tr>
<tr class="memdesc:a1881d1eac71b6a66ad17d01aaadcb45c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The underlying Zip file stream.  <a href="#a1881d1eac71b6a66ad17d01aaadcb45c">More...</a><br/></td></tr>
<tr class="separator:a1881d1eac71b6a66ad17d01aaadcb45c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa562ed18e8b13bedadb3bc7b829d61a3"><td class="memItemLeft" align="right" valign="top">std::ios::openmode&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_zip_file_byte_stream.xhtml#aa562ed18e8b13bedadb3bc7b829d61a3">_mode</a></td></tr>
<tr class="memdesc:aa562ed18e8b13bedadb3bc7b829d61a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">The mode used to open the file (used by <a class="el" href="class_zip_file_byte_stream.xhtml#afa945b0e6354113634599d6d1a3d689a">Clone()</a>).  <a href="#aa562ed18e8b13bedadb3bc7b829d61a3">More...</a><br/></td></tr>
<tr class="separator:aa562ed18e8b13bedadb3bc7b829d61a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_class_byte_stream"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_byte_stream')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_byte_stream.xhtml">ByteStream</a></td></tr>
<tr class="memitem:a0a922b9db3d4870668c4766c4951cf0d inherit pub_types_class_byte_stream"><td class="memItemLeft" align="right" valign="top">typedef std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a></td></tr>
<tr class="memdesc:a0a922b9db3d4870668c4766c4951cf0d inherit pub_types_class_byte_stream"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type for all byte-counts used with the <a class="el" href="class_byte_stream.xhtml">ByteStream</a> API.  <a href="#a0a922b9db3d4870668c4766c4951cf0d">More...</a><br/></td></tr>
<tr class="separator:a0a922b9db3d4870668c4766c4951cf0d inherit pub_types_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_byte_stream"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_byte_stream')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_byte_stream.xhtml">ByteStream</a></td></tr>
<tr class="memitem:a3317ab854f9efd7ccfc88a1fa81737ac inherit pub_static_attribs_class_byte_stream"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_byte_stream.xhtml#a3317ab854f9efd7ccfc88a1fa81737ac">UnknownSize</a> = 0</td></tr>
<tr class="memdesc:a3317ab854f9efd7ccfc88a1fa81737ac inherit pub_static_attribs_class_byte_stream"><td class="mdescLeft">&#160;</td><td class="mdescRight">A value to be returned when a real count is not possible.  <a href="#a3317ab854f9efd7ccfc88a1fa81737ac">More...</a><br/></td></tr>
<tr class="separator:a3317ab854f9efd7ccfc88a1fa81737ac inherit pub_static_attribs_class_byte_stream"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A concrete <a class="el" href="class_byte_stream.xhtml">ByteStream</a> providing access to a file within a Zip archive. </p>

<p>Definition at line <a class="el" href="byte__stream_8h_source.xhtml#l00598">598</a> of file <a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1dc7817cc70616c0249d296692a75711"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ZipFileByteStream::ZipFileByteStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a new unattached stream. </p>

<p>Definition at line <a class="el" href="byte__stream_8h_source.xhtml#l00603">603</a> of file <a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab427ec4f81bf936f06d3cfba73101440"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ZipFileByteStream::ZipFileByteStream </td>
          <td>(</td>
          <td class="paramtype">struct zip *&#160;</td>
          <td class="paramname"><em>archive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td>
          <td class="paramname"><em>pathToOpen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>zipFlags</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a new stream to a file within a zip archive. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">archive</td><td>The Zip arrchive containing the target file. </td></tr>
    <tr><td class="paramname">pathToOpen</td><td>The path within the archive of the resource to open. </td></tr>
    <tr><td class="paramname">zipFlags</td><td>Flags such as whether to read the raw compressed data. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00743">743</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a875f1d49a2fff905aef3ef55af834134"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ZipFileByteStream::~ZipFileByteStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00747">747</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aca13371c29b7dc741bcf18609b85a18d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::BytesAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of bytes that can be read at this time. </p>

<p>Reimplemented from <a class="el" href="class_byte_stream.xhtml#a67138ac605386433a40d76b5ccce426a">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00751">751</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afa945b0e6354113634599d6d1a3d689a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="class_seekable_byte_stream.xhtml">SeekableByteStream</a> &gt; ZipFileByteStream::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a new independent stream object referring to the same file.</p>
<p>The returned stream is already open with the same privileges as the receiver. </p>
<dl class="section return"><dt>Returns</dt><dd>A new <a class="el" href="class_file_byte_stream.xhtml">FileByteStream</a> instance. </dd></dl>

<p>Implements <a class="el" href="class_seekable_byte_stream.xhtml#ab1881a0e688aab8d936d5f876087ae39">SeekableByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00831">831</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3c86ce408b15e60c44314d9450305e91"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ZipFileByteStream::Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Close the stream. </p>

<p>Implements <a class="el" href="class_byte_stream.xhtml#a664260c953580771b66a334ce944ad27">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00775">775</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af91c6f0ba2f028976065a62c67d570a3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ZipFileByteStream::IsOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>
<p>Determine whether the stream is currently open (i.e. usable).</p>
<p>I can't define an Open() method on <a class="el" href="class_byte_stream.xhtml">ByteStream</a> here because that would require implementation-specific parameters. </p>

<p>Implements <a class="el" href="class_byte_stream.xhtml#a09ba1e5c736885e30c6764ca8bbe6c33">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00762">762</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a18ba48327a6fcbd9df72a4d3e9238d1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ZipFileByteStream::Open </td>
          <td>(</td>
          <td class="paramtype">struct zip *&#160;</td>
          <td class="paramname"><em>archive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>zipFlags</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Opens a file within an archive and attaches the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">archive</td><td>The Zip arrchive containing the target file. </td></tr>
    <tr><td class="paramname">pathToOpen</td><td>The path within the archive of the resource to open. </td></tr>
    <tr><td class="paramname">zipFlags</td><td>Flags such as whether to read the raw compressed data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns <code>true</code> if the file opened successfully, <code>false</code> otherwise. </dd></dl>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00767">767</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a693bb0dff6f6c7346d37b39cff0519c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::Position </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the current position within the target file. </p>
<dl class="section return"><dt>Returns</dt><dd>The current file position. </dd></dl>

<p>Implements <a class="el" href="class_seekable_byte_stream.xhtml#a0f68529e67707052869c6b954400f305">SeekableByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00827">827</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3cc7140d90aef46925e495325f76770a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::ReadBytes </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>
<p>Read some data from the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>A buffer into which to place any retrieved data. </td></tr>
    <tr><td class="paramname">len</td><td>The number of bytes that can be stored in <code>buf</code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes actually copied into <code>buf</code>. </dd></dl>

<p>Implements <a class="el" href="class_byte_stream.xhtml#a409c3b6a11b07d0d936fb7c8521a3638">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00783">783</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a95bb03a565504898949514faf947c4eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::Seek </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td>
          <td class="paramname"><em>by</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::ios::seekdir&#160;</td>
          <td class="paramname"><em>dir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Seek to a position within the target file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">by</td><td>The amount to move the file position. </td></tr>
    <tr><td class="paramname">dir</td><td>The starting point for the position calculation: current position, start of file, or end of file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The new file position. This may be different from the requested position, if for instance the file was not large enough to accomodate the request. </dd></dl>

<p>Reimplemented from <a class="el" href="class_seekable_byte_stream.xhtml#a749660095841fa8d622a07b13ccc0557">SeekableByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00806">806</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abc0e48a2d3902127d41cfcb803a3e6cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::SpaceAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the amount of space available for writing at this time. </p>

<p>Reimplemented from <a class="el" href="class_byte_stream.xhtml#a5a7541f3d6d236dec09df42b8ba09a1d">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00757">757</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aeff431e295f9bbb4b1938cccb109e87a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">ByteStream::size_type</a> ZipFileByteStream::WriteBytes </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_byte_stream.xhtml#a0a922b9db3d4870668c4766c4951cf0d">size_type</a>&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>
<p>Write some data to the stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>A buffer containing data to write. </td></tr>
    <tr><td class="paramname">len</td><td>The number of bytes to send. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of bytes actually written to the stream. </dd></dl>

<p>Implements <a class="el" href="class_byte_stream.xhtml#abc960f52b9bdaf2fde37f03148e1ede4">ByteStream</a>.</p>

<p>Definition at line <a class="el" href="byte__stream_8cpp_source.xhtml#l00801">801</a> of file <a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a1881d1eac71b6a66ad17d01aaadcb45c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">struct zip_file* ZipFileByteStream::_file</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The underlying Zip file stream. </p>

<p>Definition at line <a class="el" href="byte__stream_8h_source.xhtml#l00674">674</a> of file <a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa562ed18e8b13bedadb3bc7b829d61a3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ios::openmode ZipFileByteStream::_mode</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The mode used to open the file (used by <a class="el" href="class_zip_file_byte_stream.xhtml#afa945b0e6354113634599d6d1a3d689a">Clone()</a>). </p>

<p>Definition at line <a class="el" href="byte__stream_8h_source.xhtml#l00675">675</a> of file <a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/<a class="el" href="byte__stream_8h_source.xhtml">byte_stream.h</a></li>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/<a class="el" href="byte__stream_8cpp_source.xhtml">byte_stream.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="class_zip_file_byte_stream.xhtml">ZipFileByteStream</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:43 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
