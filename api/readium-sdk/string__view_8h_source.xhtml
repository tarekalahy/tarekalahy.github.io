<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/string_view.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('string__view_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">string_view.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="string__view_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  string_view.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 11/7/2013.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef ePub3_string_view_h</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ePub3_string_view_h</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;limits&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="____strhash_8h.xhtml">__strhash.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#ifdef min</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># undef min</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifdef max</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># undef max</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"> </span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">        string_view synopsis</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"> </span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    namespace std {</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">      // [basic.string.view], basic_string_view:</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">      template&lt;class charT, class traits = char_traits&lt;charT&gt;&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">          class basic_string_view;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">      // [string.view.comparison], non-member basic_string_view comparison functions</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">      bool operator==(basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">      bool operator!=(basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">      bool operator&lt; (basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">      bool operator&gt; (basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">      bool operator&lt;=(basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">      bool operator&gt;=(basic_string_view&lt;charT, traits&gt; x, basic_string_view&lt;charT, traits&gt; y) noexcept;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">      // [string.view.comparison], sufficient additional overloads of comparison functions</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">      // [string.view.nonmem], other non-member basic_string_view functions</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">      template&lt;class charT, class traits = char_traits&lt;charT&gt;,</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">               class Allocator = allocator&lt;charT&gt; &gt;</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">        basic_string&lt;charT, traits, Allocator&gt; to_string(</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">          basic_string_view&lt;charT, traits&gt;,</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">          const Allocator&amp; a = Allocator());</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">      template&lt;class charT, class traits&gt;</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">        basic_ostream&lt;charT, traits&gt;&amp;</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">          operator&lt;&lt;(basic_ostream&lt;charT, traits&gt;&amp; os,</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">                     basic_string_view&lt;charT,traits&gt; str);</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">      // basic_string_view typedef names</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">      typedef basic_string_view&lt;char&gt; string_view;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">      typedef basic_string_view&lt;char16_t&gt; u16string_view;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">      typedef basic_string_view&lt;char32_t&gt; u32string_view;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">      typedef basic_string_view&lt;wchar_t&gt; wstring_view;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">      // [string.view.hash], hash support:</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">      template &lt;class T&gt; struct hash;</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">      template &lt;&gt; struct hash&lt;string_view&gt;;</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">      template &lt;&gt; struct hash&lt;u16string_view&gt;;</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">      template &lt;&gt; struct hash&lt;u32string_view&gt;;</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">      template &lt;&gt; struct hash&lt;wstring_view&gt;;</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    namespace std {</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">      template&lt;class charT, class traits = char_traits&lt;charT&gt;&gt;</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">      class basic_string_view {</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">        public:</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">        // types</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">        typedef traits traits_type;</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">        typedef charT value_type;</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">        typedef const charT* pointer;</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">        typedef const charT* const_pointer;</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">        typedef const charT&amp; reference;</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">        typedef const charT&amp; const_reference;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">        typedef implementation-defined const_iterator; // See [string.view.iterators]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">        typedef const_iterator iterator;  // [Footnote: Because basic_string_view refers to a constant sequence, iterator and const_iterator are the same type. --end footnote]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">        typedef reverse_iterator&lt;const_iterator&gt; const_reverse_iterator;</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">        typedef const_reverse_iterator reverse_iterator;</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">        typedef size_t size_type;</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">        typedef ptrdiff_t difference_type;</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">        static constexpr size_type npos = size_type(-1);</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">        // [string.view.cons], construct/copy</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">        constexpr basic_string_view() noexcept;</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">        constexpr basic_string_view(const basic_string_view&amp;) noexcept = default;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">        basic_string_view&amp; operator=(const basic_string_view&amp;) noexcept = default;</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">        template&lt;class Allocator&gt;</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">        basic_string_view(const basic_string&lt;charT, traits, Allocator&gt;&amp; str) noexcept;</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">        basic_string_view(const charT* str);</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">        constexpr basic_string_view(const charT* str, size_type len);</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">        </span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">        // [string.view.iterators], iterators</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">        constexpr const_iterator begin() const noexcept;</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">        constexpr const_iterator end() const noexcept;</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">        constexpr const_iterator cbegin() const noexcept;</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">        constexpr const_iterator cend() const noexcept;</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">        </span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">        const_reverse_iterator rbegin() const noexcept;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">        const_reverse_iterator rend() const noexcept;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">        const_reverse_iterator crbegin() const noexcept;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">        const_reverse_iterator crend() const noexcept;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">        // [string.view.capacity], capacity</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">        constexpr size_type size() const noexcept;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">        constexpr size_type length() const noexcept;</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">        constexpr size_type max_size() const noexcept;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">        constexpr bool empty() const noexcept;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">        // [string.view.access], element access</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">        constexpr const charT&amp; operator[](size_type pos) const;</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">        constexpr const charT&amp; at(size_type pos) const;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">        constexpr const charT&amp; front() const;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">        constexpr const charT&amp; back() const;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">        constexpr const charT* data() const noexcept;</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">        // [string.view.modifiers], modifiers:</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">        void clear() noexcept;</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">        void remove_prefix(size_type n);</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">        void remove_suffix(size_type n);</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">        void swap(basic_string_view&amp; s) noexcept;</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">        // [string.view.ops], string operations:</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">        template&lt;class Allocator&gt;</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">        explicit operator basic_string&lt;charT, traits, Allocator&gt;() const;</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">        size_type copy(charT* s, size_type n, size_type pos = 0) const;</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">        constexpr basic_string_view substr(size_type pos=0, size_type n=npos) const;</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">        int compare(basic_string_view s) const noexcept;</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">        int compare(size_type pos1, size_type n1, basic_string_view s) const;</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">        int compare(size_type pos1, size_type n1,</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">                    basic_string_view s, size_type pos2, size_type n2) const;</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">        int compare(const charT* s) const;</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">        int compare(size_type pos1, size_type n1, const charT* s) const;</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">        int compare(size_type pos1, size_type n1,</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">                    const charT* s, size_type n2) const;</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">        size_type find(basic_string_view s, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">        size_type find(charT c, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">        size_type find(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">        size_type find(const charT* s, size_type pos=0) const;</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">        size_type rfind(basic_string_view s, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">        size_type rfind(charT c, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">        size_type rfind(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">        size_type rfind(const charT* s, size_type pos=npos) const;</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">        size_type find_first_of(basic_string_view s, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">        size_type find_first_of(charT c, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">        size_type find_first_of(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">        size_type find_first_of(const charT* s, size_type pos=0) const;</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">        size_type find_last_of(basic_string_view s, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">        size_type find_last_of(charT c, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">        size_type find_last_of(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">        size_type find_last_of(const charT* s, size_type pos=npos) const;</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">        size_type find_first_not_of(basic_string_view s, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">        size_type find_first_not_of(charT c, size_type pos=0) const noexcept;</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">        size_type find_first_not_of(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">        size_type find_first_not_of(const charT* s, size_type pos=0) const;</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">        size_type find_last_not_of(basic_string_view s, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">        size_type find_last_not_of(charT c, size_type pos=npos) const noexcept;</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">        size_type find_last_not_of(const charT* s, size_type pos, size_type n) const;</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">        size_type find_last_not_of(const charT* s, size_type pos=npos) const;</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">      };</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment"> </span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">// [basic.string.view], basic_string_view:</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml">  194</a></span>&#160;<span class="keyword">class </span><a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">// [string.view.comparison], non-member basic_string_view comparison functions</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keywordtype">bool</span> operator&lt; (basic_string_view&lt;charT, traits&gt; x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">bool</span> operator&lt;=(basic_string_view&lt;charT, traits&gt; x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="keywordtype">char</span>T, <span class="keyword">class</span> traits&gt;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;charT, traits&gt;</a> y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">// [string.view.comparison], sufficient additional overloads of comparison functions</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">// [string.view.nonmem], other non-member basic_string_view functions</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits = std::<span class="keywordtype">char</span>_traits&lt;_CharT&gt;, <span class="keyword">class</span> _Allocator = std::allocator&lt;_CharT&gt;&gt;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    std::basic_string&lt;_CharT, _Traits, _Allocator&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="string__view_8h.xhtml#af6f47369665d3c1315b13c430f6bfd76">to_string</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>, <span class="keyword">const</span> _Allocator&amp; a = _Allocator());</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    std::basic_ostream&lt;_CharT, _Traits&gt;&amp;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    operator&lt;&lt;(std::basic_ostream&lt;_CharT, _Traits&gt;&amp; os,</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;               <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> str);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">// basic_string_view typedef names</span></div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a5d6bbf71ea9bff8e61ba89717123ebff">  222</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;char, std::char_traits&lt;char&gt;</a>&gt;         <a class="code" href="string__view_8h.xhtml#a5d6bbf71ea9bff8e61ba89717123ebff">string_view</a>;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ab8e054b4c02712abc94cb6b63cb5663a">  223</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;char16_t, std::char_traits&lt;char16_t&gt;</a>&gt; <a class="code" href="string__view_8h.xhtml#ab8e054b4c02712abc94cb6b63cb5663a">u16string_view</a>;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a417a61cd5cdd0a328b06158d6db0caa2">  224</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;char32_t, std::char_traits&lt;char32_t&gt;</a>&gt; <a class="code" href="string__view_8h.xhtml#a417a61cd5cdd0a328b06158d6db0caa2">u32string_view</a>;</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a07b235071b2e2ba998b6131bdd795a95">  225</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;wchar_t, std::char_traits&lt;wchar_t&gt;</a>&gt;   <a class="code" href="string__view_8h.xhtml#a07b235071b2e2ba998b6131bdd795a95">wstring_view</a>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">// [string.view.hash], hash support:</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">//template &lt;class T&gt; struct hash;</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">//template &lt;&gt; struct hash&lt;string_view&gt;;</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">//template &lt;&gt; struct hash&lt;u16string_view&gt;;</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">//template &lt;&gt; struct hash&lt;u32string_view&gt;;</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">//template &lt;&gt; struct hash&lt;wstring_view&gt;;</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="code" href="structhash.xhtml">  234</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt; <span class="keyword">struct </span><a class="code" href="structhash.xhtml">hash</a>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits = std::<span class="keywordtype">char</span>_traits&lt;_CharT&gt;&gt;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">class </span><a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">const</span> _CharT*   __data_;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordtype">size_t</span>          __size_;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="comment">// types</span></div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a31753c76b44eda366804550f41aea606">  244</a></span>&#160;    <span class="keyword">typedef</span> _Traits                                 <a class="code" href="classbasic__string__view.xhtml#a31753c76b44eda366804550f41aea606">traits_type</a>;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">  245</a></span>&#160;    <span class="keyword">typedef</span> _CharT                                  <a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a>;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae065f56719198511dada29d20f70d4f0">  246</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">const</span> _CharT*                           <a class="code" href="classbasic__string__view.xhtml#ae065f56719198511dada29d20f70d4f0">pointer</a>;</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">  247</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">const</span> _CharT*                           <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a>;</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#af758e326d78098e25d72faa85359867c">  248</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">const</span> _CharT&amp;                           <a class="code" href="classbasic__string__view.xhtml#af758e326d78098e25d72faa85359867c">reference</a>;</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">  249</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">const</span> _CharT&amp;                           <a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">const_reference</a>;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">  250</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a>                           <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a>;</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a514fda1abe36b9b36a4885781ad39526">  251</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a>                          <a class="code" href="classbasic__string__view.xhtml#a514fda1abe36b9b36a4885781ad39526">iterator</a>;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="comment">// Because basic_string_view refers to a constant sequence, iterator and const_iterator are the same type.</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    </div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">  254</a></span>&#160;    <span class="keyword">typedef</span> std::reverse_iterator&lt;const_iterator&gt;   <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a>;</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">  255</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a>                  <a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">reverse_iterator</a>;</div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">  256</a></span>&#160;    <span class="keyword">typedef</span> <span class="keywordtype">size_t</span>                                  <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a>;</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a2488e0a780862ad286cb121dc5407f32">  257</a></span>&#160;    <span class="keyword">typedef</span> ptrdiff_t                               <a class="code" href="classbasic__string__view.xhtml#a2488e0a780862ad286cb121dc5407f32">difference_type</a>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    </div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">  259</a></span>&#160;    <span class="keyword">static</span> <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <span class="keyword">const</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a> = <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a>(-1);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="comment">// [string.view.cons], construct/copy</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">  264</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>() <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        : __data_(<span class="keywordtype">nullptr</span>), __size_(0)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        {}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_DEFAULTED_FUNCTIONS)</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor"></span>    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(<span class="keyword">const</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp;) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> = default;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp; operator=(const <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp;) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> = default;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor"></span>    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a06ecd7b1bcc0633becbc9029a28b345c">  274</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(<span class="keyword">const</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp; __o) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        : __data_(__o.__data_), __size_(__o.__size_)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        {}</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a7ae035f5cf91227eef5caa39a417bf11">  279</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp; <a class="code" href="classbasic__string__view.xhtml#a7ae035f5cf91227eef5caa39a417bf11">operator=</a>(<span class="keyword">const</span> <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp;) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            __data_ = __o.__data_;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            __size_ = __o.__size_;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> _Allocator&gt;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a8f1bcd3326b3dcdf96e8acee41f6b6b3">  289</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(<span class="keyword">const</span> std::basic_string&lt;_CharT, _Traits, _Allocator&gt;&amp; str) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        : __data_(str.data()), __size_(str.length())</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        {}</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a5ddb38f7ffe43e2aff70f421e79c0dba">  294</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> str)</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        : __data_(str), __size_(<a class="code" href="classbasic__string__view.xhtml#a31753c76b44eda366804550f41aea606">traits_type</a>::<a class="code" href="classbasic__string__view.xhtml#ae66e033877ee8a284232b9e8a077e1c7">length</a>(str))</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        {}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aee9e3f72252e25d7f974545d4cc7e7c9">  299</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> str, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> len)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        : __data_(str), __size_(len)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        {}</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="comment">// [string.view.iterators], iterators</span></div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a51835ac1d6145cb47b53f5d6e8efa5a5">  304</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a> <a class="code" href="classbasic__string__view.xhtml#a51835ac1d6145cb47b53f5d6e8efa5a5">begin</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>    { <span class="keywordflow">return</span> __data_; }</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#acd8e64ca7bb56a26f5bf7133457e9fc8">  305</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a> <a class="code" href="classbasic__string__view.xhtml#acd8e64ca7bb56a26f5bf7133457e9fc8">end</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>      { <span class="keywordflow">return</span> __data_ + __size_; }</div>
<div class="line"><a name="l00306"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a16ea2f067b2160f255ad7e6dced18034">  306</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a> <a class="code" href="classbasic__string__view.xhtml#a16ea2f067b2160f255ad7e6dced18034">cbegin</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>   { <span class="keywordflow">return</span> __data_; }</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a376dd2f68bfa09c507b0fe881e07a631">  307</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a6899cdd59815eb25384f5053033c2235">const_iterator</a> <a class="code" href="classbasic__string__view.xhtml#a376dd2f68bfa09c507b0fe881e07a631">cend</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>     { <span class="keywordflow">return</span> __data_ + __size_; }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    </div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#abe213a692f76303ff7a9fd91fe6fad26">  309</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a> <a class="code" href="classbasic__string__view.xhtml#abe213a692f76303ff7a9fd91fe6fad26">rbegin</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>     { <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">reverse_iterator</a>(<a class="code" href="classbasic__string__view.xhtml#acd8e64ca7bb56a26f5bf7133457e9fc8">end</a>()); }</div>
<div class="line"><a name="l00310"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a6b2dfeedf74beb5e0691f7e1fdba594c">  310</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a> <a class="code" href="classbasic__string__view.xhtml#a6b2dfeedf74beb5e0691f7e1fdba594c">rend</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>       { <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">reverse_iterator</a>(<a class="code" href="classbasic__string__view.xhtml#a51835ac1d6145cb47b53f5d6e8efa5a5">begin</a>()); }</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aa79f7673de103302ad1a297519d153db">  311</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a> <a class="code" href="classbasic__string__view.xhtml#aa79f7673de103302ad1a297519d153db">crbegin</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>    { <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">reverse_iterator</a>(<a class="code" href="classbasic__string__view.xhtml#a376dd2f68bfa09c507b0fe881e07a631">cend</a>()); }</div>
<div class="line"><a name="l00312"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a530193548c3333ccb15dbd5aff493864">  312</a></span>&#160;    <a class="code" href="classbasic__string__view.xhtml#acb61a5b9837f30fdc6b378da08ef57ea">const_reverse_iterator</a> <a class="code" href="classbasic__string__view.xhtml#a530193548c3333ccb15dbd5aff493864">crend</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>      { <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a7f7b568a9b69ef7b58f5ea7c5bb556f8">reverse_iterator</a>(<a class="code" href="classbasic__string__view.xhtml#a16ea2f067b2160f255ad7e6dced18034">cbegin</a>()); }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="comment">// [string.view.capacity], capacity</span></div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">  315</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>          { <span class="keywordflow">return</span> __size_; }</div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae66e033877ee8a284232b9e8a077e1c7">  316</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae66e033877ee8a284232b9e8a077e1c7">length</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>        { <span class="keywordflow">return</span> __size_; }</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a2bb0d835fbda123427d34bae8844479f">  317</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a2bb0d835fbda123427d34bae8844479f">max_size</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>      { <span class="keywordflow">return</span> std::allocator&lt;value_type&gt;::max_size(); }</div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a6734631b028f42f97600c5e651a326cd">  318</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <span class="keywordtype">bool</span> <a class="code" href="classbasic__string__view.xhtml#a6734631b028f42f97600c5e651a326cd">empty</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>              { <span class="keywordflow">return</span> __size_ == 0; }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="comment">// [string.view.access], element access</span></div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a4fa397245143f27a8ba617753fd9ac8c">  321</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">const_reference</a> <a class="code" href="classbasic__string__view.xhtml#a4fa397245143f27a8ba617753fd9ac8c">operator[]</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos)<span class="keyword"> const   </span>{ <span class="keywordflow">return</span> __data_[pos]; }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">const_reference</a> <a class="code" href="classbasic__string__view.xhtml#ac1ee6e597df5cf869e9a1cb8bdcb5f4c">at</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a4034235cc71af9982f619c2409278eec">  323</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">const_reference</a> <a class="code" href="classbasic__string__view.xhtml#a4034235cc71af9982f619c2409278eec">front</a>()<span class="keyword"> const                     </span>{ <span class="keywordflow">return</span> __data_[0]; }</div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a242c7a7dd53c5bae6dba110c3c208099">  324</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#a08913dc3ad63cd41de6b6ec54785965c">const_reference</a> <a class="code" href="classbasic__string__view.xhtml#a242c7a7dd53c5bae6dba110c3c208099">back</a>()<span class="keyword"> const                      </span>{ <span class="keywordflow">return</span> __data_[__size_-1]; }</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">  325</a></span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>() const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>              { <span class="keywordflow">return</span> __data_; }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="comment">// [string.view.modifiers], modifiers:</span></div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#afe82963bb08e01aebdcbd524f51c1a34">  328</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#afe82963bb08e01aebdcbd524f51c1a34">clear</a>() <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>                                      { __data_ = <span class="keyword">nullptr</span>; __size_ = 0; }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#a85ff0e5ead5581efe35f92ec6d261596">remove_prefix</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#acb07499b7694d4e6b22f759f8d3520da">remove_suffix</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#a145cc841a2b8d0823e6e2719bd508b83">swap</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&amp; s) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">// [string.view.ops], string operations:</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> _Allocator&gt;</div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a68e56daee4cef2684cb7c61be7b5eaf0">  335</a></span>&#160;    <span class="keyword">explicit</span> <span class="keyword">operator</span> std::basic_string&lt;_CharT, _Traits, _Allocator&gt;() <span class="keyword">const</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            <span class="keywordflow">return</span> std::basic_string&lt;_CharT, _Traits, _Allocator&gt;(<a class="code" href="classbasic__string__view.xhtml#a51835ac1d6145cb47b53f5d6e8efa5a5">begin</a>(), <a class="code" href="classbasic__string__view.xhtml#acd8e64ca7bb56a26f5bf7133457e9fc8">end</a>());</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae33ce91aae2f8d7bcd540c0c6da59ce7">copy</a>(_CharT* s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos = 0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> <a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">substr</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    </div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">  344</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordtype">int</span> r = traits_type::compare(__data_, s.data(), std::min(__size_, s.size()));</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">if</span> (r == 0) {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                r = int(__size_) - int(s.size());</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a1e35a95f59e7532afb560e56013e6956">  352</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos1, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n1, <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s)<span class="keyword"> const</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">substr</a>(pos1, n1).<a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(s);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a8c8244e3763d105f83f8365695b9003c">  356</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos1, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n1,</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos2, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n2)<span class="keyword"> const</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">substr</a>(pos1, n1).<a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(s.<a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">substr</a>(pos2, n2));</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        }</div>
<div class="line"><a name="l00361"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#afdec0d1165dcc52572468236632f351f">  361</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s)<span class="keyword"> const</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(s));</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae922d7ce287e328289948486f021443b">  365</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos1, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n1, <span class="keyword">const</span> <a class="code" href="classbasic__string__view.xhtml#ae065f56719198511dada29d20f70d4f0">pointer</a> s)<span class="keyword"> const</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(pos1, n1, <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(s));</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        }</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a6eca7cb9af5c5bd5e31f050d85ae8940">  369</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos1, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n1,</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n2)<span class="keyword"> const</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#af9634d7e22de212942d9874b29206d17">compare</a>(pos1, n1, <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(s, n2));</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    </div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const _NOEXCEPT;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const _NOEXCEPT;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const _NOEXCEPT;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const _NOEXCEPT;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=0) const;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const _NOEXCEPT;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n) const;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos=<a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>) const;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    </div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;};</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;template &lt;class _CharT, class _Traits&gt;</div>
<div class="line"><a name="l00408"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ac1ee6e597df5cf869e9a1cb8bdcb5f4c">  408</a></span>&#160;<a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a> const _CharT&amp; <a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&lt;_CharT, _Traits&gt;::<a class="code" href="classbasic__string__view.xhtml#ac1ee6e597df5cf869e9a1cb8bdcb5f4c">at</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordflow">return</span> ((pos &lt; __size_)</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                ? __data_[pos]</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                : <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;basic_string_view::at&quot;</span>));</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;}</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00416"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a85ff0e5ead5581efe35f92ec6d261596">  416</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#a85ff0e5ead5581efe35f92ec6d261596">basic_string_view&lt;_CharT, _Traits&gt;::remove_prefix</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n)</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;{</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">if</span> (n &lt;= __size_)</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        __data_ += n;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        __size_ -= n;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00425"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#acb07499b7694d4e6b22f759f8d3520da">  425</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#acb07499b7694d4e6b22f759f8d3520da">basic_string_view&lt;_CharT, _Traits&gt;::remove_suffix</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n)</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;{</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordflow">if</span> (n &lt;= __size_)</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    {</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        __size_ -= n;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;}</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00433"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a145cc841a2b8d0823e6e2719bd508b83">  433</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classbasic__string__view.xhtml#a145cc841a2b8d0823e6e2719bd508b83">basic_string_view&lt;_CharT, _Traits&gt;::swap</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> &amp;s) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;{</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="namespacestd.xhtml#a0755198bdfa968ee99a82b99f38cdbd6">std::swap</a>(__data_, s.__data_);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="namespacestd.xhtml#a0755198bdfa968ee99a82b99f38cdbd6">std::swap</a>(__size_, s.__size_);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;}</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00440"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae33ce91aae2f8d7bcd540c0c6da59ce7">  440</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ae33ce91aae2f8d7bcd540c0c6da59ce7">basic_string_view&lt;_CharT, _Traits&gt;::copy</a>(_CharT *s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keywordflow">if</span> (pos &gt; __size_)</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;basic_string_view::copy&quot;</span>);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    std::copy_n(<a class="code" href="classbasic__string__view.xhtml#a51835ac1d6145cb47b53f5d6e8efa5a5">begin</a>()+pos, std::min(n, __size_ - pos), s);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;}</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<a class="code" href="__compiler_8h.xhtml#acaa06fbc27c59926a41e7575667e5280">CONSTEXPR</a></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a></div>
<div class="line"><a name="l00449"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">  449</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ad35ff1677af63e478d9208bb9cb738a0">basic_string_view&lt;_CharT, _Traits&gt;::substr</a>(<a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordflow">return</span> ((pos &gt; __size_)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                ? <span class="keywordflow">throw</span> std::out_of_range(<span class="stringliteral">&quot;basic_string_view::substr&quot;</span>)</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                : <a class="code" href="classbasic__string__view.xhtml#a247087c7d5e5d007b22a99ed883e5c65">basic_string_view</a>(__data_+pos, std::min(n, __size_-pos)));</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="code" href="struct____traits__eq.xhtml">  457</a></span>&#160;<span class="keyword">struct </span><a class="code" href="__config_8h.xhtml#a57279d342ddfd0707ee8ece65b1bf8ad">_LIBCPP_HIDDEN</a> <a class="code" href="struct____traits__eq.xhtml">__traits_eq</a></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;{</div>
<div class="line"><a name="l00459"></a><span class="lineno"><a class="code" href="struct____traits__eq.xhtml#a932a15aa77a89d37b73d2697dcd192be">  459</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> _Traits::char_type <a class="code" href="struct____traits__eq.xhtml#a932a15aa77a89d37b73d2697dcd192be">char_type</a>;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    </div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00462"></a><span class="lineno"><a class="code" href="struct____traits__eq.xhtml#a66ef4bd96a025eb34d710e71689d42b8">  462</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct____traits__eq.xhtml#a66ef4bd96a025eb34d710e71689d42b8">operator()</a>(<span class="keyword">const</span> <a class="code" href="struct____traits__eq.xhtml#a932a15aa77a89d37b73d2697dcd192be">char_type</a>&amp; __a, <span class="keyword">const</span> <a class="code" href="struct____traits__eq.xhtml#a932a15aa77a89d37b73d2697dcd192be">char_type</a>&amp; __b) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a> {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="keywordflow">return</span> _Traits::eq(__a, __b);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    }</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;};</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00469"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae350ea085d58ec02d2a50b4ff5a82fb3">  469</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">basic_string_view&lt;_CharT, _Traits&gt;::find</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordflow">if</span> (__pos &gt; __sz || __sz - __pos &lt; __n)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">if</span> (__n == 0)</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">return</span> __pos;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __r = std::search(__p + __pos, __p + __sz, __s, __s + __n,</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                      <a class="code" href="struct____traits__eq.xhtml">__traits_eq&lt;traits_type&gt;</a>());</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    <span class="keywordflow">if</span> (__r == __p + __sz)</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__r - __p);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;}</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00485"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">  485</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">basic_string_view&lt;_CharT, _Traits&gt;::find</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;{</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;}</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00491"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aec959c5116444d2478dc2548c63c0153">  491</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">basic_string_view&lt;_CharT, _Traits&gt;::find</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;{</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">return</span> traits_type::find(__data_+__pos, __size_-__pos, __c);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a8ab10fd05f6161828b7def8e1e6710e6">  497</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">basic_string_view&lt;_CharT, _Traits&gt;::find</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;}</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00503"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ada32d7762b8423e8fc223e38c755fd7a">  503</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">basic_string_view&lt;_CharT, _Traits&gt;::rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    __pos = std::min(__pos, __sz);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keywordflow">if</span> (__n &lt; __sz - __pos)</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        __pos += __n;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        __pos = __sz;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __r = std::find_end(__p, __p + __pos, __s, __s + __n,</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                      <a class="code" href="struct____traits__eq.xhtml">__traits_eq&lt;traits_type&gt;</a>());</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordflow">if</span> (__n &gt; 0 &amp;&amp; __r == __p + __pos)</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__r - __p);</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;}</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">  520</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">basic_string_view&lt;_CharT, _Traits&gt;::rfind</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;{</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;}</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00526"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a52ff48153008dd15c97f029e1e3cbcd0">  526</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">basic_string_view&lt;_CharT, _Traits&gt;::rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;{</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <span class="keywordflow">if</span> (__sz)</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    {</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            ++__pos;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            __pos = __sz;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __p;)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <span class="keywordflow">if</span> (traits_type::eq(*--__ps, __c))</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            }</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;}</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aa60c4eaa675477feb75bc9d668ded17f">  546</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">basic_string_view&lt;_CharT, _Traits&gt;::rfind</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00552"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a2de4f5da204dfdc98e0b70b7b0bd0444">  552</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">basic_string_view&lt;_CharT, _Traits&gt;::find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">if</span> (__pos &gt;= __sz || __n == 0)</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __r = std::find_first_of(__p + __pos, __p + __sz, __s,</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                           __s + __n, <a class="code" href="struct____traits__eq.xhtml">__traits_eq&lt;traits_type&gt;</a>());</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordflow">if</span> (__r == __p + __sz)</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__r - __p);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;}</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00566"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">  566</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">basic_string_view&lt;_CharT, _Traits&gt;::find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;{</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;}</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00572"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#aaafbd77d81fd6e5da5eb14fbe1513072">  572</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">basic_string_view&lt;_CharT, _Traits&gt;::find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;{</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a779edfee4125b169ec6372f32aaa3c6d">find</a>(__c, __pos);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;}</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00578"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae1d6e860f3216fdbea5bf5f6741fbaf8">  578</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">basic_string_view&lt;_CharT, _Traits&gt;::find_first_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a122c6caff1d4a47065ba529fe8541709">find_first_of</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;}</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00584"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a9045bb63721e5759da710e9776b7e34d">  584</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">basic_string_view&lt;_CharT, _Traits&gt;::find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keywordflow">if</span> (__n != 0)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    {</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            ++__pos;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            __pos = __sz;</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __p;)</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __r = traits_type::find(__s, __n, *--__ps);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            <span class="keywordflow">if</span> (__r)</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    }</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;}</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00605"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">  605</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">basic_string_view&lt;_CharT, _Traits&gt;::find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;{</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;}</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00611"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae461ee50ff17ed1f11e46aeeef55a8e0">  611</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">basic_string_view&lt;_CharT, _Traits&gt;::find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;{</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#aa73ddfa4016007317f4bd907fff2ecc3">rfind</a>(__c, __pos);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;}</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00617"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a75773f368d4f590283645dbdc9b70089">  617</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">basic_string_view&lt;_CharT, _Traits&gt;::find_last_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a65ba0dbce825757b8438ff68f5205855">find_last_of</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;}</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00623"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a73fbe096e871d81e8871404a55e3415d">  623</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">basic_string_view&lt;_CharT, _Traits&gt;::find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    {</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __pe = __p + __sz;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __pe; ++__ps)</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            <span class="keywordflow">if</span> (traits_type::find(__s, __n, *__ps) == 0)</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    }</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;}</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00638"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">  638</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">basic_string_view&lt;_CharT, _Traits&gt;::find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;{</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;}</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00644"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a73c7691c85df4ce67f9429a6322dd262">  644</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">basic_string_view&lt;_CharT, _Traits&gt;::find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;{</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    {</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __pe = __p + __sz;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __pe; ++__ps)</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            <span class="keywordflow">if</span> (!traits_type::eq(*__ps, __c))</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00659"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a192a15a378e622593ae1ee3bef2ad73e">  659</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">basic_string_view&lt;_CharT, _Traits&gt;::find_first_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ae623851710df70ca6b29d6b9efceab4e">find_first_not_of</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;}</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00665"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ac05c96634fa7b653a9651786ee99ddf2">  665</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">basic_string_view&lt;_CharT, _Traits&gt;::find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __n)<span class="keyword"> const</span></div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        ++__pos;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        __pos = __sz;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __p;)</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        <span class="keywordflow">if</span> (traits_type::find(__s, __n, *--__ps) == 0)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;}</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00680"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">  680</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">basic_string_view&lt;_CharT, _Traits&gt;::find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;{</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(__s.data(), __pos, __s.size());</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;}</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00686"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#ab09e6d000dff47c6a5f3dfe3441b757b">  686</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">basic_string_view&lt;_CharT, _Traits&gt;::find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a> __c, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;{</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __sz = <a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>();</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    <span class="keywordflow">if</span> (__pos &lt; __sz)</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        ++__pos;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        __pos = __sz;</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __p = <a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>();</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __ps = __p + __pos; __ps != __p;)</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            <span class="keywordflow">if</span> (!traits_type::eq(*--__ps, __c))</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a><span class="keyword">&gt;</span>(__ps - __p);</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#ac2c8c64be8a2a9e6f73db4093b78f961">npos</a>;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;}</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="keyword">typename</span> <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">basic_string_view&lt;_CharT, _Traits&gt;::size_type</a></div>
<div class="line"><a name="l00701"></a><span class="lineno"><a class="code" href="classbasic__string__view.xhtml#a24e2a65e0672f20ff085f7964209d0ed">  701</a></span>&#160;<a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">basic_string_view&lt;_CharT, _Traits&gt;::find_last_not_of</a>(<a class="code" href="classbasic__string__view.xhtml#ae413e0d856e78b62bf44128f3c296ca8">const_pointer</a> __s, <a class="code" href="classbasic__string__view.xhtml#adccfaacc375368f63246a8c8cda8e41c">size_type</a> __pos)<span class="keyword"> const</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classbasic__string__view.xhtml#a3f73fb8635fede947049c4fee0c1db8f">find_last_not_of</a>(__s, __pos, traits_type::length(__s));</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;}</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma mark - Comparisons</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">// [string.view.comparison], non-member basic_string_view comparison functions</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00713"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a95c3e84d68251ad199560c2186ac274c">  713</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;{</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) == 0;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;}</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00718"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a20f697211c7e0248073c1fa6b750c34f">  718</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;{</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) != 0;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;}</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00723"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a7c9b180c32b307fd28854486e82aaecd">  723</a></span>&#160;<span class="keywordtype">bool</span> operator&lt; (basic_string_view&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;{</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) &lt; 0;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;}</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00728"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a370c300d06b0c3ee7e732067c62a2782">  728</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;{</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keywordflow">return</span> __y &lt; __x;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;}</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00733"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#abad844901467bb3e4b055fd6a9d8f793">  733</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(basic_string_view&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;{</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordflow">return</span> !(__x &gt; __y);</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;}</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00738"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ad43ac1d95589ea70e7fe511ad45d0d90">  738</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;{</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordflow">return</span> !(__x &lt; __y);</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;}</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00744"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ad7855fa3cfe44d53ed1823b6d519aef1">  744</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;{</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordflow">return</span> __x == <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__y);</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;}</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00749"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ae209a62d0053ca876b5fe016164f29f8">  749</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;{</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordflow">return</span> __x != <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__y);</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;}</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00754"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#af85d9b86c2006f9298644b7ffedc8165">  754</a></span>&#160;<span class="keywordtype">bool</span> operator&lt; (basic_string_view&lt;_CharT, _Traits&gt; __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;{</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordflow">return</span> __x &lt; basic_string_view&lt;_CharT, _Traits&gt;(__y);</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;}</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00759"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#aa2d49f8e17dfb91065a9bae52cb82873">  759</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;{</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="keywordflow">return</span> __x &gt; <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__y);</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;}</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00764"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a38d97844a47919ff0efee43fa4adc91f">  764</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(basic_string_view&lt;_CharT, _Traits&gt; __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;{</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="keywordflow">return</span> __x &lt;= basic_string_view&lt;_CharT, _Traits&gt;(__y);</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;}</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00769"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a59830f04f09fdae1673311f00788744f">  769</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, std::basic_string&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;{</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keywordflow">return</span> __x &gt;= <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__y);</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;}</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00775"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a4e75198598f6824cfd8fa828a3b8a71e">  775</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;{</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    <span class="keywordflow">return</span> __y == <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__x);</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;}</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00780"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ab912544e6a6111f4ad78f6278d3f9c72">  780</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;{</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    <span class="keywordflow">return</span> __y != <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__x);</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;}</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00785"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a62a447e8d96520ad8285bef139a9ca91">  785</a></span>&#160;<span class="keywordtype">bool</span> operator&lt; (std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;{</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    <span class="keywordflow">return</span> __y &gt;= <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__x);</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;}</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00790"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ac6eb6ab05ddcd93b1d191727042694e3">  790</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;{</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordflow">return</span> __y &lt;= basic_string_view&lt;_CharT, _Traits&gt;(__x);</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;}</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00795"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a5b678dc1da058570020928dd97b74609">  795</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;{</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="keywordflow">return</span> __y &gt; <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a>(__x);</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;}</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00800"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ac1c74e65df70a14fb7bb17a6be4623bb">  800</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(std::basic_string&lt;_CharT, _Traits&gt; __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;{</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    <span class="keywordflow">return</span> __y &lt; basic_string_view&lt;_CharT, _Traits&gt;(__x);</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;}</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00806"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a905c7c35d68ff02e1b85ee7b6ad03312">  806</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;{</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) == 0;</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;}</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00811"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#acf83795bab17dfd1cbd09de123906e23">  811</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;{</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) != 0;</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;}</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00816"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a0820d7c367d98037c95ef4c5d880285a">  816</a></span>&#160;<span class="keywordtype">bool</span> operator&lt; (basic_string_view&lt;_CharT, _Traits&gt; __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;{</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) &lt; 0;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;}</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00821"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a580ed290cf9c3806c387302c3151013e">  821</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;{</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    <span class="keywordflow">return</span> __x.compare(__y) &gt; 0;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;}</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00826"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ad31af09efeef2d5530d599b87cd235d8">  826</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(basic_string_view&lt;_CharT, _Traits&gt; __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;{</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="keywordflow">return</span> !(__x &gt; __y);</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;}</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00831"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a3abd07975727e67f267f026720cb2dff">  831</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __x, <span class="keyword">const</span> _CharT* __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;{</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keywordflow">return</span> !(__x &lt; __y);</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;}</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00837"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a0d7ae6c106fd1d739886ee8b3ea7e9c0">  837</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<span class="keyword">const</span> _CharT* __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;{</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="keywordflow">return</span> __y == __x;</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;}</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00842"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a138a69e4b60546919e562df3f69833ef">  842</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a606605c8a6f4d7f8f058690807e48717">operator!=</a>(<span class="keyword">const</span> _CharT* __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;{</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    <span class="keywordflow">return</span> __y != __x;</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;}</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00847"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a28fb853140f1cefb90056a82612e13e2">  847</a></span>&#160;<span class="keywordtype">bool</span> operator&lt; (const _CharT* __x, basic_string_view&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;{</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    <span class="keywordflow">return</span> __y &gt;= __x;</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;}</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00852"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#ab6c1b62ea332269034d21f9a49712d50">  852</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a3f19335f99e04ebdcdf6c02f8b1fcc0b">operator&gt; </a>(<span class="keyword">const</span> _CharT* __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;{</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="keywordflow">return</span> __y &lt;= __x;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;}</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00857"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#abf781d0c77d6ead9dad9bcc5fefa9dbc">  857</a></span>&#160;<span class="keywordtype">bool</span> operator&lt;=(const _CharT* __x, basic_string_view&lt;_CharT, _Traits&gt; __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;{</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    <span class="keywordflow">return</span> __y &gt; __x;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;}</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00862"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a2d17911775d8a2ed07c2c2f40604c3ad">  862</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="optional_8h.xhtml#a4d82a8397f8c8f4b45b3e9df886b2c17">operator&gt;=</a>(<span class="keyword">const</span> _CharT* __x, <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> __y) <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;{</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="keywordflow">return</span> __y &lt; __x;</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;}</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma mark - Other Non-Member Functions</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="comment">// [string.view.nonmem], other non-member basic_string_view functions</span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits, <span class="keyword">class</span> _Allocator&gt;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;std::basic_string&lt;_CharT, _Traits, _Allocator&gt;</div>
<div class="line"><a name="l00874"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#af6f47369665d3c1315b13c430f6bfd76">  874</a></span>&#160;<a class="code" href="string__view_8h.xhtml#af6f47369665d3c1315b13c430f6bfd76">to_string</a>(<a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> str, <span class="keyword">const</span> _Allocator&amp; a)</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;{</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">return</span> std::basic_string&lt;_CharT, _Traits, _Allocator&gt;(str.<a class="code" href="classbasic__string__view.xhtml#aae1c6dec068c07e1343677ec4961f1c4">data</a>(), str.<a class="code" href="classbasic__string__view.xhtml#af49b16796970c265b0b3af624c6b189a">size</a>(), a);</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;}</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;std::basic_ostream&lt;_CharT, _Traits&gt;&amp;</div>
<div class="line"><a name="l00881"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a3980be2c76c5be8bd13da85c1c630eb9">  881</a></span>&#160;operator&lt;&lt;(std::basic_ostream&lt;_CharT, _Traits&gt;&amp; os,</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;           <a class="code" href="classbasic__string__view.xhtml">basic_string_view&lt;_CharT, _Traits&gt;</a> str)</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;{</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    <span class="keywordflow">return</span> os.write(str.data(), str.size());</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;}</div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#pragma mark - Hashing</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> _Ptr&gt;</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;std::size_t <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00893"></a><span class="lineno"><a class="code" href="string__view_8h.xhtml#a4d76763555572aa3caa1c97ec0644eb6">  893</a></span>&#160;<a class="code" href="string__view_8h.xhtml#a4d76763555572aa3caa1c97ec0644eb6">__do_string_view_hash</a>(_Ptr __p, _Ptr __e)</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;{</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> std::iterator_traits&lt;_Ptr&gt;::value_type <a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a>;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct____murmur2__or__cityhash.xhtml">__murmur2_or_cityhash&lt;size_t&gt;</a>()(__p, (__e - __p)*<span class="keyword">sizeof</span>(<a class="code" href="classbasic__string__view.xhtml#ab031b2d428381dbb58e669a59c448f14">value_type</a>));</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;}</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;EPUB3_END_NAMESPACE</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;<span class="keyword">namespace </span>std</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;{</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00905"></a><span class="lineno"><a class="code" href="structstd_1_1hash_3_01e_pub3_1_1basic__string__view_3_01___char_t_00_01___traits_01_4_01_4.xhtml">  905</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structhash.xhtml">hash</a>&lt;ePub3::<a class="code" href="classbasic__string__view.xhtml">basic_string_view</a>&lt;_CharT, _Traits&gt;&gt; : <span class="keyword">public</span> std::unary_function&lt;::ePub3::basic_string_view&lt;_CharT, _Traits&gt;, std::size_t&gt;</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    {</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;        std::size_t operator()(const ::ePub3::basic_string_view&lt;_CharT, _Traits&gt;&amp; __s) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a>;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    };</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _CharT, <span class="keyword">class</span> _Traits&gt;</div>
<div class="line"><a name="l00911"></a><span class="lineno"><a class="code" href="structstd_1_1hash_3_01e_pub3_1_1basic__string__view_3_01___char_t_00_01___traits_01_4_01_4.xhtml#a7f86520a467657dc0cbb74220d6312e3">  911</a></span>&#160;    std::size_t <a class="code" href="structhash.xhtml">hash&lt;ePub3::basic_string_view&lt;_CharT, _Traits&gt;</a>&gt;::operator()(const ::ePub3::basic_string_view&lt;_CharT, _Traits&gt; &amp;__s) <span class="keyword">const</span> <a class="code" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    {</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="string__view_8h.xhtml#a4d76763555572aa3caa1c97ec0644eb6">__do_string_view_hash</a>(__s.data(), __s.data() + __s.size());</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    }</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;}</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_090fe5b49b20e659802fc7ff806b453c.xhtml">utilities</a></li><li class="navelem"><a class="el" href="string__view_8h.xhtml">string_view.h</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
