<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: SpineItem Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_spine_item.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_spine_item-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SpineItem Class Reference<div class="ingroups"><a class="el" href="group__epub-model.xhtml">EPUB 3 Model</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="spine_8h_source.xhtml">spine.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for SpineItem:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_spine_item__inherit__graph.svg" width="635" height="211"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for SpineItem:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="class_spine_item__coll__graph.svg" width="803" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a446ca066a966d46c8a299d580d60e4a0"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="class_i_r_i.xhtml">IRI</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a446ca066a966d46c8a299d580d60e4a0">PropertyList</a></td></tr>
<tr class="separator:a446ca066a966d46c8a299d580d60e4a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_pointer_type"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_pointer_type')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_pointer_type.xhtml">PointerType&lt; SpineItem &gt;</a></td></tr>
<tr class="memitem:ae6755c23435fbdbe8ea60d4c383e72b5 inherit pub_types_class_pointer_type"><td class="memItemLeft" align="right" valign="top">typedef <br class="typebreak"/>
std::enable_shared_from_this<br class="typebreak"/>
&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ae6755c23435fbdbe8ea60d4c383e72b5">_Base</a></td></tr>
<tr class="separator:ae6755c23435fbdbe8ea60d4c383e72b5 inherit pub_types_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1ab47000d4c6f77ce300a54b477d6d0 inherit pub_types_class_pointer_type"><td class="memItemLeft" align="right" valign="top">typedef std::remove_cv<br class="typebreak"/>
&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a></td></tr>
<tr class="separator:ae1ab47000d4c6f77ce300a54b477d6d0 inherit pub_types_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf22a9d4ec4938b1447535741774729c inherit pub_types_class_pointer_type"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; <a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a></td></tr>
<tr class="separator:adf22a9d4ec4938b1447535741774729c inherit pub_types_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b24c001b2485ee3ac4d46be4fe0d222 inherit pub_types_class_pointer_type"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; const <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml#ae1ab47000d4c6f77ce300a54b477d6d0">Type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a></td></tr>
<tr class="separator:a8b24c001b2485ee3ac4d46be4fe0d222 inherit pub_types_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_class_property_holder"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_property_holder')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="class_property_holder.xhtml">PropertyHolder</a></td></tr>
<tr class="memitem:af03a90efab04e7b1837c9a70941a1d14 inherit pub_types_class_property_holder"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classshared__vector.xhtml">shared_vector</a>&lt; <a class="el" href="class_property.xhtml">Property</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a></td></tr>
<tr class="memdesc:af03a90efab04e7b1837c9a70941a1d14 inherit pub_types_class_property_holder"><td class="mdescLeft">&#160;</td><td class="mdescRight">An array of Metadata items, in document order.  <a href="#af03a90efab04e7b1837c9a70941a1d14">More...</a><br/></td></tr>
<tr class="separator:af03a90efab04e7b1837c9a70941a1d14 inherit pub_types_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca505a5321633f12b4749e788dc8f1c inherit pub_types_class_property_holder"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr&lt; <a class="el" href="class_property.xhtml">Property</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a5ca505a5321633f12b4749e788dc8f1c">value_type</a></td></tr>
<tr class="separator:a5ca505a5321633f12b4749e788dc8f1c inherit pub_types_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60bf75abba08ca8848965e90b9dcee41 inherit pub_types_class_property_holder"><td class="memItemLeft" align="right" valign="top">typedef PropertyList::size_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a60bf75abba08ca8848965e90b9dcee41">size_type</a></td></tr>
<tr class="separator:a60bf75abba08ca8848965e90b9dcee41 inherit pub_types_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac754010a6daf9c2ac5f614eb3718cfee inherit pub_types_class_property_holder"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="class_i_r_i.xhtml">IRI</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ac754010a6daf9c2ac5f614eb3718cfee">PropertyIRIList</a></td></tr>
<tr class="memdesc:ac754010a6daf9c2ac5f614eb3718cfee inherit pub_types_class_property_holder"><td class="mdescLeft">&#160;</td><td class="mdescRight">An array of concrete property IRIs.  <a href="#ac754010a6daf9c2ac5f614eb3718cfee">More...</a><br/></td></tr>
<tr class="separator:ac754010a6daf9c2ac5f614eb3718cfee inherit pub_types_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f1b1540902d99a167b58436790525a8 inherit pub_types_class_property_holder"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; <a class="el" href="classstring.xhtml">string</a>, <a class="el" href="classstring.xhtml">string</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a1f1b1540902d99a167b58436790525a8">PropertyVocabularyMap</a></td></tr>
<tr class="memdesc:a1f1b1540902d99a167b58436790525a8 inherit pub_types_class_property_holder"><td class="mdescLeft">&#160;</td><td class="mdescRight">A lookup table for property vocabulary <a class="el" href="class_i_r_i.xhtml">IRI</a> stubs, indexed by prefix.  <a href="#a1f1b1540902d99a167b58436790525a8">More...</a><br/></td></tr>
<tr class="separator:a1f1b1540902d99a167b58436790525a8 inherit pub_types_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1a33adfa30a826c5d70d42fbf6d03a32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a1a33adfa30a826c5d70d42fbf6d03a32">SpineItem</a> (const shared_ptr&lt; <a class="el" href="class_package.xhtml">Package</a> &gt; &amp;owner)</td></tr>
<tr class="separator:a1a33adfa30a826c5d70d42fbf6d03a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38db2feaa90e03dcf5e0b8e612e88619"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a38db2feaa90e03dcf5e0b8e612e88619">SpineItem</a> (<a class="el" href="class_spine_item.xhtml">SpineItem</a> &amp;&amp;)</td></tr>
<tr class="memdesc:a38db2feaa90e03dcf5e0b8e612e88619"><td class="mdescLeft">&#160;</td><td class="mdescRight">C++11 move constructor.  <a href="#a38db2feaa90e03dcf5e0b8e612e88619">More...</a><br/></td></tr>
<tr class="separator:a38db2feaa90e03dcf5e0b8e612e88619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9448bf1eeb30c712fabcc76bfb2543d7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a9448bf1eeb30c712fabcc76bfb2543d7">~SpineItem</a> ()</td></tr>
<tr class="separator:a9448bf1eeb30c712fabcc76bfb2543d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e96b08db870d5946a92a9cbaeb00fe8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <a class="el" href="filter_8h.xhtml#a5f1ee44b8ec43648eca7bb7049611fa6">PackagePtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a1e96b08db870d5946a92a9cbaeb00fe8">GetPackage</a> () const </td></tr>
<tr class="separator:a1e96b08db870d5946a92a9cbaeb00fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a627d3d7a424c3144477aad692115b820"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a627d3d7a424c3144477aad692115b820">ParseXML</a> (shared_ptr&lt; xml::Node &gt; node)</td></tr>
<tr class="separator:a627d3d7a424c3144477aad692115b820"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Metadata</div></td></tr>
<tr class="memitem:ab301df2e612e4173be2030087543a781"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#ab301df2e612e4173be2030087543a781">Count</a> () const </td></tr>
<tr class="memdesc:ab301df2e612e4173be2030087543a781"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an O(n) count of items in the spine (starting with this item).  <a href="#ab301df2e612e4173be2030087543a781">More...</a><br/></td></tr>
<tr class="separator:ab301df2e612e4173be2030087543a781"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a505a61363b433994c7f28db14f41722b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a505a61363b433994c7f28db14f41722b">Index</a> () const </td></tr>
<tr class="memdesc:a505a61363b433994c7f28db14f41722b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the current item in the overall spine. O(n).  <a href="#a505a61363b433994c7f28db14f41722b">More...</a><br/></td></tr>
<tr class="separator:a505a61363b433994c7f28db14f41722b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91aa48b60e2a699acc99fa90bfffa601"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a91aa48b60e2a699acc99fa90bfffa601">Identifier</a> () const </td></tr>
<tr class="memdesc:a91aa48b60e2a699acc99fa90bfffa601"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns this item's identifier (if any).  <a href="#a91aa48b60e2a699acc99fa90bfffa601">More...</a><br/></td></tr>
<tr class="separator:a91aa48b60e2a699acc99fa90bfffa601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a221f27e138cc99015ae2914b8fe5633c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a221f27e138cc99015ae2914b8fe5633c">Idref</a> () const </td></tr>
<tr class="memdesc:a221f27e138cc99015ae2914b8fe5633c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the <code>idref</code> identifying the manifest item for this spine item.  <a href="#a221f27e138cc99015ae2914b8fe5633c">More...</a><br/></td></tr>
<tr class="separator:a221f27e138cc99015ae2914b8fe5633c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1e007a85433dffd1cc38b5ede834a9"><td class="memItemLeft" align="right" valign="top">shared_ptr&lt; <a class="el" href="class_manifest_item.xhtml">ManifestItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a4d1e007a85433dffd1cc38b5ede834a9">ManifestItem</a> () const </td></tr>
<tr class="memdesc:a4d1e007a85433dffd1cc38b5ede834a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Obtains the manifest item corresponding to this spine item.  <a href="#a4d1e007a85433dffd1cc38b5ede834a9">More...</a><br/></td></tr>
<tr class="separator:a4d1e007a85433dffd1cc38b5ede834a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af86bb9391749dd79799da9b93762e4fe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#af86bb9391749dd79799da9b93762e4fe">Linear</a> () const </td></tr>
<tr class="memdesc:af86bb9391749dd79799da9b93762e4fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <code>true</code> if this item is linear, <code>false</code> otherwise.  <a href="#af86bb9391749dd79799da9b93762e4fe">More...</a><br/></td></tr>
<tr class="separator:af86bb9391749dd79799da9b93762e4fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdda433f612ac0a9952112e5147c6736"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="property_8h.xhtml#ae2f391a1d1caab688656cb24435ed26a">PageSpread</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#abdda433f612ac0a9952112e5147c6736">Spread</a> () const </td></tr>
<tr class="memdesc:abdda433f612ac0a9952112e5147c6736"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine the spread location for this item (or for the first page thereof).  <a href="#abdda433f612ac0a9952112e5147c6736">More...</a><br/></td></tr>
<tr class="separator:abdda433f612ac0a9952112e5147c6736"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c9b21153dcd45bb6fc8a078d8decde3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a5c9b21153dcd45bb6fc8a078d8decde3">Title</a> () const </td></tr>
<tr class="memdesc:a5c9b21153dcd45bb6fc8a078d8decde3"><td class="mdescLeft">&#160;</td><td class="mdescRight">The title for this spine item, as defined in the TOC.  <a href="#a5c9b21153dcd45bb6fc8a078d8decde3">More...</a><br/></td></tr>
<tr class="separator:a5c9b21153dcd45bb6fc8a078d8decde3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0713ef4eb5d45b4ef81660bd861d816b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a0713ef4eb5d45b4ef81660bd861d816b">SetTitle</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;str)</td></tr>
<tr class="separator:a0713ef4eb5d45b4ef81660bd861d816b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Navigation</div></td></tr>
<tr class="memitem:a6132a20720fac0bc89f4fb4bc98829a7"><td class="memItemLeft" align="right" valign="top">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a6132a20720fac0bc89f4fb4bc98829a7">Next</a> () const </td></tr>
<tr class="memdesc:a6132a20720fac0bc89f4fb4bc98829a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the spine item following this one, or <code>nullptr</code>.  <a href="#a6132a20720fac0bc89f4fb4bc98829a7">More...</a><br/></td></tr>
<tr class="separator:a6132a20720fac0bc89f4fb4bc98829a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a20e12488b6e69b3d6f3b6e60181990"><td class="memItemLeft" align="right" valign="top">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a5a20e12488b6e69b3d6f3b6e60181990">Previous</a> () const </td></tr>
<tr class="memdesc:a5a20e12488b6e69b3d6f3b6e60181990"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the spine item preceding this one, or <code>nullptr</code>.  <a href="#a5a20e12488b6e69b3d6f3b6e60181990">More...</a><br/></td></tr>
<tr class="separator:a5a20e12488b6e69b3d6f3b6e60181990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a954937d1639ee48243b2a697ad6f4078"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a954937d1639ee48243b2a697ad6f4078">NextStep</a> () const </td></tr>
<tr class="memdesc:a954937d1639ee48243b2a697ad6f4078"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the next linear item in the spine, or <code>nullptr</code>.  <a href="#a954937d1639ee48243b2a697ad6f4078">More...</a><br/></td></tr>
<tr class="separator:a954937d1639ee48243b2a697ad6f4078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d5963f19a7a5f2f22b17bfbb9fa7ea2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a9d5963f19a7a5f2f22b17bfbb9fa7ea2">PriorStep</a> () const </td></tr>
<tr class="memdesc:a9d5963f19a7a5f2f22b17bfbb9fa7ea2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a pointer to the previous linear item in the spine, or <code>nullptr</code>.  <a href="#a9d5963f19a7a5f2f22b17bfbb9fa7ea2">More...</a><br/></td></tr>
<tr class="separator:a9d5963f19a7a5f2f22b17bfbb9fa7ea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Indexed Accessors</div></td></tr>
<tr class="memitem:a0d2201cd68284ea518ec86ce11cfe522"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> shared_ptr<br class="typebreak"/>
&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a0d2201cd68284ea518ec86ce11cfe522">at</a> (ssize_t idx) const </td></tr>
<tr class="separator:a0d2201cd68284ea518ec86ce11cfe522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289ac14ec031efc205352e27fc582f82"><td class="memItemLeft" align="right" valign="top">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a289ac14ec031efc205352e27fc582f82">operator[]</a> (ssize_t idx) const </td></tr>
<tr class="separator:a289ac14ec031efc205352e27fc582f82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_pointer_type"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_pointer_type')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_pointer_type.xhtml">PointerType&lt; SpineItem &gt;</a></td></tr>
<tr class="memitem:a79096031ee74f2ff5228db7b2c1272dd inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a79096031ee74f2ff5228db7b2c1272dd">~PointerType</a> ()</td></tr>
<tr class="separator:a79096031ee74f2ff5228db7b2c1272dd inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a253402439a2f9b96382596074d2d7271 inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a> () <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a253402439a2f9b96382596074d2d7271 inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666b68a483c467918d8543410095a9b7 inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a666b68a483c467918d8543410095a9b7">Ptr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a666b68a483c467918d8543410095a9b7 inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01f277b03ab0f0ed95555e298af2363f inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml#a8b24c001b2485ee3ac4d46be4fe0d222">ConstPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a01f277b03ab0f0ed95555e298af2363f">ConstPtr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a01f277b03ab0f0ed95555e298af2363f inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af17b1cea2ddc60a267a9004cc1c87462 inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Yp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#af17b1cea2ddc60a267a9004cc1c87462">CastPtr</a> () <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:af17b1cea2ddc60a267a9004cc1c87462 inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45e01ceea460285ffa94ed345976ebfb inherit pub_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; typename <br class="typebreak"/>
std::add_const&lt; _Yp &gt;::type &gt;<br class="typebreak"/>
::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a45e01ceea460285ffa94ed345976ebfb">CastPtr</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a45e01ceea460285ffa94ed345976ebfb inherit pub_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_owned_by"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_owned_by')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_owned_by.xhtml">OwnedBy&lt; Package &gt;</a></td></tr>
<tr class="memitem:aa1ad6fa2756bb243bc88b4c26d186739 inherit pub_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_owned_by.xhtml#a501e88808d04e42a1f7328f04b8a9b6a">shared_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#aa1ad6fa2756bb243bc88b4c26d186739">Owner</a> () const</td></tr>
<tr class="separator:aa1ad6fa2756bb243bc88b4c26d186739 inherit pub_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad309a13a80cfe34ce15ad35f1332ff inherit pub_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#a8ad309a13a80cfe34ce15ad35f1332ff">Orphaned</a> () const</td></tr>
<tr class="separator:a8ad309a13a80cfe34ce15ad35f1332ff inherit pub_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6aaf1d5b626e98a91ad6f38d61db772 inherit pub_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#aa6aaf1d5b626e98a91ad6f38d61db772">SetOwner</a> (const <a class="el" href="class_owned_by.xhtml#a501e88808d04e42a1f7328f04b8a9b6a">shared_type</a> __owner) <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:aa6aaf1d5b626e98a91ad6f38d61db772 inherit pub_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1d406970dec0289e801f872f936524 inherit pub_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#acc1d406970dec0289e801f872f936524">SetOwner</a> (const std::shared_ptr&lt; _Yp &gt; __owner, typename std::enable_if&lt; std::is_convertible&lt; _Yp *, <a class="el" href="class_package.xhtml">Package</a> * &gt;::value &gt;::type **=0) <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:acc1d406970dec0289e801f872f936524 inherit pub_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_property_holder"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_property_holder')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_property_holder.xhtml">PropertyHolder</a></td></tr>
<tr class="memitem:a8ffd66cb0a2b78a0c7488c4f588a24dd inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a8ffd66cb0a2b78a0c7488c4f588a24dd">PropertyHolder</a> ()</td></tr>
<tr class="separator:a8ffd66cb0a2b78a0c7488c4f588a24dd inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c4123ad6d7bb242a0776c61c472f62 inherit pub_methods_class_property_holder"><td class="memTemplParams" colspan="2">template&lt;class _Parent &gt; </td></tr>
<tr class="memitem:a47c4123ad6d7bb242a0776c61c472f62 inherit pub_methods_class_property_holder"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a47c4123ad6d7bb242a0776c61c472f62">PropertyHolder</a> (const shared_ptr&lt; _Parent &gt; &amp;parent)</td></tr>
<tr class="separator:a47c4123ad6d7bb242a0776c61c472f62 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b97a9f8503de5cc13ba985b746d68b inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ad8b97a9f8503de5cc13ba985b746d68b">PropertyHolder</a> (const <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;o)</td></tr>
<tr class="separator:ad8b97a9f8503de5cc13ba985b746d68b inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6c2e7308829669fcc485c85abd7e9f4 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aa6c2e7308829669fcc485c85abd7e9f4">PropertyHolder</a> (<a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;&amp;o)</td></tr>
<tr class="separator:aa6c2e7308829669fcc485c85abd7e9f4 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab154104e91e0f2c438afefc77f0fd6fb inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ab154104e91e0f2c438afefc77f0fd6fb">~PropertyHolder</a> ()</td></tr>
<tr class="separator:ab154104e91e0f2c438afefc77f0fd6fb inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f2fbde109014a5b67fea30901a3a87a inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a0f2fbde109014a5b67fea30901a3a87a">operator=</a> (const <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;o)</td></tr>
<tr class="separator:a0f2fbde109014a5b67fea30901a3a87a inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d2083c8d3af3d7fd4dace0234450b2d inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a1d2083c8d3af3d7fd4dace0234450b2d">operator=</a> (<a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;&amp;o)</td></tr>
<tr class="separator:a1d2083c8d3af3d7fd4dace0234450b2d inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5246c327c0ed4081898d9b81556e11e inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_property_holder.xhtml#a60bf75abba08ca8848965e90b9dcee41">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ae5246c327c0ed4081898d9b81556e11e">NumberOfProperties</a> () const </td></tr>
<tr class="separator:ae5246c327c0ed4081898d9b81556e11e inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c6031a4012e0b2af9f240c2e4eeef30 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a3c6031a4012e0b2af9f240c2e4eeef30">AddProperty</a> (const shared_ptr&lt; <a class="el" href="class_property.xhtml">Property</a> &gt; &amp;prop)</td></tr>
<tr class="separator:a3c6031a4012e0b2af9f240c2e4eeef30 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc49399698aaa470dd05ac904a8a4a40 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#afc49399698aaa470dd05ac904a8a4a40">AddProperty</a> (const shared_ptr&lt; <a class="el" href="class_property.xhtml">Property</a> &gt; &amp;&amp;prop)</td></tr>
<tr class="separator:afc49399698aaa470dd05ac904a8a4a40 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc810ec02f4375ebee775a1bc596e8f9 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#abc810ec02f4375ebee775a1bc596e8f9">AddProperty</a> (<a class="el" href="class_property.xhtml">Property</a> *prop)</td></tr>
<tr class="separator:abc810ec02f4375ebee775a1bc596e8f9 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabbde2802d7f86ffdccdca0b4764fa3e inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aabbde2802d7f86ffdccdca0b4764fa3e">AppendProperties</a> (const <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;properties, shared_ptr&lt; <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &gt; sharedMe)</td></tr>
<tr class="separator:aabbde2802d7f86ffdccdca0b4764fa3e inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d56e3eabcab91bc398b97a191a616a3 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a9d56e3eabcab91bc398b97a191a616a3">AppendProperties</a> (<a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &amp;&amp;properties, shared_ptr&lt; <a class="el" href="class_property_holder.xhtml">PropertyHolder</a> &gt; sharedMe)</td></tr>
<tr class="separator:a9d56e3eabcab91bc398b97a191a616a3 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd13a6005f6bff261360c96af0d84c3 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a9cd13a6005f6bff261360c96af0d84c3">RemoveProperty</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri)</td></tr>
<tr class="separator:a9cd13a6005f6bff261360c96af0d84c3 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91db17cd288103f7772c3d99b1ff5caa inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a91db17cd288103f7772c3d99b1ff5caa">RemoveProperty</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix=&quot;&quot;)</td></tr>
<tr class="separator:a91db17cd288103f7772c3d99b1ff5caa inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6488788582a32465d110d377af1aa64 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_property_holder.xhtml#a5ca505a5321633f12b4749e788dc8f1c">value_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ad6488788582a32465d110d377af1aa64">PropertyAt</a> (<a class="el" href="class_property_holder.xhtml#a60bf75abba08ca8848965e90b9dcee41">size_type</a> idx) const </td></tr>
<tr class="separator:ad6488788582a32465d110d377af1aa64 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7f56dc2e10314b0f6ba34c2989eee9c inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aa7f56dc2e10314b0f6ba34c2989eee9c">ErasePropertyAt</a> (<a class="el" href="class_property_holder.xhtml#a60bf75abba08ca8848965e90b9dcee41">size_type</a> idx)</td></tr>
<tr class="separator:aa7f56dc2e10314b0f6ba34c2989eee9c inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a283b2fbf774af3295fa0942ea625bfff inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a283b2fbf774af3295fa0942ea625bfff">ContainsProperty</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type, bool lookupParents) const </td></tr>
<tr class="separator:a283b2fbf774af3295fa0942ea625bfff inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad678449d25da15f9839c5eca486b9e88 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ad678449d25da15f9839c5eca486b9e88">ContainsProperty</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri, bool lookupParents) const </td></tr>
<tr class="separator:ad678449d25da15f9839c5eca486b9e88 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f6d4e094ac3551e09df26709a60d979 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a2f6d4e094ac3551e09df26709a60d979">ContainsProperty</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix, bool lookupParents) const </td></tr>
<tr class="separator:a2f6d4e094ac3551e09df26709a60d979 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad30431e76dd9330275bcd9f11ee36745 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ad30431e76dd9330275bcd9f11ee36745">ContainsProperty</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type) const </td></tr>
<tr class="separator:ad30431e76dd9330275bcd9f11ee36745 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a329e0402334717fa2465bd76e1d7155d inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a329e0402334717fa2465bd76e1d7155d">ContainsProperty</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri) const </td></tr>
<tr class="separator:a329e0402334717fa2465bd76e1d7155d inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a248d8195d8aa1a606ed813eabb379651 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a248d8195d8aa1a606ed813eabb379651">ContainsProperty</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix=&quot;&quot;) const </td></tr>
<tr class="separator:a248d8195d8aa1a606ed813eabb379651 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8af6159ffe55050c4ed33bf9cf34a9a8 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a8af6159ffe55050c4ed33bf9cf34a9a8">PropertiesMatching</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type, bool lookupParents) const </td></tr>
<tr class="separator:a8af6159ffe55050c4ed33bf9cf34a9a8 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a327c9c840c576193ab06391748d998be inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a327c9c840c576193ab06391748d998be">PropertiesMatching</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri, bool lookupParents) const </td></tr>
<tr class="separator:a327c9c840c576193ab06391748d998be inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78b49527ae4ea92f724238445315f674 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a78b49527ae4ea92f724238445315f674">PropertiesMatching</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix, bool lookupParents) const </td></tr>
<tr class="separator:a78b49527ae4ea92f724238445315f674 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a344909be6ebe10519f4a04852c752 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ac6a344909be6ebe10519f4a04852c752">PropertiesMatching</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type) const </td></tr>
<tr class="separator:ac6a344909be6ebe10519f4a04852c752 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05dcb5d0073dfd07f0e73aeb221efcda inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a05dcb5d0073dfd07f0e73aeb221efcda">PropertiesMatching</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri) const </td></tr>
<tr class="separator:a05dcb5d0073dfd07f0e73aeb221efcda inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d4fb162a61a9f079453a0ee24f152a inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aa6d4fb162a61a9f079453a0ee24f152a">PropertiesMatching</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix=&quot;&quot;) const </td></tr>
<tr class="separator:aa6d4fb162a61a9f079453a0ee24f152a inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499a5e455dc261a32d01a161eb12b18a inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a499a5e455dc261a32d01a161eb12b18a">PropertyMatching</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type, bool lookupParents) const </td></tr>
<tr class="separator:a499a5e455dc261a32d01a161eb12b18a inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5ae72ada57ce05942555853f6a9aa52 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ab5ae72ada57ce05942555853f6a9aa52">PropertyMatching</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri, bool lookupParents) const </td></tr>
<tr class="separator:ab5ae72ada57ce05942555853f6a9aa52 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57d0f1c82327b749cdf5758176e22ccd inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a57d0f1c82327b749cdf5758176e22ccd">PropertyMatching</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix, bool lookupParents) const </td></tr>
<tr class="separator:a57d0f1c82327b749cdf5758176e22ccd inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc0dc4e6736bc40b570b596a21994a81 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#afc0dc4e6736bc40b570b596a21994a81">PropertyMatching</a> (<a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a> type) const </td></tr>
<tr class="separator:afc0dc4e6736bc40b570b596a21994a81 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc637d07d39db17804ecf0298b9e6894 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#acc637d07d39db17804ecf0298b9e6894">PropertyMatching</a> (const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri) const </td></tr>
<tr class="separator:acc637d07d39db17804ecf0298b9e6894 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7307d6982e0fb16991ea72c6d9baaf3 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aa7307d6982e0fb16991ea72c6d9baaf3">PropertyMatching</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix=&quot;&quot;) const </td></tr>
<tr class="separator:aa7307d6982e0fb16991ea72c6d9baaf3 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df7c4aff01b29b1c1637870e66585c6 inherit pub_methods_class_property_holder"><td class="memTemplParams" colspan="2">template&lt;class _Function &gt; </td></tr>
<tr class="memitem:a2df7c4aff01b29b1c1637870e66585c6 inherit pub_methods_class_property_holder"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> _Function&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a2df7c4aff01b29b1c1637870e66585c6">ForEachProperty</a> (_Function __f) const </td></tr>
<tr class="separator:a2df7c4aff01b29b1c1637870e66585c6 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade84a395de1f0557a3a870ea46340c79 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#ade84a395de1f0557a3a870ea46340c79">RegisterPrefixIRIStem</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;prefix, const <a class="el" href="classstring.xhtml">string</a> &amp;iriStem)</td></tr>
<tr class="separator:ade84a395de1f0557a3a870ea46340c79 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a208316ec90b55397e0dcdfc6c1c3fa95 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="class_i_r_i.xhtml">IRI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a208316ec90b55397e0dcdfc6c1c3fa95">MakePropertyIRI</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;reference, const <a class="el" href="classstring.xhtml">string</a> &amp;prefix=<a class="el" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>) const </td></tr>
<tr class="separator:a208316ec90b55397e0dcdfc6c1c3fa95 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b197fcac3b27605336472c6e5696314 inherit pub_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="class_i_r_i.xhtml">IRI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a0b197fcac3b27605336472c6e5696314">PropertyIRIFromString</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;value) const </td></tr>
<tr class="separator:a0b197fcac3b27605336472c6e5696314 inherit pub_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_x_m_l_identifiable"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_x_m_l_identifiable')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="class_x_m_l_identifiable.xhtml">XMLIdentifiable</a></td></tr>
<tr class="memitem:a9cfa83dea72f226f64dc9a79502b71dc inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#a9cfa83dea72f226f64dc9a79502b71dc">XMLIdentifiable</a> ()</td></tr>
<tr class="separator:a9cfa83dea72f226f64dc9a79502b71dc inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0718951fd8baf81810a6e80f5d625f9e inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#a0718951fd8baf81810a6e80f5d625f9e">XMLIdentifiable</a> (const <a class="el" href="class_x_m_l_identifiable.xhtml">XMLIdentifiable</a> &amp;o)</td></tr>
<tr class="separator:a0718951fd8baf81810a6e80f5d625f9e inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b2088bdccedcf0432f821e79895f77d inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#a2b2088bdccedcf0432f821e79895f77d">XMLIdentifiable</a> (<a class="el" href="class_x_m_l_identifiable.xhtml">XMLIdentifiable</a> &amp;&amp;o)</td></tr>
<tr class="separator:a2b2088bdccedcf0432f821e79895f77d inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b31dd154ca3db87286e1265548e5b8 inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#a76b31dd154ca3db87286e1265548e5b8">~XMLIdentifiable</a> ()</td></tr>
<tr class="separator:a76b31dd154ca3db87286e1265548e5b8 inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b51b2d6ea9bc686bea75b1cae0523ae inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#a0b51b2d6ea9bc686bea75b1cae0523ae">XMLIdentifier</a> () const </td></tr>
<tr class="separator:a0b51b2d6ea9bc686bea75b1cae0523ae inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af68c38400011ff0dfa1ee4ad7a187d72 inherit pub_methods_class_x_m_l_identifiable"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_x_m_l_identifiable.xhtml#af68c38400011ff0dfa1ee4ad7a187d72">SetXMLIdentifier</a> (const <a class="el" href="classstring.xhtml">string</a> &amp;str)</td></tr>
<tr class="separator:af68c38400011ff0dfa1ee4ad7a187d72 inherit pub_methods_class_x_m_l_identifiable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a2b19c8e2b48786686cbd6508710507cd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_i_r_i.xhtml">IRI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a2b19c8e2b48786686cbd6508710507cd">PageSpreadRightPropertyIRI</a></td></tr>
<tr class="separator:a2b19c8e2b48786686cbd6508710507cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8e86a6343e6339df02bc8f984d1645d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="class_i_r_i.xhtml">IRI</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#aa8e86a6343e6339df02bc8f984d1645d">PageSpreadLeftPropertyIRI</a></td></tr>
<tr class="separator:aa8e86a6343e6339df02bc8f984d1645d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_class_property_holder"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_class_property_holder')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="class_property_holder.xhtml">PropertyHolder</a></td></tr>
<tr class="memitem:a03a702cec1539d0078cc937d69ef0c77 inherit pub_static_attribs_class_property_holder"><td class="memItemLeft" align="right" valign="top">static const std::map&lt; const <br class="typebreak"/>
<a class="el" href="classstring.xhtml">string</a>, bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a03a702cec1539d0078cc937d69ef0c77">CoreMediaTypes</a></td></tr>
<tr class="memdesc:a03a702cec1539d0078cc937d69ef0c77 inherit pub_static_attribs_class_property_holder"><td class="mdescLeft">&#160;</td><td class="mdescRight">The list of Core Media Types from <a href="http://idpf.org/epub/30/spec/epub30-publications.html#sec-core-media-types">OPF 3.0 ??5.1</a>.  <a href="#a03a702cec1539d0078cc937d69ef0c77">More...</a><br/></td></tr>
<tr class="separator:a03a702cec1539d0078cc937d69ef0c77 inherit pub_static_attribs_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeccf437323f9f91ff427c8df6394738 inherit pub_static_attribs_class_property_holder"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="class_property_holder.xhtml#a1f1b1540902d99a167b58436790525a8">PropertyVocabularyMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#aeeccf437323f9f91ff427c8df6394738">ReservedVocabularies</a></td></tr>
<tr class="separator:aeeccf437323f9f91ff427c8df6394738 inherit pub_static_attribs_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d4761aea0ecbdccdc18c52e4818d845 inherit pub_static_attribs_class_property_holder"><td class="memItemLeft" align="right" valign="top">static const std::map&lt; <a class="el" href="property_8h.xhtml#aa7d0ed66dc3f92a0f6c21fddebe7e834">DCType</a>, <br class="typebreak"/>
const <a class="el" href="class_i_r_i.xhtml">IRI</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a7d4761aea0ecbdccdc18c52e4818d845">DCTypeIRIs</a></td></tr>
<tr class="separator:a7d4761aea0ecbdccdc18c52e4818d845 inherit pub_static_attribs_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:acbf3f86597cbaf83198e3d104bcf0665"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#acbf3f86597cbaf83198e3d104bcf0665">SetNextItem</a> (const shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt; &amp;next)</td></tr>
<tr class="separator:acbf3f86597cbaf83198e3d104bcf0665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_pointer_type"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_pointer_type')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_pointer_type.xhtml">PointerType&lt; SpineItem &gt;</a></td></tr>
<tr class="memitem:a1640de8234736c4f7d8e27a72db16b57 inherit pro_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a1640de8234736c4f7d8e27a72db16b57">PointerType</a> ()</td></tr>
<tr class="separator:a1640de8234736c4f7d8e27a72db16b57 inherit pro_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86916470cbec9e61d10aeebb89b04ef0 inherit pro_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a86916470cbec9e61d10aeebb89b04ef0">PointerType</a> (const <a class="el" href="class_pointer_type.xhtml">PointerType</a> &amp;__o)</td></tr>
<tr class="separator:a86916470cbec9e61d10aeebb89b04ef0 inherit pro_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_owned_by"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_owned_by')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_owned_by.xhtml">OwnedBy&lt; Package &gt;</a></td></tr>
<tr class="memitem:ab043274401240a3291e8553b66eb8454 inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#ab043274401240a3291e8553b66eb8454">OwnedBy</a> (const <a class="el" href="class_owned_by.xhtml#a501e88808d04e42a1f7328f04b8a9b6a">shared_type</a> &amp;__owner)</td></tr>
<tr class="separator:ab043274401240a3291e8553b66eb8454 inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168953392e06a3e33a6794c44ca6ec58 inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#a168953392e06a3e33a6794c44ca6ec58">OwnedBy</a> (const <a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;__o)</td></tr>
<tr class="separator:a168953392e06a3e33a6794c44ca6ec58 inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22dff3bc33fc7e69bc5da51095d78acc inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#a22dff3bc33fc7e69bc5da51095d78acc">OwnedBy</a> (<a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;&amp;__o)</td></tr>
<tr class="separator:a22dff3bc33fc7e69bc5da51095d78acc inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cac0b0a18b5681b7af94e8450fd709b inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#a1cac0b0a18b5681b7af94e8450fd709b">~OwnedBy</a> ()</td></tr>
<tr class="separator:a1cac0b0a18b5681b7af94e8450fd709b inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac03bf942f91b97e4c93fde4bc9d8b50d inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#ac03bf942f91b97e4c93fde4bc9d8b50d">operator=</a> (const <a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;__o)</td></tr>
<tr class="separator:ac03bf942f91b97e4c93fde4bc9d8b50d inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad837ef179ac5de8e2191f6304e4eabf3 inherit pro_methods_class_owned_by"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#ad837ef179ac5de8e2191f6304e4eabf3">operator=</a> (<a class="el" href="class_owned_by.xhtml">OwnedBy</a> &amp;&amp;__o)</td></tr>
<tr class="separator:ad837ef179ac5de8e2191f6304e4eabf3 inherit pro_methods_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_property_holder"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_property_holder')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="class_property_holder.xhtml">PropertyHolder</a></td></tr>
<tr class="memitem:a8a7d13e559fd79cff69dfe8f41bd3ba1 inherit pro_methods_class_property_holder"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_holder.xhtml#a8a7d13e559fd79cff69dfe8f41bd3ba1">BuildPropertyList</a> (<a class="el" href="class_property_holder.xhtml#af03a90efab04e7b1837c9a70941a1d14">PropertyList</a> &amp;output, const <a class="el" href="class_i_r_i.xhtml">IRI</a> &amp;iri) const </td></tr>
<tr class="separator:a8a7d13e559fd79cff69dfe8f41bd3ba1 inherit pro_methods_class_property_holder"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a20225795b545094933bad9b193b81d4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classstring.xhtml">string</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a20225795b545094933bad9b193b81d4c">_idref</a></td></tr>
<tr class="memdesc:a20225795b545094933bad9b193b81d4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <code>idref</code> value targetting a <a class="el" href="class_manifest_item.xhtml">ManifestItem</a>.  <a href="#a20225795b545094933bad9b193b81d4c">More...</a><br/></td></tr>
<tr class="separator:a20225795b545094933bad9b193b81d4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2954462a44c2ffa9cd33e5502f37e34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#ab2954462a44c2ffa9cd33e5502f37e34">_linear</a></td></tr>
<tr class="memdesc:ab2954462a44c2ffa9cd33e5502f37e34"><td class="mdescLeft">&#160;</td><td class="mdescRight"><code>true</code> if the item is linear (the default).  <a href="#ab2954462a44c2ffa9cd33e5502f37e34">More...</a><br/></td></tr>
<tr class="separator:ab2954462a44c2ffa9cd33e5502f37e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30e0d5b3fdc4b2799fec4dc27302ece9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classstring.xhtml">string</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a30e0d5b3fdc4b2799fec4dc27302ece9">_toc_title</a></td></tr>
<tr class="separator:a30e0d5b3fdc4b2799fec4dc27302ece9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7f3f9b822609625a1de69fa1688a9a0"><td class="memItemLeft" align="right" valign="top">weak_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#ac7f3f9b822609625a1de69fa1688a9a0">_prev</a></td></tr>
<tr class="memdesc:ac7f3f9b822609625a1de69fa1688a9a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <a class="el" href="class_spine_item.xhtml">SpineItem</a> preceding this one in the spine.  <a href="#ac7f3f9b822609625a1de69fa1688a9a0">More...</a><br/></td></tr>
<tr class="separator:ac7f3f9b822609625a1de69fa1688a9a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a8dcd1e41387de59f64020505737f28"><td class="memItemLeft" align="right" valign="top">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a5a8dcd1e41387de59f64020505737f28">_next</a></td></tr>
<tr class="memdesc:a5a8dcd1e41387de59f64020505737f28"><td class="mdescLeft">&#160;</td><td class="mdescRight">The <a class="el" href="class_spine_item.xhtml">SpineItem</a> following this one in the spine.  <a href="#a5a8dcd1e41387de59f64020505737f28">More...</a><br/></td></tr>
<tr class="separator:a5a8dcd1e41387de59f64020505737f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a305c04df1d8a4683e8bfe85167fcfdab"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_spine_item.xhtml#a305c04df1d8a4683e8bfe85167fcfdab">Package</a></td></tr>
<tr class="separator:a305c04df1d8a4683e8bfe85167fcfdab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_class_pointer_type"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_pointer_type')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="class_pointer_type.xhtml">PointerType&lt; SpineItem &gt;</a></td></tr>
<tr class="memitem:a532e3efd5145c8c89933b4fa5531f296 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a>, <br class="typebreak"/>
_Sub &gt;::value, typename <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;<br class="typebreak"/>
::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">New</a> (_Arg1 __arg1)</td></tr>
<tr class="separator:a532e3efd5145c8c89933b4fa5531f296 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a653ab55fab0626703d04b0084af545d8 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a>, <br class="typebreak"/>
_Sub &gt;::value, typename <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;<br class="typebreak"/>
::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a653ab55fab0626703d04b0084af545d8">New</a> (_Arg1 __arg1, _Arg2 __arg2)</td></tr>
<tr class="separator:a653ab55fab0626703d04b0084af545d8 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5eb544faa76b51f13bfe70ed5aa7359 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a>, <br class="typebreak"/>
_Sub &gt;::value, typename <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;<br class="typebreak"/>
::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ad5eb544faa76b51f13bfe70ed5aa7359">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3)</td></tr>
<tr class="separator:ad5eb544faa76b51f13bfe70ed5aa7359 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4760b31634185ee43e7f81d00273f462 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a>, <br class="typebreak"/>
_Sub &gt;::value, typename <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;<br class="typebreak"/>
::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a4760b31634185ee43e7f81d00273f462">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4)</td></tr>
<tr class="separator:a4760b31634185ee43e7f81d00273f462 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6c1c254a8d892c362ac68e3dbf0e903 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <br class="typebreak"/>
std::enable_if<br class="typebreak"/>
&lt; std::is_base_of&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a>, <br class="typebreak"/>
_Sub &gt;::value, typename <br class="typebreak"/>
<a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Sub &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> &gt;<br class="typebreak"/>
::type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#ac6c1c254a8d892c362ac68e3dbf0e903">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4, _Arg5 __arg5)</td></tr>
<tr class="separator:ac6c1c254a8d892c362ac68e3dbf0e903 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe3f0dde667ab7890d81bb5caadc89f inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#aafe3f0dde667ab7890d81bb5caadc89f">New</a> (_Arg1 __arg1)</td></tr>
<tr class="separator:aafe3f0dde667ab7890d81bb5caadc89f inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22e92b46086b84e21a567443be4cde72 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a22e92b46086b84e21a567443be4cde72">New</a> (_Arg1 __arg1, _Arg2 __arg2)</td></tr>
<tr class="separator:a22e92b46086b84e21a567443be4cde72 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b5ff632a92c046349e70a8cebeb6e3 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a30b5ff632a92c046349e70a8cebeb6e3">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3)</td></tr>
<tr class="separator:a30b5ff632a92c046349e70a8cebeb6e3 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04b3ee41ea9ca5b1f1276e3048d680f6 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a04b3ee41ea9ca5b1f1276e3048d680f6">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4)</td></tr>
<tr class="separator:a04b3ee41ea9ca5b1f1276e3048d680f6 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea07dd9617da1046d47a0827fc324d0 inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a9ea07dd9617da1046d47a0827fc324d0">New</a> (_Arg1 __arg1, _Arg2 __arg2, _Arg3 __arg3, _Arg4 __arg4, _Arg5 __arg5)</td></tr>
<tr class="separator:a9ea07dd9617da1046d47a0827fc324d0 inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57ef0d8963aae3e7be26521fba8eba3e inherit pub_static_methods_class_pointer_type"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_pointer_type.xhtml#a57ef0d8963aae3e7be26521fba8eba3e">CastFrom</a> (typename <a class="el" href="class_pointer_type.xhtml">PointerType</a>&lt; _Yp &gt;::<a class="el" href="class_pointer_type.xhtml#adf22a9d4ec4938b1447535741774729c">Pointer</a> __from) <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a57ef0d8963aae3e7be26521fba8eba3e inherit pub_static_methods_class_pointer_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_class_owned_by"><td colspan="2" onclick="javascript:toggleInherit('pro_types_class_owned_by')"><img src="closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="class_owned_by.xhtml">OwnedBy&lt; Package &gt;</a></td></tr>
<tr class="memitem:a501e88808d04e42a1f7328f04b8a9b6a inherit pro_types_class_owned_by"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr<br class="typebreak"/>
&lt; typename std::remove_pointer<br class="typebreak"/>
&lt; <a class="el" href="class_package.xhtml">Package</a> &gt;::type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#a501e88808d04e42a1f7328f04b8a9b6a">shared_type</a></td></tr>
<tr class="separator:a501e88808d04e42a1f7328f04b8a9b6a inherit pro_types_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed5e3dc8f9de1797b5bcea9997ea9d01 inherit pro_types_class_owned_by"><td class="memItemLeft" align="right" valign="top">typedef std::weak_ptr<br class="typebreak"/>
&lt; typename std::remove_pointer<br class="typebreak"/>
&lt; <a class="el" href="class_package.xhtml">Package</a> &gt;::type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_owned_by.xhtml#aed5e3dc8f9de1797b5bcea9997ea9d01">weak_type</a></td></tr>
<tr class="separator:aed5e3dc8f9de1797b5bcea9997ea9d01 inherit pro_types_class_owned_by"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="class_spine_item.xhtml">SpineItem</a> class provides access to the spine of a publication.</p>
<p>A publication's spine describes the top-level items contained in that publication in navigation order, such as the chapters of a book and its frontispiece, library/copyright page, dedication, index, and so on. This differs from a Table Of Contents in that the TOC might omit some of these items: it's not common for a TOC to reference the frontispiece of a book, or its cover.</p>
<p>Additionally, the spine is used to determine where to go next when stepping from one content document to the next or the previous document. The appropriate spine item is used to determine what the next and previous items are, rather than relying on the TOC, which might choose not to reference certain items. The intention is that the spine be a one-dimensional array of all the visitable content in a publication in the order that it would be traversed.</p>
<p>Most importantly, a content document <b>must</b> be referenced in the spine in order for it to be navigable. A TOC which references a document that's not in the spine is considered badly-formed.</p>
<p>Spine items can be consedered either linear or non-linear. Non-linear items are those which are part of the publication's flow but which are not considered as candidates for next/previous steps. An example of this might be the front cover or the table of contents: these would typically be displayed elsewhere by a sufficiently advanced reading system, so simply flipping through the publication they would not be encountered; placing them in the spine, however, allows a <a class="el" href="class_c_f_i.xhtml">CFI</a> or hyperlink to still reference them directly.</p>
<p>SpineItems in <a class="el" href="namespace_readium.xhtml">Readium</a> are implemented as a doubly-linked list. Each <a class="el" href="class_spine_item.xhtml">SpineItem</a> has a pointer to the items preceeding and succeeding it in the spine. These can be accessed directly using the <a class="el" href="class_spine_item.xhtml#a6132a20720fac0bc89f4fb4bc98829a7" title="Retrieves a pointer to the spine item following this one, or nullptr.">Next()</a> and <a class="el" href="class_spine_item.xhtml#a5a20e12488b6e69b3d6f3b6e60181990" title="Retrieves a pointer to the spine item preceding this one, or nullptr.">Previous()</a> methods. When stepping between spine items, however, the <a class="el" href="class_spine_item.xhtml#a954937d1639ee48243b2a697ad6f4078" title="Retrieves a pointer to the next linear item in the spine, or nullptr.">NextStep()</a> and <a class="el" href="class_spine_item.xhtml#a9d5963f19a7a5f2f22b17bfbb9fa7ea2" title="Retrieves a pointer to the previous linear item in the spine, or nullptr.">PriorStep()</a> methods can be used to implicitly skip any non-linear items.</p>
<dl class="section remark"><dt>Remarks</dt><dd>As a linked-list structure, each <a class="el" href="class_spine_item.xhtml">SpineItem</a> holds an <em>owning reference</em> to the following item, and a <em>non-owning reference</em> to the preceding item. When a <a class="el" href="class_spine_item.xhtml">SpineItem</a> is destroyed, it will delete the next <a class="el" href="class_spine_item.xhtml">SpineItem</a> in the chain, and will set its prior item's pointer-to-next to be <code>nullptr</code>. </dd></dl>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00074">74</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a446ca066a966d46c8a299d580d60e4a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="class_i_r_i.xhtml">IRI</a>&gt; <a class="el" href="class_spine_item.xhtml#a446ca066a966d46c8a299d580d60e4a0">SpineItem::PropertyList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00080">80</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1a33adfa30a826c5d70d42fbf6d03a32"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SpineItem::SpineItem </td>
          <td>(</td>
          <td class="paramtype">const shared_ptr&lt; <a class="el" href="class_package.xhtml">Package</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>owner</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructs a new <a class="el" href="class_spine_item.xhtml">SpineItem</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The <code>&lt;itemref&gt;</code> element node for this spine item. </td></tr>
    <tr><td class="paramname">owner</td><td>The package contaning this spine item. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a38db2feaa90e03dcf5e0b8e612e88619"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SpineItem::SpineItem </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_spine_item.xhtml">SpineItem</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C++11 move constructor. </p>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9448bf1eeb30c712fabcc76bfb2543d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SpineItem::~SpineItem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a0d2201cd68284ea518ec86ce11cfe522"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt; SpineItem::at </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section note"><dt>Note</dt><dd>The index is always considered relative to <code>this</code>, and has the following invariants:</dd></dl>
<ul>
<li><code>item.at(0)</code> = <code>&amp;item</code></li>
<li><code>item.at(1)</code> = <code>item.Next()</code></li>
<li><code>item.at(-1)</code> = <code>item.Previous()</code> Retrieves the spine item at a relative index. <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idx</td><td>The relative index of the item to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="class_spine_item.xhtml">SpineItem</a>. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::out_of_range</td><td>if <code>idx</code> is out of bounds. </td></tr>
  </table>
  </dd>
</dl>
</li>
</ul>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00106">106</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab301df2e612e4173be2030087543a781"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t SpineItem::Count </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an O(n) count of items in the spine (starting with this item). </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00119">119</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1e96b08db870d5946a92a9cbaeb00fe8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a> <a class="el" href="filter_8h.xhtml#a5f1ee44b8ec43648eca7bb7049611fa6">PackagePtr</a> SpineItem::GetPackage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00109">109</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a91aa48b60e2a699acc99fa90bfffa601"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classstring.xhtml">string</a>&amp; SpineItem::Identifier </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns this item's identifier (if any). </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00126">126</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a221f27e138cc99015ae2914b8fe5633c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classstring.xhtml">string</a>&amp; SpineItem::Idref </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the <code>idref</code> identifying the manifest item for this spine item. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00129">129</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a505a61363b433994c7f28db14f41722b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t SpineItem::Index </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the index of the current item in the overall spine. O(n). </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00122">122</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="af86bb9391749dd79799da9b93762e4fe"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SpineItem::Linear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns <code>true</code> if this item is linear, <code>false</code> otherwise. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00135">135</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a4d1e007a85433dffd1cc38b5ede834a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt; <a class="el" href="class_manifest_item.xhtml">ManifestItem</a> &gt; SpineItem::ManifestItem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Obtains the manifest item corresponding to this spine item. </p>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6132a20720fac0bc89f4fb4bc98829a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt;<a class="el" href="class_spine_item.xhtml">SpineItem</a>&gt; SpineItem::Next </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a pointer to the spine item following this one, or <code>nullptr</code>. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00155">155</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a954937d1639ee48243b2a697ad6f4078"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt; SpineItem::NextStep </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves a pointer to the next linear item in the spine, or <code>nullptr</code>. </p>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00092">92</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a289ac14ec031efc205352e27fc582f82"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt;<a class="el" href="class_spine_item.xhtml">SpineItem</a>&gt; SpineItem::operator[] </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieves the spine item at a relative index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idx</td><td>The relative index of the item to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="class_spine_item.xhtml">SpineItem</a>. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::out_of_range</td><td>if <code>idx</code> is out of bounds. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00197">197</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a627d3d7a424c3144477aad692115b820"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SpineItem::ParseXML </td>
          <td>(</td>
          <td class="paramtype">shared_ptr&lt; xml::Node &gt;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5a20e12488b6e69b3d6f3b6e60181990"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt;<a class="el" href="class_spine_item.xhtml">SpineItem</a>&gt; SpineItem::Previous </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a pointer to the spine item preceding this one, or <code>nullptr</code>. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00158">158</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a9d5963f19a7a5f2f22b17bfbb9fa7ea2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt; SpineItem::PriorStep </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves a pointer to the previous linear item in the spine, or <code>nullptr</code>. </p>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acbf3f86597cbaf83198e3d104bcf0665"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SpineItem::SetNextItem </td>
          <td>(</td>
          <td class="paramtype">const shared_ptr&lt; <a class="el" href="class_spine_item.xhtml">SpineItem</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>next</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0713ef4eb5d45b4ef81660bd861d816b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SpineItem::SetTitle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classstring.xhtml">string</a> &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00146">146</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="abdda433f612ac0a9952112e5147c6736"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="property_8h.xhtml#ae2f391a1d1caab688656cb24435ed26a">PageSpread</a> SpineItem::Spread </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determine the spread location for this item (or for the first page thereof). </p>

<p>Definition at line <a class="el" href="spine_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c9b21153dcd45bb6fc8a078d8decde3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> const <a class="el" href="classstring.xhtml">string</a>&amp; SpineItem::Title </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The title for this spine item, as defined in the TOC. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00145">145</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a305c04df1d8a4683e8bfe85167fcfdab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="class_package.xhtml">Package</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00210">210</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a20225795b545094933bad9b193b81d4c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classstring.xhtml">string</a> SpineItem::_idref</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The <code>idref</code> value targetting a <a class="el" href="class_manifest_item.xhtml">ManifestItem</a>. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00202">202</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab2954462a44c2ffa9cd33e5502f37e34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SpineItem::_linear</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><code>true</code> if the item is linear (the default). </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00203">203</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a5a8dcd1e41387de59f64020505737f28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">shared_ptr&lt;<a class="el" href="class_spine_item.xhtml">SpineItem</a>&gt; SpineItem::_next</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The <a class="el" href="class_spine_item.xhtml">SpineItem</a> following this one in the spine. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00208">208</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="ac7f3f9b822609625a1de69fa1688a9a0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">weak_ptr&lt;<a class="el" href="class_spine_item.xhtml">SpineItem</a>&gt; SpineItem::_prev</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The <a class="el" href="class_spine_item.xhtml">SpineItem</a> preceding this one in the spine. </p>

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00207">207</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a30e0d5b3fdc4b2799fec4dc27302ece9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classstring.xhtml">string</a> SpineItem::_toc_title</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00205">205</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa8e86a6343e6339df02bc8f984d1645d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_i_r_i.xhtml">IRI</a> SpineItem::PageSpreadLeftPropertyIRI</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00083">83</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2b19c8e2b48786686cbd6508710507cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EPUB3_BEGIN_NAMESPACE const <a class="el" href="class_i_r_i.xhtml">IRI</a> SpineItem::PageSpreadRightPropertyIRI</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="spine_8h_source.xhtml#l00082">82</a> of file <a class="el" href="spine_8h_source.xhtml">spine.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/<a class="el" href="spine_8h_source.xhtml">spine.h</a></li>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/<a class="el" href="spine_8cpp_source.xhtml">spine.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="class_spine_item.xhtml">SpineItem</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:43 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
