<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/xml/tree/node.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('node_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">node.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="node_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  node.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-11-19.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef __ePub3_xml_node__</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __ePub3_xml_node__</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/base.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/ns.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/xmlstring.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/node_traits.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<a class="code" href="xml_2utilities_2base_8h.xhtml#aad3f08b1d0c77112eed0e2524e14be9d">EPUB3_XML_BEGIN_NAMESPACE</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span>TextNode;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span><a class="code" href="class_element.xhtml">Element</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">class </span><a class="code" href="group__tree.xhtml#gga94dfb1c8fbb2b0291508beb395b7affaaf2bbdf9f72c085adc4d0404e370f0f4c">Attribute</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">class </span>Namespace;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_node.xhtml">Node</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">typedef</span> std::vector&lt;std::shared_ptr&lt;Node&gt;&gt; <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">NodeSet</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="code" href="node_8h.xhtml#afe7b8e253a0fd7698be48d0c034ac766">   44</a></span>&#160;<span class="keyword">typedef</span> std::map&lt;string, string&gt; <a class="code" href="utfstring_8h.xhtml#afe7b8e253a0fd7698be48d0c034ac766">NamespaceMap</a>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;std::string <a class="code" href="group__xml-utils.xhtml#gab535f74b89ff9a60f8bf1149bc835d80">TypeString</a>(<a class="code" href="group__tree.xhtml#ga94dfb1c8fbb2b0291508beb395b7affa">NodeType</a> type);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="code" href="class_node.xhtml">   54</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_node.xhtml">Node</a> : <span class="keyword">public</span> WrapperBase&lt;Node&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span>    <span class="keyword">typedef</span> _xmlNode*                           NativePtr;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#elif EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor"></span>    <span class="keyword">typedef</span> Windows::Data::Xml::Dom::IXmlNode^  NativePtr;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="class_node.xhtml#ab98e08405472eb1a94cd05a990251836">   63</a></span>&#160;    <span class="keyword">typedef</span> std::list&lt;std::shared_ptr&lt;Node&gt;&gt;    <a class="code" href="class_node.xhtml#ab98e08405472eb1a94cd05a990251836">NodeList</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="code" href="class_node_1_1_invalid_node_type.xhtml">   65</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_node_1_1_invalid_node_type.xhtml">InvalidNodeType</a> : <span class="keyword">public</span> exception</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="class_node_1_1_invalid_node_type.xhtml#a98565e777b35670510bdf52d20596c15">   68</a></span>&#160;        <a class="code" href="class_node_1_1_invalid_node_type.xhtml#a98565e777b35670510bdf52d20596c15">InvalidNodeType</a>(<span class="keyword">const</span> std::string &amp; str) : exception(str, NULL) {}</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="code" href="class_node_1_1_invalid_node_type.xhtml#a3320cd41707019dde44e4728ebe3a270">   69</a></span>&#160;        <a class="code" href="class_node_1_1_invalid_node_type.xhtml#a3320cd41707019dde44e4728ebe3a270">InvalidNodeType</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * s) : exception(s, NULL) {}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    };</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="class_node.xhtml#afbdc89eb4079e1d6ce50380a72556b7c">Node</a>(NativePtr node);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_node.xhtml#afbdc89eb4079e1d6ce50380a72556b7c">Node</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name, <a class="code" href="group__tree.xhtml#ga94dfb1c8fbb2b0291508beb395b7affa">NodeType</a> type,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;         <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; content = <span class="keywordtype">string</span>(),</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;         <span class="keyword">const</span> <a class="code" href="class_node.xhtml#a55aa0fdcd97cab4049a8b87c25db8590">Namespace</a> &amp; ns = xml::Namespace());</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_node.xhtml#afbdc89eb4079e1d6ce50380a72556b7c">Node</a>(<a class="code" href="class_node.xhtml">Node</a> &amp;&amp; o);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="class_node.xhtml#aa0840c3cb5c7159be6d992adecd2097c">~Node</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Properties</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a8d86112090494d5c3d050f473396e3fe">Name</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetName(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a4c5e3967062c6f68e6bb9d466c8c07e6">Content</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetContent(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; content);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#af6bbb51ec9ce9da94b7c89748aefb834">AttributeValue</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; name, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; namespaceURI) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::shared_ptr&lt;Namespace&gt; <a class="code" href="class_node.xhtml#a55aa0fdcd97cab4049a8b87c25db8590">Namespace</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetNamespace(<span class="keyword">const</span> <span class="keyword">class</span> <a class="code" href="class_node.xhtml#a55aa0fdcd97cab4049a8b87c25db8590">Namespace</a> * ns);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#af6572c7c0964be35755402f589e18118">Language</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetLanguage(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; language);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_node.xhtml#a137fb379ade02653471ba3d4a2da191a">PreserveSpace</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetPreserveSpace(<span class="keywordtype">bool</span> preserve);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a7c02bd5a162beb5f7f63da683881c1ec">BaseURL</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> SetBaseURL(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; baseURL);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="group__validation.xhtml#ga4d56589b82d0b58e6ee34f5bba2a8a35">NamespaceList</a> <a class="code" href="class_node.xhtml#ae046e5007a931ecc24a61b80000e9287">NamespacesInScope</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="group__tree.xhtml#ga94dfb1c8fbb2b0291508beb395b7affa">NodeType</a> <a class="code" href="class_node.xhtml#a1a6a9787af2a0443be2675e265e7c163">Type</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="code" href="class_node.xhtml#af5bb26d14849d2422a321a59b7490a7b">  119</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_node.xhtml#af5bb26d14849d2422a321a59b7490a7b">IsTextNode</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a1a6a9787af2a0443be2675e265e7c163">Type</a>() == <a class="code" href="group__tree.xhtml#gga94dfb1c8fbb2b0291508beb395b7affaa9dffbf69ffba8bc38bc4e01abf4b1675">NodeType::Text</a>; }</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="class_node.xhtml#a3e783b2fd7b38def126afa30cf25ae45">  120</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_node.xhtml#a3e783b2fd7b38def126afa30cf25ae45">IsElementNode</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a1a6a9787af2a0443be2675e265e7c163">Type</a>() == <a class="code" href="group__tree.xhtml#gga94dfb1c8fbb2b0291508beb395b7affaa231afe47f3f37d3808096b36c28b4ded">NodeType::Element</a>; }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">int</span> Index() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">int</span> Line() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">  127</a></span>&#160;    NativePtr <a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">xml</a>() { <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a>; }</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="class_node.xhtml#a88baa43be28bc2c9c40284d8be9c1567">  128</a></span>&#160;    <span class="keyword">const</span> NativePtr <a class="code" href="class_node.xhtml#a88baa43be28bc2c9c40284d8be9c1567">xml</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a>; }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// Values</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a4efa31fd83fa75b3b731c3878565f196">XMLString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a2a698b8b667f5a21b5eb551829e10e3d">StringValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_node.xhtml#ac78287c291afd70f90d246a5edbbb142">IntValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="class_node.xhtml#a814c5fba6e721d1d01420f75bac582cb">DoubleValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_node.xhtml#a619196c7ae332e44e5248c17f238b4ce">BoolValue</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    </div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="class_node.xhtml#a405979c4eedbbdffadf313d9bc6f3ee8">  140</a></span>&#160;    <span class="keyword">operator</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> * () <span class="keyword">const</span> { <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a4efa31fd83fa75b3b731c3878565f196">XMLString</a>().<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(); }</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="class_node.xhtml#a53fad5e0829117ed855f7b7a6284098f">  141</a></span>&#160;    <span class="keyword">operator</span> <a class="code" href="classstring.xhtml">string</a> ()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a2a698b8b667f5a21b5eb551829e10e3d">StringValue</a>(); }</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="class_node.xhtml#a53f68a202a046f999b26ec9e4068517c">  142</a></span>&#160;    <span class="keyword">operator</span> int ()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#ac78287c291afd70f90d246a5edbbb142">IntValue</a>(); }</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="class_node.xhtml#a8e085dfaec66cb24bf9745bc50c045e4">  143</a></span>&#160;    <span class="keyword">operator</span> double ()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a814c5fba6e721d1d01420f75bac582cb">DoubleValue</a>(); }</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="code" href="class_node.xhtml#af3bf2836616235efca6bf4b619b719e0">  144</a></span>&#160;    <span class="keyword">operator</span> bool ()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_node.xhtml#a619196c7ae332e44e5248c17f238b4ce">BoolValue</a>(); }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// Hierarchy</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    std::shared_ptr&lt;Document&gt; <a class="code" href="class_node.xhtml#a4960e0081853a3ec9defa3a0a418b163">Document</a>();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    std::shared_ptr&lt;const class Document&gt; <a class="code" href="class_node.xhtml#a4960e0081853a3ec9defa3a0a418b163">Document</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    std::shared_ptr&lt;Element&gt; <a class="code" href="class_node.xhtml#a8fc206cda6c6a6aa72d229dc7e414160">Parent</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    std::shared_ptr&lt;Node&gt; <a class="code" href="class_node.xhtml#a26f8411048a78b549f895f32cf75981e">NextSibling</a>();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::shared_ptr&lt;Node&gt; <a class="code" href="class_node.xhtml#ab393a29697ae68efc8fcfc181f2b55c7">NextElementSibling</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    std::shared_ptr&lt;Node&gt; <a class="code" href="class_node.xhtml#a17bed9da7fa8916c6375c71c7b09b852">PreviousSibling</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    std::shared_ptr&lt;Node&gt; <a class="code" href="class_node.xhtml#a8ca93350f815b08643fa64141ccd7463">FirstChild</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; filterByName = <span class="keywordtype">string</span>());</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    std::shared_ptr&lt;Node&gt; <a class="code" href="class_node.xhtml#a80b9922d872182f92331b9e7a17e2db6">FirstElementChild</a>();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="class_node.xhtml#ab98e08405472eb1a94cd05a990251836">NodeList</a> <a class="code" href="class_node.xhtml#a1f10805510223ca4a8878107346710b9">Children</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; filterByName = <span class="keywordtype">string</span>());</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    std::shared_ptr&lt;const Element&gt; <a class="code" href="class_node.xhtml#a8fc206cda6c6a6aa72d229dc7e414160">Parent</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    std::shared_ptr&lt;const Node&gt; <a class="code" href="class_node.xhtml#a26f8411048a78b549f895f32cf75981e">NextSibling</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    std::shared_ptr&lt;const Node&gt; <a class="code" href="class_node.xhtml#ab393a29697ae68efc8fcfc181f2b55c7">NextElementSibling</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    std::shared_ptr&lt;const Node&gt; <a class="code" href="class_node.xhtml#a17bed9da7fa8916c6375c71c7b09b852">PreviousSibling</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    std::shared_ptr&lt;const Node&gt; <a class="code" href="class_node.xhtml#a8ca93350f815b08643fa64141ccd7463">FirstChild</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; filterByName = <span class="keywordtype">string</span>()) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::shared_ptr&lt;const Node&gt; <a class="code" href="class_node.xhtml#a80b9922d872182f92331b9e7a17e2db6">FirstElementChild</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">const</span> <a class="code" href="class_node.xhtml#ab98e08405472eb1a94cd05a990251836">NodeList</a> <a class="code" href="class_node.xhtml#a1f10805510223ca4a8878107346710b9">Children</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; filterByName = <span class="keywordtype">string</span>()) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor"></span>    std::shared_ptr&lt;Element&gt; AddChild(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; prefix = <span class="keywordtype">string</span>());</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordtype">void</span> AddChild(std::shared_ptr&lt;Node&gt; child);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    std::shared_ptr&lt;Element&gt; InsertAfter(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; prefix = <span class="keywordtype">string</span>());</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">void</span> InsertAfter(std::shared_ptr&lt;Node&gt; child);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    std::shared_ptr&lt;Element&gt; InsertBefore(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; prefix = <span class="keywordtype">string</span>());</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordtype">void</span> InsertBefore(std::shared_ptr&lt;Node&gt; child);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    std::shared_ptr&lt;Node&gt; CopyIn(std::shared_ptr&lt;const Node&gt; nodeToCopy, <span class="keywordtype">bool</span> recursive = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">void</span> Detach();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// XPaths</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">string</span> <a class="code" href="class_node.xhtml#a8ec8af3929130b6ecdf5d1214dda2c54">Path</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// these are simple wrappers for the XPathEvaluator class&#39;s functionality</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">NodeSet</a> <a class="code" href="class_node.xhtml#a5b2ec4906d580c19d0394b00914602d4">FindByXPath</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; xpath) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">NodeSet</a> <a class="code" href="class_node.xhtml#a5b2ec4906d580c19d0394b00914602d4">FindByXPath</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; xpath, <span class="keyword">const</span> <a class="code" href="utfstring_8h.xhtml#afe7b8e253a0fd7698be48d0c034ac766">NamespaceMap</a> &amp; namespaces) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="comment">// Wrapper Factory</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> Wrap(_xmlNode* <a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">xml</a>);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> Unwrap(_xmlNode * <a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">xml</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">#elif EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> std::shared_ptr&lt;Node&gt; NewNode(NativePtr ptr);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">virtual</span></div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="code" href="class_node.xhtml#a9d7d9170b04a2fd81a6520725c86638e">  201</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_node.xhtml#a9d7d9170b04a2fd81a6520725c86638e">release</a>() <a class="code" href="__compiler_8h.xhtml#a5dea698950629d9e51d19c1a25be1c30">OVERRIDE</a></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        { <a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a> = <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">  205</a></span>&#160;    NativePtr <a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor"></span>    NativePtr createChild(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; prefix) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> rebind(NativePtr newNode);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="code" href="class_node.xhtml#a2e0220993237d77a8cd132f2c0076438">  213</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_document.xhtml">Document</a>;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="code" href="class_node.xhtml#a016b821f88c7c0a2de1451c175cefbf9">  214</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_element.xhtml">Element</a>;</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="code" href="class_node.xhtml#abd4bab8f7ee748d7ea63f7f9b6248611">  215</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_node.xhtml#abd4bab8f7ee748d7ea63f7f9b6248611">Attribute</a>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;};</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<a class="code" href="xml_2utilities_2base_8h.xhtml#a1855726ae847a4b9be62158be5842e55">EPUB3_XML_END_NAMESPACE</a></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(__ePub3_xml_node__) */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d2dc3c0cadcebb3fe799a79b2b95c908.xhtml">xml</a></li><li class="navelem"><a class="el" href="dir_f24255c03ecd8d9b97df6bed7f990a1d.xhtml">tree</a></li><li class="navelem"><a class="el" href="node_8h.xhtml">node.h</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:41 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
