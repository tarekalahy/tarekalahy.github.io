<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a22a8a57a97312d663aaef93a60358ae9">__at_thread_exit</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a67492c06e0aa22375cdd2f1707144575">__callback_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a76c8da20e724c41466eaf2501d93327d">__continuation_ptr_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#aea9d9d891fa0d800d84181417c122bcf">__done_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#adf80bb585046a3ae67da1a3f8793a7cb">__exc_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ab70d19669fa421dabf14209feca0707b">__external_waiters_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml#ad290fb5d724760695e0b1d5c6ac75cf9">__f_</a></td><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ad12f8e31c1759728b5f1425185c90655">__is_constructed_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a4800bc8da5160750cc46f6c28c95ce90">__is_deferred_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a3fe0fff050c7ad6aa0bc79650f642f80">__mutex_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">mutable</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a436a27ce478a55d6c25c69d3b53290bf">__policy_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#af13717f34bea6c61812fe04b3170c243">__result_</a></td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#a2bead6feaafe104f1084b313455c20a0">__shared_state</a>()</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a9676e96f7e725b4968a160a539d9b37c">__shared_state_base</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a7419db53f4c634fe2e061fb26f3f02a5">__shared_state_base</a>(const __shared_state_base &amp;) _DELETED_</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#a07cfc2c9125883aea8cbd362abcb7cca">__started_</a></td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#af30147c771fde96dd16ff7441f732d9e">__task_base_shared_state</a>()</td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml#a45db7fc45f3d638bad83fc5bd3046883">__task_shared_state</a>(_Fp const &amp;__f)</td><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml#a12325228316d09bb60391a8a58a6a462">__task_shared_state</a>(_Fp &amp;&amp;__f)</td><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a50b1f3b66502cf661cf9945fc24f56f9">__waiters_</a></td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a60e3bdd1e5aa7966e034f08a85e08d1e">_ContinuationPtrType</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a285c95e97560e3ff2dc99724c5001110">_WaiterListType</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#a27dc3d0827355bf63abd2835be73a702">apply</a>(_Args &amp;&amp;...__args)</td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml#afb2a729d5e474091d94787d33f70edab">do_apply</a>(_Args &amp;&amp;...__args)</td><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a380a8401f04301437bd65bf93744f025">do_callback</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a925bc41a66e4a8cd39071f5939e954cc">do_continuation</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml#a150374242d39218f605207bb094e9b4d">do_run</a>(_Args &amp;&amp;...__args)</td><td class="entry"><a class="el" href="struct____task__shared__state_3_01___fp_00_01___rp_07___args_8_8_8_08_4.xhtml">__task_shared_state&lt; _Fp, _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a348570a21a75cd44005cd562f024409a">execute</a>(std::unique_lock&lt; std::mutex &gt; &amp;)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#a9d8bd39fdf170c7b3a3b894d2e7568fa">get</a>()</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#acd917c419e54dca0073564ab72a736ed">get_exception_ptr</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a833ae53e0d7bcb211bf5434681b8eb2e">get_exception_ptr</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#aaf06a83fd0c725dd49829d2206529d4a">get_sh</a>()</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a5fbd46803fcea9eda5d7fe24537e3cc9">get_state</a>() const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a3b5babffa8b7b33fcb43a5f8a24b29b6">has_exception</a>() const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a7bdd3b2652efd525ae8d3472d5c2c02f">has_exception</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk) const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a1047ab2109bac8e51df1911f91384df9">has_value</a>() const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a47ffa6136c773d5ac574daaff0b03715">has_value</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk) const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a463fa296bfe22dacd1cc14e76f38bf5f">is_deferred</a>(std::unique_lock&lt; std::mutex &gt; &amp;) const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a17edd0519666e9ab424e407e1502acb7">launch_continuation</a>(std::unique_lock&lt; std::mutex &gt; &amp;)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ab935d5afd9508b2cbff38a5133d095a4">launch_policy</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk) const </td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#aff2c6da9bebee46e459152f5329a679d">make_ready</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ae5bd1cb1f6a4e9b225edf79756aebf96">mark_exceptional_finish</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ad007232907eae8bcd6ac38c0a1bcb765">mark_exceptional_finish_internal</a>(const std::exception_ptr &amp;__e, std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a58656af17d8268edab6cd163bfc91dca">mark_finished_internal</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#aa307f3d2225e87b6e028fd98014cc3d7">mark_finished_with_result</a>(source_reference_type __r)</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#abac4dec745412f647f8e0e424862b476">mark_finished_with_result</a>(rvalue_source_type __r)</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#aa71ae007b630c443fe90b7dce24df6e4">mark_finished_with_result_internal</a>(source_reference_type __r, std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#a4b92528f4be5313c95cb33ef24740f03">mark_finished_with_result_internal</a>(rvalue_source_type __r, std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#a5205d87b8ce98f281169d1ea7b5bc792">move_dest_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a6d0cec281b4a9fb5e8caf85276f15783">__shared_state_base::operator=</a>(const __shared_state_base &amp;) _DELETED_</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#aa154b24fdf5d03e5a4eb81d0718937f9">owner_destroyed</a>()</td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ac934a6f081cfe3a5e718fa734cd07b59">register_external_waiter</a>(condition_variable_any &amp;__cv)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a4799afa6657f71d3285f1c8515d899b8">remove_external_waiter</a>(_WaiterListType::iterator __it)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#a4b2a06cd7c2f45af5c805eac7d20e041">reset</a>()</td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml#abbbbd33d48ae7026d342e45cd09eb5ac">run</a>(_Args &amp;&amp;...__args)</td><td class="entry"><a class="el" href="struct____task__base__shared__state_3_01___rp_07___args_8_8_8_08_4.xhtml">__task_base_shared_state&lt; _Rp(_Args...)&gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#a4d4d8dcc1cc287d2ea17592d0a3f5349">rvalue_source_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a132396784d51a4abe14662739ec7e1eb">set_async</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a789ec7cebc444c4247eacbc8b56eef84">set_continuation_ptr</a>(_ContinuationPtrType __c, std::unique_lock&lt; std::mutex &gt; &amp;__lk)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a413671d4ef52286b97534aecf695813d">set_deferred</a>()</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#acd9b68670bbd785a3fe31c9fe88d39b7">set_exception_at_thread_exit</a>(std::exception_ptr __e)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#add08d60c7ce2a114c3de3ec1a4b5e5be">set_value_at_thread_exit</a>(source_reference_type __r)</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#ada6441ef503fcf40d201050be76994a1">set_wait_callback</a>(_Fp &amp;&amp;__f, _Up *__u)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#ac63c56f0dbdbf3d8e5afa4364bfb3a08">shared_future_get_result_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#aedf53cab3ccba0759a45748fb2f18bf1">source_reference_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state.xhtml#a3246cb477407561aa2c5b35c94ba4650">storage_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#ae587ffb93c4db649ba6652eb042a6c06">traits_type</a> typedef</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a9e3a17e5be785fa1a02d05b7abd8fefa">wait</a>(bool __rethrow=true)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#a98e74369d93e313fea01a146b017f5cd">wait_internal</a>(std::unique_lock&lt; std::mutex &gt; &amp;__lk, bool __rethrow=true)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="struct____shared__state__base.xhtml#af3a898af98644f1c18993ddd751dccce">wait_until</a>(const std::chrono::time_point&lt; _Clock, _Duration &gt; &amp;abs_time)</td><td class="entry"><a class="el" href="struct____shared__state__base.xhtml">__shared_state_base</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="struct____shared__state.xhtml#ade18929ad37ae17735b7db832ea7d299">~__shared_state</a>()</td><td class="entry"><a class="el" href="struct____shared__state.xhtml">__shared_state&lt; _Rp &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:42 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
