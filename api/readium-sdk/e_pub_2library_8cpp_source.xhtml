<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/library.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('e_pub_2library_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">library.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="e_pub_2library_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  library.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-12-14.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="library_8h.xhtml">library.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="container_8h.xhtml">container.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="manifest_8h.xhtml">manifest.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="package_8h.xhtml">package.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="zip__archive_8h.xhtml">zip_archive.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// file format is CSV, unencrypted</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;unique_ptr&lt;Library&gt; <a class="code" href="class_library.xhtml#a661d0c93f53cbb5d2beacaa7fe16d667">Library::_singleton</a>(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="code" href="class_library.xhtml#a55188650e48eae154b990f77ad02b91c">   36</a></span>&#160;<a class="code" href="class_library.xhtml#a2395ac0c49ea380c9018aa74c5a11b7f">Library::Library</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_library.xhtml#ab33c8c19159783b942d4630e50c7814b">Load</a>(path) )</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(<span class="stringliteral">&quot;The provided Locator doesn&#39;t appear to contain library data.&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="class_library.xhtml#a62120f28a9b50cc5b151d868e42ab936">   41</a></span>&#160;<a class="code" href="class_library.xhtml#a62120f28a9b50cc5b151d868e42ab936">Library::~Library</a>()</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="code" href="class_library.xhtml#ab33c8c19159783b942d4630e50c7814b">   44</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_library.xhtml#ab33c8c19159783b942d4630e50c7814b">Library::Load</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::ifstream stream(path.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::stringstream ss;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::string tmp;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">while</span> ( std::getline(stream, tmp).good() )</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            ss &lt;&lt; tmp;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordtype">string</span> thisPath;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            std::list&lt;std::string&gt; uidList;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">while</span> ( !ss.eof() )</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                std::getline(ss, tmp, ss.widen(<span class="charliteral">&#39;,&#39;</span>));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keywordflow">if</span> ( thisPath.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="comment">// first item is a path to a local item</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    thisPath = tmp;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <span class="comment">// remaining items are unique IDs</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    uidList.emplace_back(tmp);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <a class="code" href="class_library.xhtml#ad518d7b03a0d9e982efddc8913789a5a">_containers</a>[thisPath] = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">auto</span> uid : uidList )</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>[uid] = std::make_pair(thisPath, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">catch</span> (...)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="class_library.xhtml#a9620160e26c1512fa3666dc1cb85a504">   87</a></span>&#160;<a class="code" href="class_library.xhtml">Library</a>* <a class="code" href="class_library.xhtml#a9620160e26c1512fa3666dc1cb85a504">Library::MainLibrary</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">static</span> std::once_flag __guard;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    std::call_once(__guard, [&amp;](){ <a class="code" href="class_library.xhtml#a661d0c93f53cbb5d2beacaa7fe16d667">_singleton</a>.reset(<span class="keyword">new</span> <a class="code" href="class_library.xhtml#a2395ac0c49ea380c9018aa74c5a11b7f">Library</a>(path)); });</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_library.xhtml#a661d0c93f53cbb5d2beacaa7fe16d667">_singleton</a>.get();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="code" href="class_library.xhtml#a3e4025fe215441bbaebd569445acc59a">   93</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_library.xhtml#a3e4025fe215441bbaebd569445acc59a">Library::PathForEPubWithUniqueID</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;uniqueID)<span class="keyword"> const</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">auto</span> found = <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>.find(uniqueID);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">if</span> ( found == <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>.end() )</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> found-&gt;second.first;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="class_library.xhtml#a1a478138cc9006a13fac9533b21adc59">  101</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_library.xhtml#a1a478138cc9006a13fac9533b21adc59">Library::PathForEPubWithPackageID</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;packageID)<span class="keyword"> const</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">string</span> uniqueIDStart(packageID + <span class="stringliteral">&quot;@&quot;</span>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> &amp;pair : <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a> )</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> ( pair.first == packageID || pair.first.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(uniqueIDStart) == 0 )</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> pair.second.first;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="class_library.xhtml#addfb6edd36b2c72273c90458f879b2f9">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_library.xhtml#addfb6edd36b2c72273c90458f879b2f9">Library::AddPublicationsInContainer</a>(shared_ptr&lt;Container&gt; container, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// store the container</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> existing = <a class="code" href="class_library.xhtml#ad518d7b03a0d9e982efddc8913789a5a">_containers</a>.find(path);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">if</span> ( existing == <a class="code" href="class_library.xhtml#ad518d7b03a0d9e982efddc8913789a5a">_containers</a>.end() )</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="class_library.xhtml#ad518d7b03a0d9e982efddc8913789a5a">_containers</a>[path] = container;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> pkg : container-&gt;Packages() )</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#if EPUB_HAVE(CXX_MAP_EMPLACE)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor"></span>        <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>.emplace(pkg-&gt;UniqueID(), <a class="code" href="class_library.xhtml#a78bec7495733d4adc69892c442db4f93">LookupEntry</a>(std::make_pair(path, pkg)));</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor"></span>        <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>[pkg-&gt;UniqueID()] = <a class="code" href="class_library.xhtml#a78bec7495733d4adc69892c442db4f93">LookupEntry</a>({path, pkg});</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span>    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="code" href="class_library.xhtml#ac3b59d619d24420f7892baef8cf6221d">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_library.xhtml#ac3b59d619d24420f7892baef8cf6221d">Library::AddPublicationsInContainerAtPath</a>(<span class="keyword">const</span> ePub3::string &amp;path)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> p = <a class="code" href="class_container.xhtml#a8ee5ecf9935bba4c6dfea27043104aa4" title="Creates and returns a new Container instance by calling OpenContainerAsync() and blocking.">Container::OpenContainer</a>(path);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span> ( p )</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="class_library.xhtml#addfb6edd36b2c72273c90458f879b2f9">AddPublicationsInContainer</a>(p, path);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="class_library.xhtml#a59f4a8b59f9c8bc23c7cdaa14ec8140d">  134</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_library.xhtml#a59f4a8b59f9c8bc23c7cdaa14ec8140d">Library::EPubURLForPublication</a>(shared_ptr&lt;Package&gt; package)<span class="keyword"> const</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_library.xhtml#ab1dbaa1c66116c2914d3a5bfe2aa7484">EPubURLForPublicationID</a>(package-&gt;UniqueID());</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="code" href="class_library.xhtml#ab1dbaa1c66116c2914d3a5bfe2aa7484">  138</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_library.xhtml#ab1dbaa1c66116c2914d3a5bfe2aa7484">Library::EPubURLForPublicationID</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;identifier)<span class="keyword"> const</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>(<a class="code" href="class_i_r_i.xhtml#a86a6e23ff6d1b40a2ddece72c05d0fbb" title="The IRI scheme used to refer to EPUB 3 documents.">IRI::gEPUBScheme</a>, identifier, <span class="stringliteral">&quot;/&quot;</span>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="class_library.xhtml#a985bb41db8f145b01efc9b1526359520">  142</a></span>&#160;shared_ptr&lt;Package&gt; <a class="code" href="class_library.xhtml#a985bb41db8f145b01efc9b1526359520">Library::PackageForEPubURL</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> &amp;url, <span class="keywordtype">bool</span> allowLoad)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">// is it an epub URL?</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">if</span> ( url.<a class="code" href="class_i_r_i.xhtml#aaf68190be909eec359edcc7d1604eb7d" title="Obtains the IRI&#39;s scheme component.">Scheme</a>() != <a class="code" href="class_i_r_i.xhtml#a86a6e23ff6d1b40a2ddece72c05d0fbb" title="The IRI scheme used to refer to EPUB 3 documents.">IRI::gEPUBScheme</a> )</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">string</span> ident = url.<a class="code" href="class_i_r_i.xhtml#a2f852db34f01769e1d38f158cf123f0d" title="Retrieves the nost component of a URL IRI.">Host</a>();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">auto</span> entry = <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>.find(ident);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> ( entry == <a class="code" href="class_library.xhtml#ae16168fd8ede91c93c824cfc12b5e214">_packages</a>.end() )</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">if</span> ( entry-&gt;second.second != <span class="keyword">nullptr</span> || !allowLoad )</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> entry-&gt;second.second;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="class_library.xhtml#ac3b59d619d24420f7892baef8cf6221d">AddPublicationsInContainerAtPath</a>(entry-&gt;second.first);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// returns a package ptr or nullptr</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> entry-&gt;second.second;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="class_library.xhtml#a4f0ef35117480b2afc3d3eb960a7ddda">  161</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_library.xhtml#a4f0ef35117480b2afc3d3eb960a7ddda">Library::EPubCFIURLForManifestItem</a>(<a class="code" href="_forward_8h.xhtml#abca75900ee37a8e12719c652ba3e23f2">ManifestItemPtr</a> item)<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="class_i_r_i.xhtml">IRI</a> packageURL = <a class="code" href="class_library.xhtml#a59f4a8b59f9c8bc23c7cdaa14ec8140d">EPubURLForPublication</a>(item-&gt;Owner());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    packageURL.<a class="code" href="class_i_r_i.xhtml#aec838c4c509c47726eae11475b6a6e57">SetContentFragmentIdentifier</a>(item-&gt;Owner()-&gt;CFIForManifestItem(item));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> packageURL;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="code" href="class_library.xhtml#a785ad34485185c738d384ce3daad8ddd">  167</a></span>&#160;shared_ptr&lt;ManifestItem&gt; <a class="code" href="class_library.xhtml#a785ad34485185c738d384ce3daad8ddd">Library::ManifestItemForCFI</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> &amp;urlWithCFI, <a class="code" href="class_c_f_i.xhtml">CFI</a>* pRemainingCFI)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a> cfi = urlWithCFI.<a class="code" href="class_i_r_i.xhtml#a18f9e89463e7cfca4c75d4c4dcd4ee12">ContentFragmentIdentifier</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span> ( cfi.<a class="code" href="class_c_f_i.xhtml#a63626f95caa06f17410b56a3daba9d49">Empty</a>() )</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="filter_8h.xhtml#a5f1ee44b8ec43648eca7bb7049611fa6">PackagePtr</a> pkg = <a class="code" href="class_library.xhtml#a985bb41db8f145b01efc9b1526359520">PackageForEPubURL</a>(urlWithCFI);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">if</span> ( pkg == <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> pkg-&gt;ManifestItemForCFI(cfi, pRemainingCFI);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="code" href="class_library.xhtml#a18596c53164fbbdb95ec9579afc6f930">  179</a></span>&#160;unique_ptr&lt;ByteStream&gt; <a class="code" href="class_library.xhtml#a18596c53164fbbdb95ec9579afc6f930">Library::ReadStreamForEPubURL</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> &amp;url, <a class="code" href="class_c_f_i.xhtml">CFI</a> *pRemainingCFI)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="class_c_f_i.xhtml">CFI</a> cfi = url.<a class="code" href="class_i_r_i.xhtml#a18f9e89463e7cfca4c75d4c4dcd4ee12">ContentFragmentIdentifier</a>();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">if</span> ( cfi.<a class="code" href="class_c_f_i.xhtml#a63626f95caa06f17410b56a3daba9d49">Empty</a>() )</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="comment">// it references a content document directly</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="filter_8h.xhtml#a5f1ee44b8ec43648eca7bb7049611fa6">PackagePtr</a> pkg = <a class="code" href="class_library.xhtml#a985bb41db8f145b01efc9b1526359520">PackageForEPubURL</a>(url);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">if</span> ( pkg )</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">return</span> pkg-&gt;ReadStreamForItemAtPath(url.<a class="code" href="class_i_r_i.xhtml#a72ef3cdac74e591d5ebfb75f2f0853a4">Path</a>());</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <a class="code" href="_forward_8h.xhtml#abca75900ee37a8e12719c652ba3e23f2">ManifestItemPtr</a> item = <a class="code" href="class_library.xhtml#a785ad34485185c738d384ce3daad8ddd">ManifestItemForCFI</a>(url, pRemainingCFI);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span> ( item != <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">return</span> item-&gt;Reader();</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="code" href="class_library.xhtml#a57672dd4e477b65f86505d7021aaa3a1">  198</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_library.xhtml#a57672dd4e477b65f86505d7021aaa3a1">Library::WriteToFile</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)<span class="keyword"> const</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    std::ofstream stream(path.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> item : <a class="code" href="class_library.xhtml#ad518d7b03a0d9e982efddc8913789a5a">_containers</a> )</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment">// works like an auto_ptr, scoping the allocation</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> pContainer = item.second;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">if</span> ( !pContainer )</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            pContainer = <a class="code" href="class_container.xhtml#a8ee5ecf9935bba4c6dfea27043104aa4" title="Creates and returns a new Container instance by calling OpenContainerAsync() and blocking.">Container::OpenContainer</a>(item.first);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">if</span> ( !pContainer )</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        stream &lt;&lt; item.first;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">auto</span> pkg : pContainer-&gt;Packages() )</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            stream &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; pkg-&gt;UniqueID();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        stream &lt;&lt; std::endl;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="e_pub_2library_8cpp.xhtml">library.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
