{
    "project": {
        "COMMAND LINE": "node node_modules/yuidocjs/lib/cli.js -N -C -c yuidocs.json",
        "name": "readium-shared-js",
        "description": "Readium - shared Javascript library",
        "version": "0.0.0",
        "url": "https://github.com/readium/readium-shared-js",
        "logo": "http://readium.org/sites/readium.org/files/header-logo.png"
    },
    "files": {
        "js/models/bookmark_data.js": {
            "name": "js/models/bookmark_data.js",
            "modules": {},
            "classes": {
                "Models.BookmarkData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/current_pages_info.js": {
            "name": "js/models/current_pages_info.js",
            "modules": {},
            "classes": {
                "Models.CurrentPagesInfo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/fixed_page_spread.js": {
            "name": "js/models/fixed_page_spread.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/media_overlay.js": {
            "name": "js/models/media_overlay.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/node_range_info.js": {
            "name": "js/models/node_range_info.js",
            "modules": {},
            "classes": {
                "ReadiumSDK.Models.NodeRangePositionInfo": 1,
                "ReadiumSDK.Models.NodeRangeInfo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/package.js": {
            "name": "js/models/package.js",
            "modules": {},
            "classes": {
                "Package": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/package_data.js": {
            "name": "js/models/package_data.js",
            "modules": {},
            "classes": {
                "Models.PackageData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/page_open_request.js": {
            "name": "js/models/page_open_request.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/smil_iterator.js": {
            "name": "js/models/smil_iterator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/smil_model.js": {
            "name": "js/models/smil_model.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/spine.js": {
            "name": "js/models/spine.js",
            "modules": {},
            "classes": {
                "Models.Spine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/spine_item.js": {
            "name": "js/models/spine_item.js",
            "modules": {},
            "classes": {
                "Models.SpineItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "js/models/style.js": {
            "name": "js/models/style.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/style_collection.js": {
            "name": "js/models/style_collection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/switches.js": {
            "name": "js/models/switches.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/trigger.js": {
            "name": "js/models/trigger.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/models/viewer_settings.js": {
            "name": "js/models/viewer_settings.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/audio_player.js": {
            "name": "js/views/audio_player.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/cfi_navigation_logic.js": {
            "name": "js/views/cfi_navigation_logic.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/fixed_view.js": {
            "name": "js/views/fixed_view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/iframe_loader.js": {
            "name": "js/views/iframe_loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/internal_links_support.js": {
            "name": "js/views/internal_links_support.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/media_overlay_data_injector.js": {
            "name": "js/views/media_overlay_data_injector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/media_overlay_element_highlighter.js": {
            "name": "js/views/media_overlay_element_highlighter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/media_overlay_player.js": {
            "name": "js/views/media_overlay_player.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/one_page_view.js": {
            "name": "js/views/one_page_view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/reader_view.js": {
            "name": "js/views/reader_view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/reflowable_view.js": {
            "name": "js/views/reflowable_view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/views/scroll_view.js": {
            "name": "js/views/scroll_view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/globals.js": {
            "name": "js/globals.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/helpers.js": {
            "name": "js/helpers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/plugins_controller.js": {
            "name": "js/plugins_controller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "plugins/highlights/main.js": {
            "name": "plugins/highlights/main.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "plugins/highlights/manager.js": {
            "name": "plugins/highlights/manager.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Models.BookmarkData": {
            "name": "Models.BookmarkData",
            "shortname": "Models.BookmarkData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/bookmark_data.js",
            "line": 27
        },
        "Models.CurrentPagesInfo": {
            "name": "Models.CurrentPagesInfo",
            "shortname": "Models.CurrentPagesInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/current_pages_info.js",
            "line": 28,
            "description": "Used to report pagination state back to the host application",
            "is_constructor": 1,
            "params": [
                {
                    "name": "spine",
                    "description": "",
                    "type": "Models.Spine"
                },
                {
                    "name": "isFixedLayout",
                    "description": "is fixed or reflowable spine item",
                    "type": "Boolean"
                }
            ]
        },
        "ReadiumSDK.Models.NodeRangePositionInfo": {
            "name": "ReadiumSDK.Models.NodeRangePositionInfo",
            "shortname": "ReadiumSDK.Models.NodeRangePositionInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/node_range_info.js",
            "line": 28,
            "is_constructor": 1
        },
        "ReadiumSDK.Models.NodeRangeInfo": {
            "name": "ReadiumSDK.Models.NodeRangeInfo",
            "shortname": "ReadiumSDK.Models.NodeRangeInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/node_range_info.js",
            "line": 50,
            "is_constructor": 1
        },
        "Package": {
            "name": "Package",
            "shortname": "Package",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/package.js",
            "line": 26,
            "is_constructor": 1
        },
        "Models.PackageData": {
            "name": "Models.PackageData",
            "shortname": "Models.PackageData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/package_data.js",
            "line": 28,
            "description": "This object is not instantiated directly but provided by the host application to the DOMAccess layer in the\nViews.ReaderView.openBook function\n\nProvided for reference only"
        },
        "Models.Spine": {
            "name": "Models.Spine",
            "shortname": "Models.Spine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/spine.js",
            "line": 27,
            "description": "Wrapper of the spine object received from hosting application"
        },
        "Models.SpineItem": {
            "name": "Models.SpineItem",
            "shortname": "Models.SpineItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "js/models/spine_item.js",
            "line": 28,
            "description": "Wrapper of the SpineItem object received from the host application",
            "is_constructor": 1,
            "params": [
                {
                    "name": "itemData",
                    "description": "spine item properties container"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "spine",
                    "description": "",
                    "type": "Models.Spine"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "js/models/bookmark_data.js",
            "line": 34,
            "description": "spine item idref",
            "itemtype": "property",
            "name": "idref",
            "type": "{string}",
            "class": "Models.BookmarkData"
        },
        {
            "file": "js/models/bookmark_data.js",
            "line": 41,
            "description": "cfi of the first visible element",
            "itemtype": "property",
            "name": "contentCFI",
            "type": "{string}",
            "class": "Models.BookmarkData"
        },
        {
            "file": "js/models/bookmark_data.js",
            "line": 48,
            "description": "serialize to string",
            "return": {
                "description": "JSON string representation"
            },
            "class": "Models.BookmarkData"
        },
        {
            "file": "js/models/bookmark_data.js",
            "line": 58,
            "description": "Deserialize from string",
            "params": [
                {
                    "name": "str",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "ReadiumSDK.Models.BookmarkData"
            },
            "class": "Models.BookmarkData"
        },
        {
            "file": "js/models/fixed_page_spread.js",
            "line": 27,
            "params": [
                {
                    "name": "spine",
                    "description": "",
                    "type": "Models.Spine"
                }
            ],
            "is_constructor": 1,
            "class": "ReadiumSDK.Models.NodeRangePositionInfo"
        },
        {
            "file": "js/models/media_overlay.js",
            "line": 30,
            "params": [
                {
                    "name": "package",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "ReadiumSDK.Models.NodeRangePositionInfo"
        },
        {
            "file": "js/models/node_range_info.js",
            "line": 34,
            "description": "The actual DOM node",
            "itemtype": "property",
            "name": "node",
            "type": "{Node}",
            "class": "ReadiumSDK.Models.NodeRangePositionInfo"
        },
        {
            "file": "js/models/node_range_info.js",
            "line": 41,
            "description": "The position offsetf for the node",
            "itemtype": "property",
            "name": "offset",
            "type": "{Number}",
            "class": "ReadiumSDK.Models.NodeRangePositionInfo"
        },
        {
            "file": "js/models/node_range_info.js",
            "line": 57,
            "description": "Client rectangle information for the range content bounds",
            "itemtype": "property",
            "name": "clientRect",
            "type": "{ClientRect}",
            "class": "ReadiumSDK.Models.NodeRangeInfo"
        },
        {
            "file": "js/models/node_range_info.js",
            "line": 64,
            "description": "Node and position information providing where and which node the range starts with",
            "itemtype": "property",
            "name": "startInfo",
            "type": "{ReadiumSDK.Models.NodeRangePositionInfo}",
            "class": "ReadiumSDK.Models.NodeRangeInfo"
        },
        {
            "file": "js/models/node_range_info.js",
            "line": 71,
            "description": "Node and position information providing where and which node the range ends with",
            "itemtype": "property",
            "name": "endInfo",
            "type": "{ReadiumSDK.Models.NodeRangePositionInfo}",
            "class": "ReadiumSDK.Models.NodeRangeInfo"
        },
        {
            "file": "js/models/package_data.js",
            "line": 38,
            "itemtype": "property",
            "name": "rootUrl Url of the package file",
            "type": "{string}",
            "class": "Models.PackageData"
        },
        {
            "file": "js/models/package_data.js",
            "line": 44,
            "itemtype": "property",
            "name": "rootUrl Url of the package file, to prefix Media Overlays SMIL audio references",
            "type": "{string}",
            "class": "Models.PackageData"
        },
        {
            "file": "js/models/package_data.js",
            "line": 50,
            "itemtype": "property",
            "name": "rendering_layout expected values \"reflowable\"|rendering_layout=\"pre-paginated\"",
            "type": "{string}",
            "class": "Models.PackageData"
        },
        {
            "file": "js/models/page_open_request.js",
            "line": 27,
            "description": "Representation of opening page request\nProvides the spine item to be opened and one of the following properties:\n spineItemPageIndex {Number},\n elementId {String},\n elementCfi {String},\n firstPage {bool},\n lastPage {bool}",
            "params": [
                {
                    "name": "spineItem",
                    "description": "",
                    "type": "Models.SpineItem"
                },
                {
                    "name": "initiator",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "class": "Models.Spine"
        },
        {
            "file": "js/models/smil_iterator.js",
            "line": 29,
            "params": [
                {
                    "name": "smil",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "Models.Spine"
        },
        {
            "file": "js/models/smil_model.js",
            "line": 30,
            "params": [
                {
                    "name": "parent",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "Models.Spine"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 42,
            "description": "The idref of the spine item, i.e. the ID-based pointer to the actual \nmanifest item that the spine item references",
            "itemtype": "property",
            "name": "idref",
            "type": "{String}",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 52,
            "description": "The href of the spine item, i.e. the URI to the resource in the EPUB\nwhich the spineitem will render",
            "itemtype": "property",
            "name": "href",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 62,
            "description": "A flag indicating whether the spineItem has the attribute linear, which \nis either yes or no.  Default is yes.",
            "itemtype": "property",
            "name": "linear",
            "type": "String",
            "default": "yes",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 72,
            "description": "A variable indicating the type of synthetic spread for this specific\nspine item, where page:spread-* can be left, right or center or auto",
            "itemtype": "property",
            "name": "page_spread",
            "type": "String",
            "default": "auto",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 82,
            "description": "A string specifying the height and width from the rendition:viewport tag.\nNote: This is deprecated in EPUB 3.1",
            "itemtype": "property",
            "name": "rendition_viewport",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 92,
            "description": "A string specifying the type of synthetic spread for ALL spine items, where\nwhere rendtion:spread-* can be left, right or center or auto",
            "itemtype": "property",
            "name": "rendition_spread",
            "type": "String",
            "default": "auto",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 102,
            "description": "A sring specifying desired orientation for ALL spine items. Possible values are\nrendition-orientation-*, which can be none, landscape, portrait, both or auto\n\nNote: Not yet implemented.",
            "itemtype": "property",
            "name": "rendition_orientation",
            "type": "String",
            "default": "auto",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 114,
            "description": "A string indicating the type of document layout, either prepaginated or reflowable",
            "itemtype": "property",
            "name": "rendition_layout",
            "type": "String",
            "default": "reflowable",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 123,
            "description": "A string specifying how \"overflow\" content that exceeds the current viewport should\nbe laid out.  Possible values are paginated, scrolled-continuous, scrolled-doc or auto",
            "itemtype": "property",
            "name": "rendition_flow",
            "type": "String",
            "default": "auto",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 133,
            "description": "The ID, if any, of the root SMIL element of the media overlay for the document.",
            "itemtype": "property",
            "name": "media_overlay_id",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 142,
            "description": "The mimetype of this specific spine item.",
            "itemtype": "property",
            "name": "media_type",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 151,
            "description": "The index of this spine item in the spine itself.",
            "itemtype": "property",
            "name": "index",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 160,
            "description": "The object which is the actual spine of which this spineItem is a child.",
            "itemtype": "property",
            "name": "spine",
            "type": "String",
            "default": "None",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 177,
            "description": "Checks to see if the manifest has specified a spread property of \"none\"",
            "itemtype": "method",
            "name": "isRenditionSpreadAllowed",
            "return": {
                "description": "TRUE if spread=none has NOT been specified, else FALSE",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 189,
            "description": "Checks to see if the value for the page-spread attribute is valid",
            "itemtype": "method",
            "name": "validateSpread",
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 208,
            "description": "Checks to see if this spineItem explicitly specifies SPREAD_LEFT",
            "itemtype": "method",
            "name": "isLeftPage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 218,
            "description": "Checks to see if this spineItem explicitly specifies SPREAD_RIGHT",
            "itemtype": "method",
            "name": "isRightPage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 228,
            "description": "Checks to see if this spineItem explicitly specifies SPREAD_CENTER",
            "itemtype": "method",
            "name": "isCenterPage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 238,
            "description": "Checks to see if the parent package of this spineIem is\nreflowable",
            "itemtype": "method",
            "name": "isReflowable",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 249,
            "description": "Checks to see if the parent package of to this spineIem is\nfixed layout",
            "itemtype": "method",
            "name": "isFixedLayout",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 277,
            "description": "Returns a string indicating the type of layout for viewport overflow, \ni.e. scrolldoc, scroll-continuous, paginated or auto.  Note that if the spineItem \nhas an override (local value) that is returned, else the package's \nvalue is returned",
            "itemtype": "method",
            "name": "getRenditionFlow",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 295,
            "description": "Returns the rendition:viewport, if any. Note that if the spineItem \nhas an override (local value) that is returned, else the package's \nvalue is returned.\nNote that this attribute is deprecated in EPUB 3.1",
            "itemtype": "method",
            "name": "getRenditionViewport",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 313,
            "description": "Returns the rendition:spread, if any. Note that if the spineItem \nhas an override (local value) that is returned, else the package's \nvalue is returned.",
            "itemtype": "method",
            "name": "getRenditionSpread",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 330,
            "description": "Returns the rendition:orientation, if any. Note that if the spineItem \nhas an override (local value) that is returned, else the package's \nvalue is returned.",
            "itemtype": "method",
            "name": "getRenditionOrientation",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 347,
            "description": "Returns the rendition:layout, if any. Note that if the spineItem \nhas an override (local value) that is returned, else the package's \nvalue is returned.",
            "itemtype": "method",
            "name": "getRenditionLayout",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 364,
            "description": "Checks to see if the specified property is set in this spineItem and\nmatches the supplied value.  If the property is NOT set in the spineItem\nthen the the package is checked. If not set in either place then \nthe function returns FALSE.",
            "itemtype": "method",
            "name": "isPropertyValueSetForItemOrPackage",
            "params": [
                {
                    "name": "propName",
                    "description": "The name of the property to be checked",
                    "type": "String"
                },
                {
                    "name": "propValue",
                    "description": "The value of the property to be checked",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 388,
            "description": "Checks if this spineItem or its parent package has its overflow content \nlayout specified as scrolled-continuous.",
            "itemtype": "method",
            "name": "isFlowScrolledContinuous",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 400,
            "description": "Checks if this spineItem or its parent package has its overflow content \nlayout specified as scrolled-doc.",
            "itemtype": "method",
            "name": "isFlowScrolledDoc",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 413,
            "itemtype": "property",
            "name": "RENDITION_LAYOUT_REFLOWABLE",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 420,
            "itemtype": "property",
            "name": "RENDITION_LAYOUT_PREPAGINATED",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 427,
            "itemtype": "property",
            "name": "RENDITION_ORIENTATION_LANDSCAPE",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 434,
            "itemtype": "property",
            "name": "RENDITION_ORIENTATION_PORTRAIT",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 440,
            "itemtype": "property",
            "name": "RENDITION_ORIENTATION_AUTO",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 447,
            "itemtype": "property",
            "name": "SPREAD_LEFT",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 454,
            "itemtype": "property",
            "name": "SPREAD_RIGHT",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 461,
            "itemtype": "property",
            "name": "SPREAD_CENTER",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 468,
            "itemtype": "property",
            "name": "RENDITION_SPREAD_NONE",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 475,
            "itemtype": "property",
            "name": "RENDITION_SPREAD_LANDSCAPE",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 482,
            "itemtype": "property",
            "name": "RENDITION_SPREAD_PORTRAIT",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 489,
            "itemtype": "property",
            "name": "RENDITION_SPREAD_BOTH",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 496,
            "itemtype": "property",
            "name": "RENDITION_SPREAD_AUTO",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 503,
            "itemtype": "property",
            "name": "RENDITION_FLOW_PAGINATED",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 510,
            "itemtype": "property",
            "name": "RENDITION_FLOW_SCROLLED_CONTINUOUS",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 517,
            "itemtype": "property",
            "name": "RENDITION_FLOW_SCROLLED_DOC",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 524,
            "itemtype": "property",
            "name": "RENDITION_FLOW_AUTO",
            "type": "{String}",
            "static": 1,
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/spine_item.js",
            "line": 531,
            "description": "Returns the inversion of the spineItem's SPREAD property. i.e\nif the page-spread is right it returns LEFT and vice versa.  If \nthe spread is center then it returns CENTER",
            "itemtype": "method",
            "name": "alternateSpread",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Models.SpineItem"
        },
        {
            "file": "js/models/style.js",
            "line": 27,
            "params": [
                {
                    "name": "selector",
                    "description": ""
                },
                {
                    "name": "declarations",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/models/style_collection.js",
            "line": 27,
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/models/switches.js",
            "line": 28,
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/models/trigger.js",
            "line": 29,
            "description": "Setter fot epub Triggers",
            "params": [
                {
                    "name": "domNode",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "js/models/viewer_settings.js",
            "line": 27,
            "params": [
                {
                    "name": "settingsData",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/audio_player.js",
            "line": 32,
            "params": [
                {
                    "name": "onStatusChanged",
                    "description": ""
                },
                {
                    "name": "onPositionChanged",
                    "description": ""
                },
                {
                    "name": "onAudioEnded",
                    "description": ""
                },
                {
                    "name": "onAudioPlay",
                    "description": ""
                },
                {
                    "name": "onAudioPause",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 28,
            "description": "CFI navigation helper class",
            "params": [
                {
                    "name": "options",
                    "description": "Additional settings for NavigationLogic object\n     - paginationInfo            Layout details, used by clientRect-based geometry\n     - visibleContentOffsets     Function that returns offsets. If supplied it is used instead of the inferred offsets\n     - frameDimensions           Function that returns an object with width and height properties. Needs to be set.\n     - $iframe                   Iframe reference, and needs to be set."
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 122,
            "access": "private",
            "tagname": "Checks whether or not pages are rendered right-to-left",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 132,
            "access": "private",
            "tagname": "Checks whether or not pages are rendered with vertical writing mode",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 143,
            "access": "private",
            "tagname": "Checks whether or not a (fully adjusted) rectangle is at least partly visible",
            "params": [
                {
                    "name": "rect",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "isVwm",
                    "description": "isVerticalWritingMode",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 176,
            "access": "private",
            "tagname": "Retrieves _current_ full width of a column (including its gap)",
            "return": {
                "description": "Full width of a column in pixels",
                "type": "Number"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 192,
            "access": "private",
            "tagname": "Retrieves _current_ offset of a viewport\n(related to the beginning of the chapter)",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 218,
            "description": "New (rectangle-based) algorithm, useful in multi-column layouts\n\nNote: the second param (props) is ignored intentionally\n(no need to use those in normalization)",
            "params": [
                {
                    "name": "$element",
                    "description": "",
                    "type": "JQuery"
                },
                {
                    "name": "_props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "shouldCalculateVisibilityPercentage",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "0 for non-visible elements,\n     0 < n <= 100 for visible elements\n     (will just give 100, if `shouldCalculateVisibilityPercentage` => false)\n     null for elements with display:none",
                "type": "Number|null"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 282,
            "description": "Finds a page index (0-based) for a specific element.\nCalculations are based on rectangles retrieved with getClientRects() method.",
            "params": [
                {
                    "name": "$element",
                    "description": "",
                    "type": "JQuery"
                },
                {
                    "name": "spatialVerticalOffset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 302,
            "access": "private",
            "tagname": "Calculate a page index (0-based) for given client rectangles.",
            "params": [
                {
                    "name": "clientRectangles",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "spatialVerticalOffset",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "columnFullWidth",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 351,
            "description": "Finds a page index (0-based) for a specific client rectangle.\nCalculations are based on viewport dimensions, offsets, and rectangle coordinates",
            "params": [
                {
                    "name": "clientRectangle",
                    "description": "",
                    "type": "ClientRect"
                },
                {
                    "name": "visibleContentOffsets",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Number|null"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 370,
            "access": "private",
            "tagname": "Calculates the visibility offset percentage based on ClientRect dimensions",
            "params": [
                {
                    "name": "clientRectangles",
                    "description": "(should already be normalized)",
                    "type": "Array"
                },
                {
                    "name": "firstVisibleRectIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "- visibility percentage (0 < n <= 100)",
                "type": "Number"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 404,
            "access": "private",
            "tagname": "Retrieves the position of $element in multi-column layout",
            "params": [
                {
                    "name": "$el",
                    "description": "",
                    "type": "JQuery"
                },
                {
                    "name": "visibleContentOffsets",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 465,
            "access": "private",
            "tagname": "Converts TextRectangle object into a plain object,\ntaking content offsets (=scrolls, position shifts etc.) into account",
            "params": [
                {
                    "name": "textRect",
                    "description": "",
                    "type": "TextRectangle"
                },
                {
                    "name": "leftOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "topOffset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 489,
            "access": "private",
            "tagname": "Offsets plain object (which represents a TextRectangle).",
            "params": [
                {
                    "name": "rect",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "leftOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "topOffset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 505,
            "access": "private",
            "tagname": "When element is spilled over two or more columns,\nmost of the time Webkit-based browsers\nstill assign a single clientRectangle to it, setting its `top` property to negative value\n(so it looks like it's rendered based on the second column)\nAlas, sometimes they decide to continue the leftmost column - from _below_ its real height.\nIn this case, `bottom` property is actually greater than element's height and had to be adjusted accordingly.\n\nUgh.",
            "params": [
                {
                    "name": "rect",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "shouldLookForFirstVisibleColumn",
                    "description": "\n     If set, there'll be two-phase adjustment\n     (to align a rectangle with a viewport)",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "columnFullWidth",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "isRtl",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "isVwm",
                    "description": "isVerticalWritingMode",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/cfi_navigation_logic.js",
            "line": 561,
            "access": "private",
            "tagname": "Trims the rectangle(s) representing the given element.",
            "params": [
                {
                    "name": "rects",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "verticalOffset",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "frameDimensions",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "columnFullWidth",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "isRtl",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "isVwm",
                    "description": "isVerticalWritingMode",
                    "type": "Boolean"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/fixed_view.js",
            "line": 30,
            "description": "View for rendering fixed layout page spread",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "reader",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/iframe_loader.js",
            "line": 30,
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/internal_links_support.js",
            "line": 26,
            "params": [
                {
                    "name": "reader",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/media_overlay_data_injector.js",
            "line": 26,
            "params": [
                {
                    "name": "mediaOverlay",
                    "description": ""
                },
                {
                    "name": "mediaOverlayPlayer",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/media_overlay_element_highlighter.js",
            "line": 30,
            "params": [
                {
                    "name": "reader",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/media_overlay_player.js",
            "line": 31,
            "params": [
                {
                    "name": "reader",
                    "description": ""
                },
                {
                    "name": "onStatusChanged",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/one_page_view.js",
            "line": 30,
            "description": "Renders one page of fixed layout spread",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "classes",
                    "description": ""
                },
                {
                    "name": "enableBookStyleOverrides",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 35,
            "description": "Options passed on the reader from the readium loader/initializer",
            "typedef": "{object} Globals.Views.ReaderView.ReaderOptions",
            "itemtype": "property",
            "name": "{boolean} needsFixedLayoutScalerWorkAround",
            "type": "JQueryElement|string",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 44,
            "description": "Top level View object. Interface for view manipulation public APIs",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Views.ReaderView.ReaderOptions"
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 93,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 100,
            "description": "Create a view based on the given view type.",
            "params": [
                {
                    "name": "viewType",
                    "description": "",
                    "type": "Views.ReaderView.ViewType"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Views.ReaderView.ViewCreationOptions"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 133,
            "description": "Returns the current view type of the reader view",
            "return": {
                "description": "",
                "type": "ReaderView.ViewType"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 211,
            "description": "View creation options",
            "typedef": "{object} Globals.Views.ReaderView.ViewCreationOptions",
            "itemtype": "property",
            "name": "{Globals.Views.IFrameLoader} iframeLoader   An instance of an iframe loader or one expanding it.",
            "type": "JQueryElement",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 294,
            "description": "Returns a list of the currently active spine items",
            "return": {
                "description": "",
                "type": "Models.SpineItem[]"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 325,
            "description": "Returns the currently instanced viewer settings",
            "return": {
                "description": "",
                "type": "Models.ViewerSettings"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 334,
            "description": "Returns a data object based on the package document",
            "return": {
                "description": "",
                "type": "Models.Package"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 343,
            "description": "Returns a representation of the spine as a data object, also acts as list of spine items",
            "return": {
                "description": "",
                "type": "Models.Spine"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 352,
            "description": "Returns the user CSS styles collection",
            "return": {
                "description": "",
                "type": "Collections.StyleCollection"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 361,
            "description": "Open Book Data",
            "typedef": "{object} Globals.Views.ReaderView.OpenBookData",
            "itemtype": "property",
            "name": "{Globals.Collections.StyleCollection} styles: [cssStyles]",
            "type": "Globals.Models.Package",
            "todo": [
                "Define missing types"
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 372,
            "description": "Triggers the process of opening the book and requesting resources specified in the packageData",
            "params": [
                {
                    "name": "openBookData",
                    "description": "- object with open book data",
                    "type": "Views.ReaderView.OpenBookData"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 468,
            "description": "Flips the page from left to right.\nTakes to account the page progression direction to decide to flip to prev or next page.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 482,
            "description": "Flips the page from right to left.\nTakes to account the page progression direction to decide to flip to prev or next page.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 497,
            "description": "Returns if the current child view is an instance of a fixed page view",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 506,
            "description": "Zoom options",
            "typedef": "{object} Globals.Views.ReaderView.ZoomOptions",
            "itemtype": "property",
            "name": "{number} scale - 0.0 to 1.0",
            "type": "String",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 514,
            "description": "Set the zoom options.",
            "params": [
                {
                    "name": "zoom",
                    "description": "Zoom options",
                    "type": "Views.ReaderView.ZoomOptions"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 526,
            "description": "Returns the current view scale as a percentage",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 540,
            "description": "Settings Data",
            "typedef": "{object} Globals.Views.ReaderView.SettingsData",
            "itemtype": "property",
            "name": "{boolean} mediaOverlaysEnableClick - Indicates whether media overlays are interactive on mouse clicks",
            "type": "Number",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 551,
            "description": "Updates reader view based on the settings specified in settingsData object",
            "params": [
                {
                    "name": "settingsData",
                    "description": "Settings data",
                    "type": "Globals.Views.ReaderView.SettingsData"
                }
            ],
            "fires": "Globals.Events.SETTINGS_APPLIED",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 611,
            "description": "Opens the next page.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 648,
            "description": "Opens the previous page.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 703,
            "description": "Opens the page of the spine item with element with provided cfi",
            "params": [
                {
                    "name": "idref",
                    "description": "Id of the spine item",
                    "type": "String"
                },
                {
                    "name": "elementCfi",
                    "description": "CFI of the element to be shown",
                    "type": "String"
                },
                {
                    "name": "initiator",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 728,
            "description": "Opens specified page index of the current spine item",
            "params": [
                {
                    "name": "pageIndex",
                    "description": "Zero based index of the page in the current spine item",
                    "type": "Number"
                },
                {
                    "name": "initiator",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 779,
            "description": "Opens page index of the spine item with idref provided",
            "params": [
                {
                    "name": "idref",
                    "description": "Id of the spine item",
                    "type": "String"
                },
                {
                    "name": "pageIndex",
                    "description": "Zero based index of the page in the spine item",
                    "type": "Number"
                },
                {
                    "name": "initiator",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 804,
            "description": "Set CSS Styles to the reader container",
            "params": [
                {
                    "name": "styles",
                    "description": "Style collection containing selector property and declarations object",
                    "type": "Collections.StyleCollection"
                },
                {
                    "name": "doNotUpdateView",
                    "description": "Whether to update the view after the styles are applied.",
                    "type": "Boolean"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 827,
            "description": "Set CSS Styles to the content documents",
            "params": [
                {
                    "name": "styles",
                    "description": "Style collection containing selector property and declarations object",
                    "type": "Collections.StyleCollection"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 846,
            "description": "Gets an element from active content documents based on a query selector.",
            "params": [
                {
                    "name": "spineItem",
                    "description": "The spine item object associated with an active content document",
                    "type": "Models.SpineItem"
                },
                {
                    "name": "selector",
                    "description": "The query selector",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement|undefined"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 862,
            "description": "Gets an element from active content documents based on an element id.",
            "params": [
                {
                    "name": "spineItemIdref",
                    "description": "The spine item idref associated with an active content document",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The element id",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement|undefined"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 878,
            "description": "Gets an element from active content documents based on a content CFI.",
            "params": [
                {
                    "name": "spineItemIdref",
                    "description": "The spine item idref associated with an active content document",
                    "type": "String"
                },
                {
                    "name": "cfi",
                    "description": "The partial content CFI",
                    "type": "String"
                },
                {
                    "name": "classBlacklist",
                    "description": "",
                    "type": "String[]",
                    "optional": true
                },
                {
                    "name": "elementBlacklist",
                    "description": "",
                    "type": "String[]",
                    "optional": true
                },
                {
                    "name": "idBlacklist",
                    "description": "",
                    "type": "String[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement|undefined"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 912,
            "description": "Opens a content url from a media player context",
            "params": [
                {
                    "name": "contentRefUrl",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "sourceFileHref",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 924,
            "description": "Opens the content document specified by the url",
            "params": [
                {
                    "name": "contentRefUrl",
                    "description": "Url of the content document",
                    "type": "String"
                },
                {
                    "name": "sourceFileHref",
                    "description": "Url to the file that contentRefUrl is relative to. If contentRefUrl is\nrelative ot the source file that contains it instead of the package file (ex. TOC file) We have to know the\nsourceFileHref to resolve contentUrl relative to the package file.",
                    "type": "String | undefined"
                },
                {
                    "name": "initiator",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 966,
            "description": "Opens the page of the spine item with element with provided cfi",
            "params": [
                {
                    "name": "idref",
                    "description": "Id of the spine item",
                    "type": "String"
                },
                {
                    "name": "elementId",
                    "description": "id of the element to be shown",
                    "type": "String"
                },
                {
                    "name": "initiator",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 992,
            "description": "Returns the bookmark associated with currently opened page.",
            "return": {
                "description": "Serialized ReadiumSDK.Models.BookmarkData object as JSON string.\n         {null} If a bookmark could not be created successfully.",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1003,
            "description": "Resets all the custom styles set by setStyle callers at runtime",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1013,
            "description": "Resets all the custom styles set by setBookStyle callers at runtime",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1027,
            "description": "Returns true if media overlay available for one of the open pages.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1051,
            "description": "Starts/Stop playing media overlay on current page",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1060,
            "description": "Plays next fragment media overlay",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1069,
            "description": "Plays previous fragment media overlay",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1078,
            "description": "Plays next available fragment media overlay that is outside of the current escapable scope",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1086,
            "description": "End media overlay TTS",
            "todo": [
                "Clarify what this does with Daniel."
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1095,
            "description": "Pause currently playing media overlays.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1103,
            "description": "Start/Resume playback of media overlays.",
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1111,
            "description": "Determine if media overlays are currently playing.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1131,
            "description": "Get the first visible media overlay element from the currently active content document(s)",
            "return": {
                "description": "",
                "type": "HTMLElement|undefined"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1144,
            "description": "Used to jump to an element to make sure it is visible when a content document is paginated",
            "params": [
                {
                    "name": "spineItemId",
                    "description": "The spine item idref associated with an active content document",
                    "type": "String"
                },
                {
                    "name": "element",
                    "description": "The element to make visible",
                    "type": "HTMLElement"
                },
                {
                    "name": "initiator",
                    "description": "",
                    "optional": true
                }
            ],
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1209,
            "description": "Lets user to subscribe to iframe's window events",
            "params": [
                {
                    "name": "eventName",
                    "description": "Event name.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "User specified data passed to the callback function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1504,
            "description": "Gets all elements from active content documents based on a query selector.",
            "params": [
                {
                    "name": "spineItemIdref",
                    "description": "The spine item idref associated with the content document",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "The query selector",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement[]"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1520,
            "description": "Determine if an element is visible on the active content documents",
            "params": [
                {
                    "name": "element",
                    "description": "The element.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1531,
            "description": "Resolve a range CFI into an object containing info about it.",
            "params": [
                {
                    "name": "spineIdRef",
                    "description": "The spine item idref associated with the content document",
                    "type": "String"
                },
                {
                    "name": "partialCfi",
                    "description": "The partial CFI that is the range CFI to resolve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "ReadiumSDK.Models.NodeRangeInfo"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1549,
            "description": "Get the pagination info from the current view",
            "return": {
                "description": "",
                "type": "ReadiumSDK.Models.CurrentPagesInfo"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1557,
            "description": "Get CFI of the first element visible in the viewport",
            "return": {
                "description": "",
                "type": "ReadiumSDK.Models.BookmarkData"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1568,
            "description": "Get CFI of the last element visible in the viewport",
            "return": {
                "description": "",
                "type": "ReadiumSDK.Models.BookmarkData"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1578,
            "params": [
                {
                    "name": "rangeCfi",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "rangeCfi2",
                    "description": "",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "inclusive",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1596,
            "params": [
                {
                    "name": "startCfi",
                    "description": "starting CFI",
                    "type": "ReadiumSDK.Models.BookmarkData"
                },
                {
                    "name": "endCfi",
                    "description": "ending CFI\n optional - may be omited if startCfi is a range CFI",
                    "type": "ReadiumSDK.Models.BookmarkData",
                    "optional": true
                },
                {
                    "name": "inclusive",
                    "description": "optional indicating if the range should be inclusive",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1615,
            "params": [
                {
                    "name": "startCfi",
                    "description": "starting CFI",
                    "type": "ReadiumSDK.Models.BookmarkData"
                },
                {
                    "name": "endCfi",
                    "description": "ending CFI\n optional - may be omited if startCfi is a range CFI",
                    "type": "ReadiumSDK.Models.BookmarkData",
                    "optional": true
                },
                {
                    "name": "inclusive",
                    "description": "optional indicating if the range should be inclusive",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "https://developer.mozilla.org/en-US/docs/Web/API/Range",
                "type": "DOM Range"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1630,
            "description": "Generate range CFI from DOM range",
            "params": [
                {
                    "name": "https://developer.mozilla.org/en-US/docs/Web/API/Range",
                    "description": "",
                    "type": "DOM Range"
                }
            ],
            "return": {
                "description": "- represents Range CFI for the DOM range",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1642,
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "precisePoint",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "spineItemIdref",
                    "description": "Required for fixed layout views",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1656,
            "params": [
                {
                    "name": "startX",
                    "description": ""
                },
                {
                    "name": "startY",
                    "description": ""
                },
                {
                    "name": "endX",
                    "description": ""
                },
                {
                    "name": "endY",
                    "description": ""
                },
                {
                    "name": "spineItemIdref",
                    "description": "Required for fixed layout views",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1672,
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "js/views/reader_view.js",
            "line": 1685,
            "description": "View Type",
            "typedef": "{object} Globals.Views.ReaderView.ViewType",
            "itemtype": "property",
            "name": "{number} VIEW_TYPE_SCROLLED_CONTINUOUS Continuous scrollable document view",
            "type": "Number",
            "class": ""
        },
        {
            "file": "js/views/reflowable_view.js",
            "line": 35,
            "description": "Renders reflowable content using CSS columns",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/views/scroll_view.js",
            "line": 30,
            "description": "Renders content inside a scrollable view port",
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "isContinuousScroll",
                    "description": ""
                },
                {
                    "name": "reader",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 32,
            "description": "Top level ReadiumSDK namespace",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 38,
            "description": "Current version of the JS SDK",
            "static": 1,
            "return": {
                "description": "version",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 46,
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 50,
            "description": "Landscape Orientation",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 54,
            "description": "Portrait Orientation",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 59,
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 63,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 67,
            "description": "This gets triggered on every page turnover. It includes spine information and such.",
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 72,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 76,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 80,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 84,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 88,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 92,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 96,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 100,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 104,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 108,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 112,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 117,
            "description": "Internal Events",
            "desc": "Should not be triggered outside of {@link Views.ReaderView}.",
            "class": ""
        },
        {
            "file": "js/globals.js",
            "line": 124,
            "itemtype": "event",
            "name": "",
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 76,
            "params": [
                {
                    "name": "ebookURL",
                    "description": "URL string, or Blob (possibly File)"
                }
            ],
            "return": {
                "description": "string representing the file path / name from which the asset referenced by this URL originates"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 93,
            "return": {
                "description": "object (map between URL query parameter names and corresponding decoded / unescaped values)"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 117,
            "params": [
                {
                    "name": "urlpath:",
                    "description": "string corresponding a URL without query parameters (i.e. the part before the '?' question mark in index.html?param=value). If undefined/null, the default window.location is used."
                },
                {
                    "name": "overrides:",
                    "description": "object that maps query parameter names with values (to be included in the resulting URL, while any other query params in the current window.location are preserved as-is)"
                }
            ],
            "return": {
                "description": "a string corresponding to a URL obtained by concatenating the given URL with the given query parameters (and those already in window.location)"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 172,
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                },
                {
                    "name": "width",
                    "description": ""
                },
                {
                    "name": "height",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 208,
            "params": [
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Helpers.Rect"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 318,
            "params": [
                {
                    "name": "contentRef",
                    "description": ""
                },
                {
                    "name": "sourceFileHref",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 348,
            "params": [
                {
                    "name": "str",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 359,
            "params": [
                {
                    "name": "str",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 371,
            "params": [
                {
                    "name": "str",
                    "description": ""
                },
                {
                    "name": "toRemove",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 389,
            "params": [
                {
                    "name": "margin",
                    "description": ""
                },
                {
                    "name": "border",
                    "description": ""
                },
                {
                    "name": "padding",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 416,
            "params": [
                {
                    "name": "$iframe",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 475,
            "params": [
                {
                    "name": "$viewport",
                    "description": ""
                },
                {
                    "name": "spineItem",
                    "description": ""
                },
                {
                    "name": "settings",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 545,
            "params": [
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Helpers.Rect"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 554,
            "return": {
                "description": "",
                "type": "Helpers.Rect"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 568,
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "params",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Helpers.loadTemplate.cache"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 578,
            "type": "{{fixed_book_frame: string, single_page_frame: string, scrolled_book_frame: string, reflowable_book_frame: string, reflowable_book_page_frame: string}}",
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 593,
            "params": [
                {
                    "name": "styles",
                    "description": ""
                },
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 618,
            "params": [
                {
                    "name": "iframe",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 638,
            "params": [
                {
                    "name": "$viewport",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Globals.Views.ORIENTATION_LANDSCAPE|Globals.Views.ORIENTATION_PORTRAIT"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 655,
            "params": [
                {
                    "name": "item",
                    "description": ""
                },
                {
                    "name": "orientation",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "js/helpers.js",
            "line": 759,
            "params": [
                {
                    "name": "sel",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "js/plugins_controller.js",
            "line": 34,
            "description": "A  plugins controller used to easily add plugins from the host app, eg.\nReadiumSDK.Plugins.register(\"footnotes\", function(api){ ... });",
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 46,
            "description": "Returns current selection partial Cfi, useful for workflows that need to check whether the user has selected something.",
            "return": {
                "description": "partial cfi object or undefined if nothing is selected",
                "type": "Object | undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 55,
            "description": "Creates a higlight based on given parameters",
            "params": [
                {
                    "name": "spineIdRef",
                    "description": "Spine idref that defines the partial Cfi",
                    "type": "String"
                },
                {
                    "name": "cfi",
                    "description": "Partial CFI (withouth the indirection step) relative to the spine index",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Id of the highlight. must be unique",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "Name of the class selector rule in annotations stylesheet.\n\t\t\t\t\t\t\t\t\tThe style of the class will be applied to the created hightlight",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "Object representing CSS properties to be applied to the highlight.\n\t\t\t\t\t\t\t\t\te.g., to apply background color pass in: {'background-color': 'green'}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "partial cfi object of the created highlight",
                "type": "Object | undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 72,
            "description": "Creates a higlight based on the current selection",
            "params": [
                {
                    "name": "id",
                    "description": "id of the highlight. must be unique",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "- name of the class selector rule in annotations.css file.",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "- object representing CSS properties to be applied to the highlight.\ne.g., to apply background color pass this {'background-color': 'green'}",
                    "type": "Object"
                },
                {
                    "name": "clearSelection",
                    "description": "- set to true to clear the current selection\nafter it is highlighted",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "partial cfi object of the created highlight",
                "type": "Object | undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 88,
            "description": "Removes a given highlight",
            "params": [
                {
                    "name": "id",
                    "description": "The id associated with the highlight.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 100,
            "description": "Removes highlights of a given type",
            "params": [
                {
                    "name": "type",
                    "description": "type of the highlight.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 112,
            "description": "Client Rectangle",
            "typedef": "{object} ReadiumSDK.Views.ReaderView.ClientRect",
            "itemtype": "property",
            "name": "{number} width",
            "type": "Number",
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 121,
            "description": "Highlight Info",
            "typedef": "{object} ReadiumSDK.Views.ReaderView.HighlightInfo",
            "itemtype": "property",
            "name": "{string} selectedText - concatenation of highlight nodes' text",
            "type": "String",
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 132,
            "description": "Gets given highlight",
            "params": [
                {
                    "name": "id",
                    "description": "id of the highlight.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Object describing the highlight",
                "type": "ReadiumSDK.Views.ReaderView.HighlightInfo"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 143,
            "description": "Update annotation by the id, reapplies CSS styles to the existing annotaion",
            "itemtype": "property",
            "name": "type - annotation type (name of css class)",
            "type": "String",
            "class": "",
            "subprops": [
                {
                    "name": "id",
                    "description": "id of the annotation.",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "- object representing CSS properties to be applied to the annotation.\ne.g., to apply background color pass this {'background-color': 'green'}.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 155,
            "description": "Replace annotation with this id. Current annotation is removed and a new one is created.",
            "itemtype": "property",
            "name": "{string} type - annotation type (name of css class)",
            "type": "String",
            "class": "",
            "subprops": [
                {
                    "name": "id",
                    "description": "id of the annotation.",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "- object representing CSS properties to be applied to the annotation.\ne.g., to apply background color pass this {'background-color': 'green'}.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 169,
            "description": "Redraws all annotations",
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 176,
            "description": "Updates an annotation to use the supplied styles",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "styles",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 186,
            "description": "Updates an annotation view state, such as whether its hovered in or not.",
            "params": [
                {
                    "name": "id",
                    "description": "The id associated with the highlight.",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "The state type to be updated",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The state value to apply to the highlight",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 197,
            "description": "Updates an annotation view state for all views.",
            "params": [
                {
                    "name": "state",
                    "description": "The state type to be updated",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The state value to apply to the highlights",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/main.js",
            "line": 207,
            "description": "Gets a list of the visible midpoint positions of all annotations",
            "return": {
                "description": "",
                "type": "HTMLElement[]"
            },
            "class": ""
        },
        {
            "file": "plugins/highlights/manager.js",
            "line": 38,
            "params": [
                {
                    "name": "proxyObj",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/models/bookmark_data.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:218"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:282"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:370"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:404"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/cfi_navigation_logic.js:465"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:35"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:100"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:133"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:211"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:325"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:334"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:352"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:361"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:497"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:526"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:540"
        },
        {
            "message": "unknown tag: fires",
            "line": " js/views/reader_view.js:551"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:846"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:862"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:878"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:992"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1027"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1209"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1504"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1520"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1531"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1549"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1557"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1568"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1578"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1596"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1615"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1630"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1642"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1656"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/views/reader_view.js:1672"
        },
        {
            "message": "unknown tag: typedef",
            "line": " js/views/reader_view.js:1685"
        },
        {
            "message": "unknown tag: desc",
            "line": " js/globals.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:208"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:348"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:475"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:545"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:554"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:568"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:618"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:638"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:655"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " js/helpers.js:759"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:88"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:100"
        },
        {
            "message": "unknown tag: typedef",
            "line": " plugins/highlights/main.js:112"
        },
        {
            "message": "unknown tag: typedef",
            "line": " plugins/highlights/main.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:197"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " plugins/highlights/main.js:207"
        },
        {
            "message": "Missing item type\nserialize to string",
            "line": " js/models/bookmark_data.js:48"
        },
        {
            "message": "Missing item type\nDeserialize from string",
            "line": " js/models/bookmark_data.js:58"
        },
        {
            "message": "Missing item type",
            "line": " js/models/fixed_page_spread.js:27"
        },
        {
            "message": "Missing item type",
            "line": " js/models/media_overlay.js:30"
        },
        {
            "message": "Missing item type\nRepresentation of opening page request\nProvides the spine item to be opened and one of the following properties:\n spineItemPageIndex {Number},\n elementId {String},\n elementCfi {String},\n firstPage {bool},\n lastPage {bool}",
            "line": " js/models/page_open_request.js:27"
        },
        {
            "message": "Missing item type",
            "line": " js/models/smil_iterator.js:29"
        },
        {
            "message": "Missing item type",
            "line": " js/models/smil_model.js:30"
        },
        {
            "message": "Missing item type",
            "line": " js/models/style.js:27"
        },
        {
            "message": "Missing item type",
            "line": " js/models/style_collection.js:27"
        },
        {
            "message": "Missing item type",
            "line": " js/models/switches.js:28"
        },
        {
            "message": "Missing item type\nSetter fot epub Triggers",
            "line": " js/models/trigger.js:29"
        },
        {
            "message": "Missing item type",
            "line": " js/models/viewer_settings.js:27"
        },
        {
            "message": "Missing item type",
            "line": " js/views/audio_player.js:32"
        },
        {
            "message": "Missing item type\nCFI navigation helper class",
            "line": " js/views/cfi_navigation_logic.js:28"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:122"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:132"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:143"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:176"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:192"
        },
        {
            "message": "Missing item type\nNew (rectangle-based) algorithm, useful in multi-column layouts\n\nNote: the second param (props) is ignored intentionally\n(no need to use those in normalization)",
            "line": " js/views/cfi_navigation_logic.js:218"
        },
        {
            "message": "Missing item type\nFinds a page index (0-based) for a specific element.\nCalculations are based on rectangles retrieved with getClientRects() method.",
            "line": " js/views/cfi_navigation_logic.js:282"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:302"
        },
        {
            "message": "Missing item type\nFinds a page index (0-based) for a specific client rectangle.\nCalculations are based on viewport dimensions, offsets, and rectangle coordinates",
            "line": " js/views/cfi_navigation_logic.js:351"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:370"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:404"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:465"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:489"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:505"
        },
        {
            "message": "Missing item type",
            "line": " js/views/cfi_navigation_logic.js:561"
        },
        {
            "message": "Missing item type\nView for rendering fixed layout page spread",
            "line": " js/views/fixed_view.js:30"
        },
        {
            "message": "Missing item type",
            "line": " js/views/iframe_loader.js:30"
        },
        {
            "message": "Missing item type",
            "line": " js/views/internal_links_support.js:26"
        },
        {
            "message": "Missing item type",
            "line": " js/views/media_overlay_data_injector.js:26"
        },
        {
            "message": "Missing item type",
            "line": " js/views/media_overlay_element_highlighter.js:30"
        },
        {
            "message": "Missing item type",
            "line": " js/views/media_overlay_player.js:31"
        },
        {
            "message": "Missing item type\nRenders one page of fixed layout spread",
            "line": " js/views/one_page_view.js:30"
        },
        {
            "message": "Missing item type\nTop level View object. Interface for view manipulation public APIs",
            "line": " js/views/reader_view.js:44"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:93"
        },
        {
            "message": "Missing item type\nCreate a view based on the given view type.",
            "line": " js/views/reader_view.js:100"
        },
        {
            "message": "Missing item type\nReturns the current view type of the reader view",
            "line": " js/views/reader_view.js:133"
        },
        {
            "message": "Missing item type\nReturns a list of the currently active spine items",
            "line": " js/views/reader_view.js:294"
        },
        {
            "message": "Missing item type\nReturns the currently instanced viewer settings",
            "line": " js/views/reader_view.js:325"
        },
        {
            "message": "Missing item type\nReturns a data object based on the package document",
            "line": " js/views/reader_view.js:334"
        },
        {
            "message": "Missing item type\nReturns a representation of the spine as a data object, also acts as list of spine items",
            "line": " js/views/reader_view.js:343"
        },
        {
            "message": "Missing item type\nReturns the user CSS styles collection",
            "line": " js/views/reader_view.js:352"
        },
        {
            "message": "Missing item type\nTriggers the process of opening the book and requesting resources specified in the packageData",
            "line": " js/views/reader_view.js:372"
        },
        {
            "message": "Missing item type\nFlips the page from left to right.\nTakes to account the page progression direction to decide to flip to prev or next page.",
            "line": " js/views/reader_view.js:468"
        },
        {
            "message": "Missing item type\nFlips the page from right to left.\nTakes to account the page progression direction to decide to flip to prev or next page.",
            "line": " js/views/reader_view.js:482"
        },
        {
            "message": "Missing item type\nReturns if the current child view is an instance of a fixed page view",
            "line": " js/views/reader_view.js:497"
        },
        {
            "message": "Missing item type\nSet the zoom options.",
            "line": " js/views/reader_view.js:514"
        },
        {
            "message": "Missing item type\nReturns the current view scale as a percentage",
            "line": " js/views/reader_view.js:526"
        },
        {
            "message": "Missing item type\nUpdates reader view based on the settings specified in settingsData object",
            "line": " js/views/reader_view.js:551"
        },
        {
            "message": "Missing item type\nOpens the next page.",
            "line": " js/views/reader_view.js:611"
        },
        {
            "message": "Missing item type\nOpens the previous page.",
            "line": " js/views/reader_view.js:648"
        },
        {
            "message": "Missing item type\nOpens the page of the spine item with element with provided cfi",
            "line": " js/views/reader_view.js:703"
        },
        {
            "message": "Missing item type\nOpens specified page index of the current spine item",
            "line": " js/views/reader_view.js:728"
        },
        {
            "message": "Missing item type\nOpens page index of the spine item with idref provided",
            "line": " js/views/reader_view.js:779"
        },
        {
            "message": "Missing item type\nSet CSS Styles to the reader container",
            "line": " js/views/reader_view.js:804"
        },
        {
            "message": "Missing item type\nSet CSS Styles to the content documents",
            "line": " js/views/reader_view.js:827"
        },
        {
            "message": "Missing item type\nGets an element from active content documents based on a query selector.",
            "line": " js/views/reader_view.js:846"
        },
        {
            "message": "Missing item type\nGets an element from active content documents based on an element id.",
            "line": " js/views/reader_view.js:862"
        },
        {
            "message": "Missing item type\nGets an element from active content documents based on a content CFI.",
            "line": " js/views/reader_view.js:878"
        },
        {
            "message": "Missing item type\nOpens a content url from a media player context",
            "line": " js/views/reader_view.js:912"
        },
        {
            "message": "Missing item type\nOpens the content document specified by the url",
            "line": " js/views/reader_view.js:924"
        },
        {
            "message": "Missing item type\nOpens the page of the spine item with element with provided cfi",
            "line": " js/views/reader_view.js:966"
        },
        {
            "message": "Missing item type\nReturns the bookmark associated with currently opened page.",
            "line": " js/views/reader_view.js:992"
        },
        {
            "message": "Missing item type\nResets all the custom styles set by setStyle callers at runtime",
            "line": " js/views/reader_view.js:1003"
        },
        {
            "message": "Missing item type\nResets all the custom styles set by setBookStyle callers at runtime",
            "line": " js/views/reader_view.js:1013"
        },
        {
            "message": "Missing item type\nReturns true if media overlay available for one of the open pages.",
            "line": " js/views/reader_view.js:1027"
        },
        {
            "message": "Missing item type\nStarts/Stop playing media overlay on current page",
            "line": " js/views/reader_view.js:1051"
        },
        {
            "message": "Missing item type\nPlays next fragment media overlay",
            "line": " js/views/reader_view.js:1060"
        },
        {
            "message": "Missing item type\nPlays previous fragment media overlay",
            "line": " js/views/reader_view.js:1069"
        },
        {
            "message": "Missing item type\nPlays next available fragment media overlay that is outside of the current escapable scope",
            "line": " js/views/reader_view.js:1078"
        },
        {
            "message": "Missing item type\nEnd media overlay TTS",
            "line": " js/views/reader_view.js:1086"
        },
        {
            "message": "Missing item type\nPause currently playing media overlays.",
            "line": " js/views/reader_view.js:1095"
        },
        {
            "message": "Missing item type\nStart/Resume playback of media overlays.",
            "line": " js/views/reader_view.js:1103"
        },
        {
            "message": "Missing item type\nDetermine if media overlays are currently playing.",
            "line": " js/views/reader_view.js:1111"
        },
        {
            "message": "Missing item type\nGet the first visible media overlay element from the currently active content document(s)",
            "line": " js/views/reader_view.js:1131"
        },
        {
            "message": "Missing item type\nUsed to jump to an element to make sure it is visible when a content document is paginated",
            "line": " js/views/reader_view.js:1144"
        },
        {
            "message": "Missing item type\nLets user to subscribe to iframe's window events",
            "line": " js/views/reader_view.js:1209"
        },
        {
            "message": "Missing item type\nGets all elements from active content documents based on a query selector.",
            "line": " js/views/reader_view.js:1504"
        },
        {
            "message": "Missing item type\nDetermine if an element is visible on the active content documents",
            "line": " js/views/reader_view.js:1520"
        },
        {
            "message": "Missing item type\nResolve a range CFI into an object containing info about it.",
            "line": " js/views/reader_view.js:1531"
        },
        {
            "message": "Missing item type\nGet the pagination info from the current view",
            "line": " js/views/reader_view.js:1549"
        },
        {
            "message": "Missing item type\nGet CFI of the first element visible in the viewport",
            "line": " js/views/reader_view.js:1557"
        },
        {
            "message": "Missing item type\nGet CFI of the last element visible in the viewport",
            "line": " js/views/reader_view.js:1568"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1578"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1596"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1615"
        },
        {
            "message": "Missing item type\nGenerate range CFI from DOM range",
            "line": " js/views/reader_view.js:1630"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1642"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1656"
        },
        {
            "message": "Missing item type",
            "line": " js/views/reader_view.js:1672"
        },
        {
            "message": "Missing item type\nRenders reflowable content using CSS columns",
            "line": " js/views/reflowable_view.js:35"
        },
        {
            "message": "Missing item type\nRenders content inside a scrollable view port",
            "line": " js/views/scroll_view.js:30"
        },
        {
            "message": "Missing item type\nTop level ReadiumSDK namespace",
            "line": " js/globals.js:32"
        },
        {
            "message": "Missing item type\nCurrent version of the JS SDK",
            "line": " js/globals.js:38"
        },
        {
            "message": "Missing item type",
            "line": " js/globals.js:46"
        },
        {
            "message": "Missing item type\nLandscape Orientation",
            "line": " js/globals.js:50"
        },
        {
            "message": "Missing item type\nPortrait Orientation",
            "line": " js/globals.js:54"
        },
        {
            "message": "Missing item type",
            "line": " js/globals.js:59"
        },
        {
            "message": "Missing item type\nInternal Events",
            "line": " js/globals.js:117"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:76"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:93"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:117"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:172"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:208"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:318"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:348"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:359"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:371"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:389"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:416"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:475"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:545"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:554"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:568"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:578"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:593"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:618"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:638"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:655"
        },
        {
            "message": "Missing item type",
            "line": " js/helpers.js:759"
        },
        {
            "message": "Missing item type\nA  plugins controller used to easily add plugins from the host app, eg.\nReadiumSDK.Plugins.register(\"footnotes\", function(api){ ... });",
            "line": " js/plugins_controller.js:34"
        },
        {
            "message": "Missing item type\nReturns current selection partial Cfi, useful for workflows that need to check whether the user has selected something.",
            "line": " plugins/highlights/main.js:46"
        },
        {
            "message": "Missing item type\nCreates a higlight based on given parameters",
            "line": " plugins/highlights/main.js:55"
        },
        {
            "message": "Missing item type\nCreates a higlight based on the current selection",
            "line": " plugins/highlights/main.js:72"
        },
        {
            "message": "Missing item type\nRemoves a given highlight",
            "line": " plugins/highlights/main.js:88"
        },
        {
            "message": "Missing item type\nRemoves highlights of a given type",
            "line": " plugins/highlights/main.js:100"
        },
        {
            "message": "Missing item type\nGets given highlight",
            "line": " plugins/highlights/main.js:132"
        },
        {
            "message": "Missing item type\nRedraws all annotations",
            "line": " plugins/highlights/main.js:169"
        },
        {
            "message": "Missing item type\nUpdates an annotation to use the supplied styles",
            "line": " plugins/highlights/main.js:176"
        },
        {
            "message": "Missing item type\nUpdates an annotation view state, such as whether its hovered in or not.",
            "line": " plugins/highlights/main.js:186"
        },
        {
            "message": "Missing item type\nUpdates an annotation view state for all views.",
            "line": " plugins/highlights/main.js:197"
        },
        {
            "message": "Missing item type\nGets a list of the visible midpoint positions of all annotations",
            "line": " plugins/highlights/main.js:207"
        },
        {
            "message": "Missing item type",
            "line": " plugins/highlights/manager.js:38"
        }
    ]
}