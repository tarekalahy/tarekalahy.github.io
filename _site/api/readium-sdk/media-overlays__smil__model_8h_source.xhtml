<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/media-overlays_smil_model.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('media-overlays__smil__model_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">media-overlays_smil_model.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="media-overlays__smil__model_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  media-overlays_smil_model.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Daniel Weck on 2013-09-15.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef ePub3_mo_smil_model_h</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ePub3_mo_smil_model_h</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;ePub3/epub3.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="owned__by_8h.xhtml">ePub3/utilities/owned_by.h</a>&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;ePub3/manifest.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/node.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="media-overlays__smil__data_8h.xhtml">media-overlays_smil_data.h</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="package_8h.xhtml">package.h</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">//#include &lt;ePub3/utilities/make_unique.h&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">//std::unique_ptr&lt;KLASS&gt; obj = make_unique&lt;KLASS&gt;(constructor_params);</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keyword">class </span><a class="code" href="class_package.xhtml">Package</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keyword">class </span><a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml">   50</a></span>&#160;        <span class="keyword">class </span><a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a> : <span class="keyword">public</span> std::enable_shared_from_this&lt;MediaOverlaysSmilModel&gt;, <span class="keyword">public</span> <a class="code" href="class_owned_by.xhtml">OwnedBy</a>&lt;Package&gt;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#if EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor"></span>            , <span class="keyword">public</span> NativeBridge</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor"></span>        {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a>() <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a>(<span class="keyword">const</span> <a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a> &amp;) <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a>(<a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a> &amp;&amp;) <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            uint32_t _totalDuration; <span class="comment">//whole milliseconds (resolution = 1ms)</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <a class="code" href="classshared__vector.xhtml">shared_vector&lt;SMILData&gt;</a> _smilDatas;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Function&gt;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keyword">inline</span> <a class="code" href="__config_8h.xhtml#ac032d233a8ebfcd82fd49d0824eefb18">FORCE_INLINE</a></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            _Function ForEachSmilData(_Function __f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">            </span>{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                <span class="comment">// the _smilDatas vector iterator does not make a copy of the smart pointer (NO reference count++),</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="comment">// the std::shared_ptr&lt;SMILData&gt; object is not passed as value, but as reference &amp;</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">return</span> std::for_each(_smilDatas.begin(), _smilDatas.end(), __f);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <a class="code" href="class_media_overlays_smil_model.xhtml">MediaOverlaysSmilModel</a>(<span class="keyword">const</span> std::shared_ptr&lt;Package&gt; &amp; package);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keyword">virtual</span> <a class="code" href="class_media_overlays_smil_model.xhtml#af3eb5dd35a41214b72f98322c671efed">~MediaOverlaysSmilModel</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="class_media_overlays_smil_model.xhtml#ae6ad2b001550068c7f45454b2e80aaf9">Initialize</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; <a class="code" href="class_media_overlays_smil_model.xhtml#af534180fca28c0e08f53a8e2d1e6435a">Narrator</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; <a class="code" href="class_media_overlays_smil_model.xhtml#a53c233724447edee8ecbaa0fbad714e6">ActiveClass</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> &amp; <a class="code" href="class_media_overlays_smil_model.xhtml#ac702262191f59ae0eb7ad5fc613edd9e">PlaybackActiveClass</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#a604ba61b6c32a76d1e71c2a7a7492cd2">  100</a></span>&#160;            uint32_t <a class="code" href="class_media_overlays_smil_model.xhtml#a604ba61b6c32a76d1e71c2a7a7492cd2">DurationMilliseconds_Metadata</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">            </span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keywordflow">return</span> _totalDuration;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keyword">const</span> uint32_t <a class="code" href="class_media_overlays_smil_model.xhtml#ad942a3fdad92c8da41c4af69873e7691">DurationMilliseconds_Calculated</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#ac8c2dcee85407e61aaef37ee358c4418">  111</a></span>&#160;            std::vector&lt;std::shared_ptr&lt;SMILData&gt;&gt;::size_type <a class="code" href="class_media_overlays_smil_model.xhtml#ac8c2dcee85407e61aaef37ee358c4418">GetSmilCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">            </span>{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">return</span> _smilDatas.size();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#ae0c70cc43e27f05cf10c61ee0b8e0db9">  118</a></span>&#160;            <span class="keyword">const</span> std::shared_ptr&lt;SMILData&gt; <a class="code" href="class_media_overlays_smil_model.xhtml#ae0c70cc43e27f05cf10c61ee0b8e0db9">GetSmil</a>(std::vector&lt;std::shared_ptr&lt;SMILData&gt;&gt;::size_type i)<span class="keyword"> const</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">            </span>{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">if</span> (i &gt;= _smilDatas.size())</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;SMILData&gt; smilData = _smilDatas.at(i); <span class="comment">// does not make a copy of the smart pointer (NO reference count++)</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">return</span> smilData;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">double</span> <a class="code" href="class_media_overlays_smil_model.xhtml#a0da9fe4b8c22d2480bcf314d504a092c">PositionToPercent</a>(std::vector&lt;std::shared_ptr&lt;SMILData&gt;&gt;::size_type  smilIndex, uint32_t parIndex, uint32_t milliseconds) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="class_media_overlays_smil_model.xhtml#a805a34ffcf4b8b45d627fb4a8c191bca">PercentToPosition</a>(<span class="keywordtype">double</span> percent, <a class="code" href="media-overlays__smil__data_8h.xhtml#a25b6d3dc4e33d6557e5b28b27804fba7">SMILDataPtr</a> &amp; smilData, uint32_t &amp; smilIndex, shared_ptr&lt;const SMILData::Parallel&gt;&amp; par, uint32_t &amp; parIndex, uint32_t &amp; milliseconds) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment">//EPUB3_EXPORT</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#a08bbd0fbf767ecf2828911b0b33535ea">  139</a></span>&#160;            <span class="keyword">static</span> std::vector&lt;string&gt;::size_type <a class="code" href="class_media_overlays_smil_model.xhtml#a08bbd0fbf767ecf2828911b0b33535ea">GetSkippablesCount</a>()</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">return</span> _Skippables.size();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">//EPUB3_EXPORT</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#a3d203c32b7e932396ed4fe61c81dd513">  146</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">string</span> <a class="code" href="class_media_overlays_smil_model.xhtml#a3d203c32b7e932396ed4fe61c81dd513">GetSkippable</a>(std::vector&lt;string&gt;::size_type i)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">if</span> (i &gt;= _Skippables.size())</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordtype">string</span> str = _Skippables.at(i);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">return</span> str;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="comment">//EPUB3_EXPORT</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#a361d670dcc733a42a7b6127f2115bced">  159</a></span>&#160;            <span class="keyword">static</span> std::vector&lt;string&gt;::size_type <a class="code" href="class_media_overlays_smil_model.xhtml#a361d670dcc733a42a7b6127f2115bced">GetEscapablesCount</a>()</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">return</span> _Escapables.size();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="comment">//EPUB3_EXPORT</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="class_media_overlays_smil_model.xhtml#af03b73e41caa32b7b9d53651ab90d44b">  166</a></span>&#160;            <span class="keyword">static</span> <span class="keywordtype">string</span> <a class="code" href="class_media_overlays_smil_model.xhtml#af03b73e41caa32b7b9d53651ab90d44b">GetEscapable</a>(std::vector&lt;string&gt;::size_type i)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">if</span> (i &gt;= _Escapables.size())</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordtype">string</span> str = _Escapables.at(i);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="keywordflow">return</span> str;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;string&gt; _Skippables;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keyword">static</span> <span class="keyword">const</span> std::vector&lt;string&gt; _Escapables;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordtype">bool</span> _excludeAudioDuration;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordtype">void</span> resetData();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordtype">void</span> populateData();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordtype">void</span> parseMetadata();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            uint32_t parseSMILs();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            uint32_t parseSMIL(<a class="code" href="media-overlays__smil__data_8h.xhtml#a25b6d3dc4e33d6557e5b28b27804fba7">SMILDataPtr</a> smilData, shared_ptr&lt;SMILData::Sequence&gt; sequence, shared_ptr&lt;SMILData::Parallel&gt; parallel, <span class="keyword">const</span> <a class="code" href="_forward_8h.xhtml#abca75900ee37a8e12719c652ba3e23f2">ManifestItemPtr</a> item, shared_ptr&lt;xml::Node&gt; element, std::map&lt;std::shared_ptr&lt;ManifestItem&gt;, <span class="keywordtype">string</span>&gt; &amp; cache_manifestItemToAbsolutePath, std::map&lt;<span class="keywordtype">string</span>, std::shared_ptr&lt;ManifestItem&gt;&gt; &amp; cache_smilRelativePathToManifestItem); <span class="comment">// recursive</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            shared_ptr&lt;const SMILData::Parallel&gt; <a class="code" href="class_media_overlays_smil_model.xhtml#a93121f456e92fbe0d56be9ef89d2bf6a">ParallelAt</a>(uint32_t timeMilliseconds) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        };</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        EPUB3_END_NAMESPACE</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(ePub3_mo_smil_model_h) */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="media-overlays__smil__model_8h.xhtml">media-overlays_smil_model.h</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
