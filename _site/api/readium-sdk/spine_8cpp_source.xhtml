<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/spine.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('spine_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">spine.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="spine_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  spine.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-11-29.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="spine_8h.xhtml">spine.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="package_8h.xhtml">package.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include REGEX_INCLUDE</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_spine_item.xhtml#a2b19c8e2b48786686cbd6508710507cd">SpineItem::PageSpreadRightPropertyIRI</a>(<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-right&quot;</span>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> <a class="code" href="class_spine_item.xhtml#aa8e86a6343e6339df02bc8f984d1645d">SpineItem::PageSpreadLeftPropertyIRI</a>(<span class="stringliteral">&quot;http://idpf.org/epub/vocab/package/#page-spread-left&quot;</span>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a1a33adfa30a826c5d70d42fbf6d03a32">   30</a></span>&#160;SpineItem::SpineItem(<span class="keyword">const</span> shared_ptr&lt;Package&gt;&amp; owner) : <a class="code" href="class_owned_by.xhtml">OwnedBy</a>(owner), <a class="code" href="class_property_holder.xhtml">PropertyHolder</a>(owner), _idref(), _linear(true), _next(), _prev()</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a38db2feaa90e03dcf5e0b8e612e88619">   33</a></span>&#160;SpineItem::SpineItem(<a class="code" href="class_spine_item.xhtml">SpineItem</a>&amp;&amp; o) : <a class="code" href="class_owned_by.xhtml">OwnedBy</a>(std::move(o)), <a class="code" href="class_property_holder.xhtml">PropertyHolder</a>(std::move(o)), <a class="code" href="class_x_m_l_identifiable.xhtml">XMLIdentifiable</a>(std::move(o)), _idref(std::move(o._idref)), _linear(o._linear), _prev(std::move(o._prev)), _next(std::move(o._next))</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a9448bf1eeb30c712fabcc76bfb2543d7">   36</a></span>&#160;<a class="code" href="class_spine_item.xhtml#a9448bf1eeb30c712fabcc76bfb2543d7">SpineItem::~SpineItem</a>()</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a627d3d7a424c3144477aad692115b820">   39</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_spine_item.xhtml#a627d3d7a424c3144477aad692115b820">SpineItem::ParseXML</a>(shared_ptr&lt;xml::Node&gt; node)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="class_x_m_l_identifiable.xhtml#af68c38400011ff0dfa1ee4ad7a187d72">SetXMLIdentifier</a>(_getProp(node, <span class="stringliteral">&quot;id&quot;</span>));</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="class_spine_item.xhtml#a20225795b545094933bad9b193b81d4c" title="The idref value targetting a ManifestItem.">_idref</a> = _getProp(node, <span class="stringliteral">&quot;idref&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">if</span> ( _getProp(node, <span class="stringliteral">&quot;linear&quot;</span>).tolower() == <span class="stringliteral">&quot;no&quot;</span> )</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="class_spine_item.xhtml#ab2954462a44c2ffa9cd33e5502f37e34" title="true if the item is linear (the default).">_linear</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">auto</span> holder = CastPtr&lt;PropertyHolder&gt;();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">string</span> properties = _getProp(node, <span class="stringliteral">&quot;properties&quot;</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> ( !properties.empty() )</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">for</span> ( <span class="keyword">auto</span>&amp; property : properties.split(REGEX_NS::regex(<span class="stringliteral">&quot;,?\\s+&quot;</span>)) )</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> prop = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">Property::New</a>(holder);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            prop-&gt;SetPropertyIdentifier(this-&gt;<a class="code" href="class_property_holder.xhtml#a0b197fcac3b27605336472c6e5696314">PropertyIRIFromString</a>(property));</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            this-&gt;<a class="code" href="class_property_holder.xhtml#a3c6031a4012e0b2af9f240c2e4eeef30">AddProperty</a>(prop);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a4d1e007a85433dffd1cc38b5ede834a9">   60</a></span>&#160;shared_ptr&lt;ManifestItem&gt; <a class="code" href="class_spine_item.xhtml#a4d1e007a85433dffd1cc38b5ede834a9" title="Obtains the manifest item corresponding to this spine item.">SpineItem::ManifestItem</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">auto</span> <span class="keyword">package </span>= this-&gt;Owner();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span> ( !package )</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> package-&gt;ManifestItemWithID(<a class="code" href="class_spine_item.xhtml#a221f27e138cc99015ae2914b8fe5633c" title="Returns the idref identifying the manifest item for this spine item.">Idref</a>());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#abdda433f612ac0a9952112e5147c6736">   67</a></span>&#160;<a class="code" href="property_8h.xhtml#ae2f391a1d1caab688656cb24435ed26a" title="Enumeration for page spreads.">PageSpread</a> <a class="code" href="class_spine_item.xhtml#abdda433f612ac0a9952112e5147c6736" title="Determine the spread location for this item (or for the first page thereof).">SpineItem::Spread</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_property_holder.xhtml#ae5246c327c0ed4081898d9b81556e11e">NumberOfProperties</a>() == 0 )</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> PageSpread::Automatic;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">bool</span> left = <span class="keyword">false</span>, right = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="class_property_holder.xhtml#a2df7c4aff01b29b1c1637870e66585c6">ForEachProperty</a>([&amp;](<a class="code" href="_forward_8h.xhtml#aa3e1ae537381203b433fd5a56718456f">PropertyPtr</a> item) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="comment">// return early if both set</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> ( left &amp;&amp; right )</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> ( !left &amp;&amp; item-&gt;PropertyIdentifier() == <a class="code" href="class_spine_item.xhtml#aa8e86a6343e6339df02bc8f984d1645d">PageSpreadLeftPropertyIRI</a> )</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            left = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( !right &amp;&amp; item-&gt;PropertyIdentifier() == <a class="code" href="class_spine_item.xhtml#a2b19c8e2b48786686cbd6508710507cd">PageSpreadRightPropertyIRI</a> )</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            right = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    });</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// only one (or neither) set here</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span> ( left )</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> PageSpread::Left;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> ( right )</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> PageSpread::Right;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> PageSpread::Automatic;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a954937d1639ee48243b2a697ad6f4078">   92</a></span>&#160;shared_ptr&lt;SpineItem&gt; <a class="code" href="class_spine_item.xhtml#a954937d1639ee48243b2a697ad6f4078" title="Retrieves a pointer to the next linear item in the spine, or nullptr.">SpineItem::NextStep</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">auto</span> n = <a class="code" href="class_spine_item.xhtml#a6132a20720fac0bc89f4fb4bc98829a7" title="Retrieves a pointer to the spine item following this one, or nullptr.">Next</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">while</span> ( n != <span class="keyword">nullptr</span> &amp;&amp; n-&gt;Linear() == false )</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        n = n-&gt;Next();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">return</span> n;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a9d5963f19a7a5f2f22b17bfbb9fa7ea2">   99</a></span>&#160;shared_ptr&lt;SpineItem&gt; <a class="code" href="class_spine_item.xhtml#a9d5963f19a7a5f2f22b17bfbb9fa7ea2" title="Retrieves a pointer to the previous linear item in the spine, or nullptr.">SpineItem::PriorStep</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">auto</span> p = <a class="code" href="class_spine_item.xhtml#a5a20e12488b6e69b3d6f3b6e60181990" title="Retrieves a pointer to the spine item preceding this one, or nullptr.">Previous</a>();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">while</span> ( p != <span class="keyword">nullptr</span> &amp;&amp; p-&gt;Linear() == false )</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        p = p-&gt;Previous();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> p;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#a0d2201cd68284ea518ec86ce11cfe522">  106</a></span>&#160;shared_ptr&lt;SpineItem&gt; <a class="code" href="class_spine_item.xhtml#a0d2201cd68284ea518ec86ce11cfe522">SpineItem::at</a>(ssize_t idx)<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="_forward_8h.xhtml#a4a609b645909cf169551b143c36443d5">SpineItemPtr</a> result = std::const_pointer_cast&lt;<a class="code" href="class_spine_item.xhtml">SpineItem</a>&gt;(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    ssize_t i = idx;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> ( i &gt; 0 )</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">while</span> ( result != <span class="keyword">nullptr</span> &amp;&amp; i &gt; 0 )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            result = result-&gt;<a class="code" href="class_spine_item.xhtml#a6132a20720fac0bc89f4fb4bc98829a7" title="Retrieves a pointer to the spine item following this one, or nullptr.">Next</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            i--;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( idx &lt; 0 )</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">while</span> ( result != <span class="keyword">nullptr</span> &amp;&amp; i &lt; 0 )</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            result = result-&gt;Previous();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            i++;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="comment">// Q: maybe just return nullptr?</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">if</span> ( result == <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">throw</span> std::out_of_range(_Str(<span class="stringliteral">&quot;Index &quot;</span>, i, <span class="stringliteral">&quot; is out of range&quot;</span>));</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="code" href="class_spine_item.xhtml#acbf3f86597cbaf83198e3d104bcf0665">  135</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_spine_item.xhtml#acbf3f86597cbaf83198e3d104bcf0665">SpineItem::SetNextItem</a>(<span class="keyword">const</span> shared_ptr&lt;SpineItem&gt;&amp; next)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    next-&gt;_next = <a class="code" href="class_spine_item.xhtml#a5a8dcd1e41387de59f64020505737f28" title="The SpineItem following this one in the spine.">_next</a>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    next-&gt;_prev = enable_shared_from_this&lt;SpineItem&gt;::shared_from_this();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="class_spine_item.xhtml#a5a8dcd1e41387de59f64020505737f28" title="The SpineItem following this one in the spine.">_next</a> = next;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="spine_8cpp.xhtml">spine.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
