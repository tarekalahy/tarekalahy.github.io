<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/nav_table.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('nav__table_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">nav_table.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="nav__table_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  nav_table.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-12-11.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="nav__table_8h.xhtml">nav_table.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="xpath__wrangler_8h.xhtml">xpath_wrangler.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="package_8h.xhtml">package.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="error__handler_8h.xhtml">error_handler.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// upside: nice syntax for checking</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// downside: operator[] always creates a new item</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span><span class="keyword">static</span> std::map&lt;string, bool&gt; AllowedRootNodeNames = {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    { <span class="stringliteral">&quot;nav&quot;</span>, <span class="keyword">true</span> }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;};</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="code" href="nav__table_8cpp.xhtml#abc97173d871bd2e7b3ae48ab6c9b256d">   35</a></span>&#160;<span class="preprocessor"></span><span class="keyword">typedef</span> std::pair&lt;string, bool&gt; <a class="code" href="nav__table_8cpp.xhtml#abc97173d871bd2e7b3ae48ab6c9b256d">__name_pair_t</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">static</span> <a class="code" href="nav__table_8cpp.xhtml#abc97173d871bd2e7b3ae48ab6c9b256d">__name_pair_t</a> __name_pairs[1] = {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="nav__table_8cpp.xhtml#abc97173d871bd2e7b3ae48ab6c9b256d">__name_pair_t</a>(<span class="stringliteral">&quot;nav&quot;</span>, <span class="keyword">true</span>)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">static</span> std::map&lt;string, bool&gt; AllowedRootNodeNames(&amp;__name_pairs[0], &amp;__name_pairs[1]);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> NCXNavLabelText(shared_ptr&lt;xml::Node&gt; navLabel, <span class="keywordtype">string</span>&amp; outString)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">auto</span> textNode = navLabel-&gt;FirstElementChild();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">string</span> cName = textNode-&gt;Name();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">while</span> (<span class="keywordtype">bool</span>(textNode) &amp;&amp; cName != <span class="stringliteral">&quot;text&quot;</span>) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        textNode = textNode-&gt;NextElementSibling();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (<span class="keywordtype">bool</span>(textNode))</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        outString = textNode-&gt;StringValue();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        outString.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> NCXContentHref(shared_ptr&lt;xml::Node&gt; content, <span class="keywordtype">string</span>&amp; outString)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    xml::string val = content-&gt;AttributeValue((<span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="stringliteral">&quot;src&quot;</span>, (<span class="keyword">const</span> <span class="keywordtype">char</span>*)<a class="code" href="epub3_8h.xhtml#a99b90f26ad307c8dcbf0deac1074f7e1">NCXNamespaceURI</a>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">if</span> (val.empty())</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        val = content-&gt;AttributeValue((<span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="stringliteral">&quot;src&quot;</span>, (<span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    outString = val;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#a6b72fa11cf2775aeeb20d3cfca7c858c">   64</a></span>&#160;NavigationTable::NavigationTable(shared_ptr&lt;Package&gt;&amp; owner, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; sourceHref)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    : <a class="code" href="class_owned_by.xhtml">OwnedBy</a>(owner), _type(), _title(), _sourceHref(sourceHref)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#a89ec6581b0d9b185028d427501b0fce0">   68</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_navigation_table.xhtml#a89ec6581b0d9b185028d427501b0fce0">NavigationTable::ParseXML</a>(shared_ptr&lt;xml::Node&gt; node)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span> ( node == <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">string</span> name(node-&gt;Name());</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> ( AllowedRootNodeNames.find(name) == AllowedRootNodeNames.end() )</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = _getProp(node, <span class="stringliteral">&quot;type&quot;</span>, <a class="code" href="epub3_8h.xhtml#ac70f93b7cfc1e93cecbd597fe5f7939c">ePub3NamespaceURI</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a>.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(node-&gt;Document(), {{ <span class="stringliteral">&quot;epub&quot;</span>, <a class="code" href="epub3_8h.xhtml#ac70f93b7cfc1e93cecbd597fe5f7939c">ePub3NamespaceURI</a> }, { <span class="stringliteral">&quot;html&quot;</span>, <a class="code" href="epub3_8h.xhtml#a9402cd21033b6adf193f3131401811b3">XHTMLNamespaceURI</a> }}); <span class="comment">// goddamn I love C++11 initializer list constructors</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    __ns[<span class="stringliteral">&quot;epub&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ac70f93b7cfc1e93cecbd597fe5f7939c">ePub3NamespaceURI</a>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(node-&gt;doc, __ns);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor"></span>    xpath.<a class="code" href="class_x_path_wrangler.xhtml#a86cf629f42ade68ab57fa5feda4520e8">NameDefaultNamespace</a>(<span class="stringliteral">&quot;html&quot;</span>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// look for optional &lt;h2&gt; title</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Q: Should we fail on finding multiple &lt;h2&gt; tags here?</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#if EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor"></span>    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> h2nodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;./html:h2&quot;</span>, node);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">if</span> (!h2nodes.empty()){</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> = std::move(h2nodes[0]-&gt;FirstChild()-&gt;StringValue());</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor"></span>    <span class="keyword">auto</span> strings = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a31f1027104151bf01f40403c2180925e">Strings</a>(<span class="stringliteral">&quot;./html:h2[1]/text()&quot;</span>, node);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> ( !strings.empty() )</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> = std::move(strings[0]);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">// load List Elements from a single Ordered List</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="comment">// first: confirm there&#39;s a single list</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> nodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;./html:ol&quot;</span>, node);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> ( nodes.empty() )</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> ( nodes.size() != 1 )</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a8f4cbd362c82cf620832232696a5b08b">LoadChildElements</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>(), nodes[0]);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#ab20fa58e323f71b4e707f1209baf5d29">  116</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_navigation_table.xhtml#ab20fa58e323f71b4e707f1209baf5d29">NavigationTable::ParseNCXNavMap</a>(shared_ptr&lt;xml::Node&gt; node, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; title)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = <span class="stringliteral">&quot;toc&quot;</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> = title;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> navPoint = node-&gt;FirstElementChild(); bool(navPoint); navPoint = navPoint-&gt;NextElementSibling())</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordtype">string</span> cName(navPoint-&gt;Name());</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">if</span> (cName != <span class="stringliteral">&quot;navPoint&quot;</span>)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            HandleError(EPUBError::NavElementUnexpectedType, <span class="stringliteral">&quot;Found a non-navPoint element inside an NCX navMap&quot;</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">LoadChildNavPoint</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>(), navPoint);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#ac1049d2cda98cac277dd50eeb28f38d3">  135</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_navigation_table.xhtml#ac1049d2cda98cac277dd50eeb28f38d3">NavigationTable::ParseNCXPageList</a>(shared_ptr&lt;xml::Node&gt; pNode)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = <span class="stringliteral">&quot;page-list&quot;</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> = <span class="stringliteral">&quot;Page List&quot;</span>;   <span class="comment">// TODO: localization</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> sub = pNode-&gt;FirstElementChild(); bool(sub); sub = sub-&gt;NextElementSibling())</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordtype">string</span> cName(sub-&gt;Name());</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">if</span> (cName != <span class="stringliteral">&quot;pageTarget&quot;</span>)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            HandleError(EPUBError::NavElementUnexpectedType, <span class="stringliteral">&quot;Found a non-pageTarget element inside an NCX pageList&quot;</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">LoadChildNavPoint</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>(), sub);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#aac3324feb03fdceeaa00ff40cb39f493">  154</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_navigation_table.xhtml#aac3324feb03fdceeaa00ff40cb39f493">NavigationTable::ParseNCXNavList</a>(shared_ptr&lt;xml::Node&gt; pNode)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> sub = pNode-&gt;FirstElementChild(); bool(sub); sub = sub-&gt;NextElementSibling())</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordtype">string</span> cName(sub-&gt;Name());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">if</span> (cName == <span class="stringliteral">&quot;navLabel&quot;</span>)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a>.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>())</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                NCXNavLabelText(sub, <a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> == <span class="stringliteral">&quot;List of Illustrations&quot;</span>)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = <span class="stringliteral">&quot;loi&quot;</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> == <span class="stringliteral">&quot;List of Tables&quot;</span>)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = <span class="stringliteral">&quot;lot&quot;</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="class_navigation_table.xhtml#a9f644ee7d78bca4f30ce2c0923fd6aaa" title="The table&#39;s title. Optional.">_title</a> == <span class="stringliteral">&quot;List of Figures&quot;</span>)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    <a class="code" href="class_navigation_table.xhtml#a8c19805663eab538d21bf436f111bb09" title="The type qualifier (toc, lot, loi, ...) for this table.">_type</a> = <span class="stringliteral">&quot;lof&quot;</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                HandleError(EPUBError::NavListElementInvalidChild, <span class="stringliteral">&quot;Multiple navLabel elements within an NCX navList&quot;</span>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">if</span> (cName != <span class="stringliteral">&quot;navTarget&quot;</span>)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            HandleError(EPUBError::NavElementUnexpectedType, <span class="stringliteral">&quot;Found a non-pageTarget element inside an NCX pageList&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">LoadChildNavPoint</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>(), sub);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#a8f4cbd362c82cf620832232696a5b08b">  193</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_navigation_table.xhtml#a8f4cbd362c82cf620832232696a5b08b">NavigationTable::LoadChildElements</a>(shared_ptr&lt;NavigationElement&gt; pElement, shared_ptr&lt;xml::Node&gt; olNode)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(olNode-&gt;Document(), {{<span class="stringliteral">&quot;epub&quot;</span>, <a class="code" href="epub3_8h.xhtml#ac70f93b7cfc1e93cecbd597fe5f7939c">ePub3NamespaceURI</a>},{<span class="stringliteral">&quot;html&quot;</span>, <a class="code" href="epub3_8h.xhtml#a9402cd21033b6adf193f3131401811b3">XHTMLNamespaceURI</a>}});</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    __ns[<span class="stringliteral">&quot;ePub3&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ac70f93b7cfc1e93cecbd597fe5f7939c">ePub3NamespaceURI</a>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(olNode-&gt;doc, __ns);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor"></span>    xpath.<a class="code" href="class_x_path_wrangler.xhtml#a86cf629f42ade68ab57fa5feda4520e8">NameDefaultNamespace</a>(<span class="stringliteral">&quot;html&quot;</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> liNodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;./html:li&quot;</span>, olNode);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">if</span> ( liNodes.empty() )</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="comment">// test for erroneous EPUB NavDoc (nested ol)</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> olNodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;./html:ol&quot;</span>, olNode);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">if</span> ( olNodes.size() &gt; 0 )</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            olNode = olNodes[0];</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            liNodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;./html:li&quot;</span>, olNode);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> liNode : liNodes )</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keyword">auto</span> childElement = <a class="code" href="class_navigation_table.xhtml#a11ae86ee5e9b8e647bfa1393d8a86031">BuildNavigationPoint</a>(liNode);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">if</span> ( childElement )</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            pElement-&gt;AppendChild(childElement);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">  225</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">NavigationTable::LoadChildNavPoint</a>(shared_ptr&lt;NavigationElement&gt; pElement, shared_ptr&lt;xml::Node&gt; node)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">auto</span> childElement = <a class="code" href="class_navigation_table.xhtml#ad9c8729b8811049e1e367dbb47412e83">BuildNCXNavigationPoint</a>(node);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">if</span> (childElement)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        pElement-&gt;AppendChild(childElement);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#a11ae86ee5e9b8e647bfa1393d8a86031">  232</a></span>&#160;shared_ptr&lt;NavigationElement&gt; <a class="code" href="class_navigation_table.xhtml#a11ae86ee5e9b8e647bfa1393d8a86031">NavigationTable::BuildNavigationPoint</a>(shared_ptr&lt;xml::Node&gt; liNode)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;{</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <span class="keyword">auto</span> elementPtr = CastPtr&lt;NavigationElement&gt;();</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">auto</span> liChild = liNode-&gt;FirstElementChild();</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> ( !<span class="keywordtype">bool</span>(liChild) )</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">auto</span> point = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">NavigationPoint::New</a>(elementPtr);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">for</span> ( ; bool(liChild); liChild = liChild-&gt;NextElementSibling() )</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordtype">string</span> cName(liChild-&gt;Name());</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">if</span> ( cName == <span class="stringliteral">&quot;a&quot;</span> )</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            point-&gt;SetTitle(liChild-&gt;StringValue());</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            point-&gt;SetContent(_getProp(liChild, <span class="stringliteral">&quot;href&quot;</span>));</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( cName == <span class="stringliteral">&quot;span&quot;</span> )</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            point-&gt;SetTitle(liChild-&gt;StringValue());</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( cName == <span class="stringliteral">&quot;ol&quot;</span> )</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <a class="code" href="class_navigation_table.xhtml#a8f4cbd362c82cf620832232696a5b08b">LoadChildElements</a>(point, liChild);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">return</span> point;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno"><a class="code" href="class_navigation_table.xhtml#ad9c8729b8811049e1e367dbb47412e83">  265</a></span>&#160;shared_ptr&lt;NavigationElement&gt; <a class="code" href="class_navigation_table.xhtml#ad9c8729b8811049e1e367dbb47412e83">NavigationTable::BuildNCXNavigationPoint</a>(shared_ptr&lt;xml::Node&gt; node)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">auto</span> elementPtr = CastPtr&lt;NavigationElement&gt;();</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">auto</span> point = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">NavigationPoint::New</a>(elementPtr);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> sub = node-&gt;FirstElementChild(); bool(sub); sub = sub-&gt;NextElementSibling())</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordtype">string</span> cName = sub-&gt;Name();</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordtype">string</span> tmp;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">if</span> (cName == <span class="stringliteral">&quot;navLabel&quot;</span>)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            NCXNavLabelText(sub, tmp);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            point-&gt;SetTitle(tmp);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cName == <span class="stringliteral">&quot;content&quot;</span>)</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            NCXContentHref(sub, tmp);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            point-&gt;SetContent(tmp);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cName == <span class="stringliteral">&quot;navPoint&quot;</span>)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <a class="code" href="class_navigation_table.xhtml#a96deaf2e54a82d95dd48200bde79b9be">LoadChildNavPoint</a>(point, sub);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> point;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="nav__table_8cpp.xhtml">nav_table.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
