<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: RingBuffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('class_ring_buffer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="class_ring_buffer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">RingBuffer Class Reference<div class="ingroups"><a class="el" href="group__utilities.xhtml">Utilities</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adee5eb73f032be127247973ddb6be14b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#adee5eb73f032be127247973ddb6be14b">RingBuffer</a> (std::size_t size=4096)</td></tr>
<tr class="memdesc:adee5eb73f032be127247973ddb6be14b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a new <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> instance.  <a href="#adee5eb73f032be127247973ddb6be14b">More...</a><br/></td></tr>
<tr class="separator:adee5eb73f032be127247973ddb6be14b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2715b2e99ea24521ef7a586c2f33e1c9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a2715b2e99ea24521ef7a586c2f33e1c9">~RingBuffer</a> ()</td></tr>
<tr class="memdesc:a2715b2e99ea24521ef7a586c2f33e1c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a2715b2e99ea24521ef7a586c2f33e1c9">More...</a><br/></td></tr>
<tr class="separator:a2715b2e99ea24521ef7a586c2f33e1c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7166e8ef4b0866d6f42a0b9778813273"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a7166e8ef4b0866d6f42a0b9778813273">RingBuffer</a> (const <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;o)</td></tr>
<tr class="memdesc:a7166e8ef4b0866d6f42a0b9778813273"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor (identical input class).  <a href="#a7166e8ef4b0866d6f42a0b9778813273">More...</a><br/></td></tr>
<tr class="separator:a7166e8ef4b0866d6f42a0b9778813273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b93a4c7d207c2eddd2912f52bb3c18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a13b93a4c7d207c2eddd2912f52bb3c18">RingBuffer</a> (<a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&amp;o)</td></tr>
<tr class="memdesc:a13b93a4c7d207c2eddd2912f52bb3c18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructor.  <a href="#a13b93a4c7d207c2eddd2912f52bb3c18">More...</a><br/></td></tr>
<tr class="separator:a13b93a4c7d207c2eddd2912f52bb3c18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Assignment Operators</div></td></tr>
<tr class="memitem:a8a5b7016cf3c4fe0d760fe34749d78ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a8a5b7016cf3c4fe0d760fe34749d78ad">operator=</a> (const <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;o)</td></tr>
<tr class="separator:a8a5b7016cf3c4fe0d760fe34749d78ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e76b152ad6e0e0a8cd72f5ce228111"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a34e76b152ad6e0e0a8cd72f5ce228111">operator=</a> (<a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&amp;o)</td></tr>
<tr class="separator:a34e76b152ad6e0e0a8cd72f5ce228111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Locking Operations</div></td></tr>
<tr><td colspan="2"><div class="groupText"><dl class="section note"><dt>Note</dt><dd>The functions here are named such that the <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> class satisfies the C++11 Lockable concept. As a result, this object can be used as the <code>_Mutex</code> template parameter in <code>std::lock_guard</code> and <code>std::unique_lock</code>. </dd></dl>
</div></td></tr>
<tr class="memitem:ab2e560b09801a64e115f5e8dc77b4a36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#ab2e560b09801a64e115f5e8dc77b4a36">lock</a> ()</td></tr>
<tr class="separator:ab2e560b09801a64e115f5e8dc77b4a36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04a51624d61f07df306b96397a0f3c53"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a04a51624d61f07df306b96397a0f3c53">try_lock</a> ()</td></tr>
<tr class="separator:a04a51624d61f07df306b96397a0f3c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76dcf84b86dc962afd1fa7e2a35fd1ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a76dcf84b86dc962afd1fa7e2a35fd1ed">unlock</a> ()</td></tr>
<tr class="separator:a76dcf84b86dc962afd1fa7e2a35fd1ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Buffer Metadata</div></td></tr>
<tr class="memitem:a394291491fca305a04293514117325c1"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a394291491fca305a04293514117325c1">Capacity</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a394291491fca305a04293514117325c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f168e4e970d4883d0be480269e302ff"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a3f168e4e970d4883d0be480269e302ff">HasData</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a3f168e4e970d4883d0be480269e302ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afacbe16ce63890911cdb2f1f68430664"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#afacbe16ce63890911cdb2f1f68430664">BytesAvailable</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:afacbe16ce63890911cdb2f1f68430664"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedafa29cee0c65f536c3ee55d18b9906"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#aedafa29cee0c65f536c3ee55d18b9906">HasSpace</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:aedafa29cee0c65f536c3ee55d18b9906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b10c077c2b35ae16c2cefc6db4ed3f5"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a1b10c077c2b35ae16c2cefc6db4ed3f5">SpaceAvailable</a> () const <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a1b10c077c2b35ae16c2cefc6db4ed3f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Content Accessors</div></td></tr>
<tr class="memitem:af53119cf9cf8abf5547d07444c8fb4ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#af53119cf9cf8abf5547d07444c8fb4ea">ReadBytes</a> (uint8_t *buf, std::size_t len)</td></tr>
<tr class="separator:af53119cf9cf8abf5547d07444c8fb4ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06dc6f3451cf7cfa467969a29814b053"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a06dc6f3451cf7cfa467969a29814b053">WriteBytes</a> (const uint8_t *buf, std::size_t len)</td></tr>
<tr class="separator:a06dc6f3451cf7cfa467969a29814b053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c944cb2a1776a66ef8a90f02c160d5d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a2c944cb2a1776a66ef8a90f02c160d5d">RemoveBytes</a> (std::size_t len) <a class="el" href="__compiler_8h.xhtml#ad7597118202b58872a4a874eab3dc1a2">_NOEXCEPT</a></td></tr>
<tr class="separator:a2c944cb2a1776a66ef8a90f02c160d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aec37848d341b186f087b5d4e46bac94b"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#aec37848d341b186f087b5d4e46bac94b">_capacity</a></td></tr>
<tr class="memdesc:aec37848d341b186f087b5d4e46bac94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The allocated capacity (in bytes) of the backing store.  <a href="#aec37848d341b186f087b5d4e46bac94b">More...</a><br/></td></tr>
<tr class="separator:aec37848d341b186f087b5d4e46bac94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea662055e262bf90af51a84984f1aab8"><td class="memItemLeft" align="right" valign="top">uint8_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#aea662055e262bf90af51a84984f1aab8">_buffer</a></td></tr>
<tr class="memdesc:aea662055e262bf90af51a84984f1aab8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The buffer backing store.  <a href="#aea662055e262bf90af51a84984f1aab8">More...</a><br/></td></tr>
<tr class="separator:aea662055e262bf90af51a84984f1aab8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99fd6aa07f16183e2fddbd2a356f18dc"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a99fd6aa07f16183e2fddbd2a356f18dc">_numBytes</a></td></tr>
<tr class="memdesc:a99fd6aa07f16183e2fddbd2a356f18dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of bytes available to read.  <a href="#a99fd6aa07f16183e2fddbd2a356f18dc">More...</a><br/></td></tr>
<tr class="separator:a99fd6aa07f16183e2fddbd2a356f18dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ff18705c713ad4a538f8b917e6f035"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a71ff18705c713ad4a538f8b917e6f035">_readPos</a></td></tr>
<tr class="memdesc:a71ff18705c713ad4a538f8b917e6f035"><td class="mdescLeft">&#160;</td><td class="mdescRight">The current read position.  <a href="#a71ff18705c713ad4a538f8b917e6f035">More...</a><br/></td></tr>
<tr class="separator:a71ff18705c713ad4a538f8b917e6f035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa782efb113d5fca12e80a8033297f25b"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#aa782efb113d5fca12e80a8033297f25b">_writePos</a></td></tr>
<tr class="memdesc:aa782efb113d5fca12e80a8033297f25b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The current write position.  <a href="#aa782efb113d5fca12e80a8033297f25b">More...</a><br/></td></tr>
<tr class="separator:aa782efb113d5fca12e80a8033297f25b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a542789d93e1246802503ef0ed9fe60c3"><td class="memItemLeft" align="right" valign="top">std::recursive_mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_ring_buffer.xhtml#a542789d93e1246802503ef0ed9fe60c3">_lock</a></td></tr>
<tr class="memdesc:a542789d93e1246802503ef0ed9fe60c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">An access lock, used to prevent modifications.  <a href="#a542789d93e1246802503ef0ed9fe60c3">More...</a><br/></td></tr>
<tr class="separator:a542789d93e1246802503ef0ed9fe60c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class implements a ring buffer.</p>
<p>The function of a ring buffer is that when data is removed, only a read-position marker is updated; this means that any remaining data is not copied or moved. Note also that the buffer cannot grow. This means that you must pay attention to the amount of space available in the ring buffer when reading data from any persistent storage to be placed herein: only read as much as you can store here.</p>
<p>It is STRONGLY ADVISED that any use of a <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> class be appropiately wrapped in calls to its <a class="el" href="class_ring_buffer.xhtml#ab2e560b09801a64e115f5e8dc77b4a36">lock()</a> and <a class="el" href="class_ring_buffer.xhtml#a76dcf84b86dc962afd1fa7e2a35fd1ed">unlock()</a> methods. Note that the lock used is a <code>std::recursive_mutex</code>, so it is safe to lock it in a nested manner, so long as every <a class="el" href="class_ring_buffer.xhtml#ab2e560b09801a64e115f5e8dc77b4a36">lock()</a> call is balanced by an <a class="el" href="class_ring_buffer.xhtml#a76dcf84b86dc962afd1fa7e2a35fd1ed">unlock()</a>. The <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> class satisfies the BasicLockable and Lockable concepts, so it can be locked directly through a <code>std::lock_guard</code> or <code>std::unique_lock</code>, and can be used with a <code>std::condition_variable</code>, e.g.: </p>
<pre class="fragment">void func(RingBuffer&amp; buf)
{
    std::lock_guard&lt;RingBuffer&gt; _(buf);
    ...
}
</pre><p>The ring buffer is used as a component in the AsyncByteStream classes to enable asynchronous reading/writing behaviour. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00058">58</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="adee5eb73f032be127247973ddb6be14b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EPUB3_BEGIN_NAMESPACE RingBuffer::RingBuffer </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>size</em> = <code>4096</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a new <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> instance. </p>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2715b2e99ea24521ef7a586c2f33e1c9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">RingBuffer::~RingBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7166e8ef4b0866d6f42a0b9778813273"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RingBuffer::RingBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor (identical input class). </p>
<dl class="section note"><dt>Note</dt><dd>This locks its argument before accessing. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00030">30</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a13b93a4c7d207c2eddd2912f52bb3c18"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RingBuffer::RingBuffer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move constructor. </p>
<dl class="section note"><dt>Note</dt><dd>This locks its argument before accessing. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afacbe16ce63890911cdb2f1f68430664"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::BytesAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of bytes available to read from the buffer. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00139">139</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a394291491fca305a04293514117325c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::Capacity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Obtain the total capacity of a ring buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>The maximum number of bytes the buffer can hold. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00129">129</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3f168e4e970d4883d0be480269e302ff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool RingBuffer::HasData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><code>true</code> is there is data in the buffer, <code>false</code> otherwise. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00134">134</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="aedafa29cee0c65f536c3ee55d18b9906"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool RingBuffer::HasSpace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><code>true</code> if there is room to write data to the buffer. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00144">144</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab2e560b09801a64e115f5e8dc77b4a36"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RingBuffer::lock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Locks the receiver, preventing any modification. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00106">106</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8a5b7016cf3c4fe0d760fe34749d78ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp; RingBuffer::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy operator. </p>
<dl class="section note"><dt>Note</dt><dd>This locks its parameter before copying. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a34e76b152ad6e0e0a8cd72f5ce228111"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp; RingBuffer::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_ring_buffer.xhtml">RingBuffer</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move operator. </p>
<dl class="section note"><dt>Note</dt><dd>This locks its parameter before copying. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af53119cf9cf8abf5547d07444c8fb4ea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::ReadBytes </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads data from the buffer without removing it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>A buffer of at least <code>len</code> bytes into which the data will be copied. </td></tr>
    <tr><td class="paramname">len</td><td>The number of bytes to copy. This can be an ideal value; if not enough bytes are available, a smaller amount will be copied. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of bytes actually copied into <code>buf</code>. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2c944cb2a1776a66ef8a90f02c160d5d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RingBuffer::RemoveBytes </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>len</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Removes bytes from the buffer. </p>
<dl class="section note"><dt>Note</dt><dd>This method acquire's the instance's modification lock. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">len</td><td>The number of bytes to remove. When <code>len &gt; _numBytes</code> the result is undefined. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00142">142</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1b10c077c2b35ae16c2cefc6db4ed3f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::SpaceAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The maximum number of bytes that may currently be written to the buffer. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00149">149</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a04a51624d61f07df306b96397a0f3c53"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool RingBuffer::try_lock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Attempts to lock the receiver as per <a class="el" href="class_ring_buffer.xhtml#ab2e560b09801a64e115f5e8dc77b4a36">lock()</a>. </p>
<dl class="section return"><dt>Returns</dt><dd><code>true</code> if the lock was acquired, <code>false</code> if it was already locked by another thread. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00113">113</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a76dcf84b86dc962afd1fa7e2a35fd1ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RingBuffer::unlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Unlocks the receiver, permitting modifications to take place. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00118">118</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a06dc6f3451cf7cfa467969a29814b053"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::WriteBytes </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Writes data into the buffer. </p>
<dl class="section note"><dt>Note</dt><dd>This method acquires the instance's modification lock. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buf</td><td>A buffer of at least <code>len</code> bytes from which data will be copied. </td></tr>
    <tr><td class="paramname">len</td><td>The number of bytes to copy. This can be an ideal value; if not enough space available, a smaller amount will be copied. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of bytes actually copied into the ring buffer. </dd></dl>

<p>Definition at line <a class="el" href="ring__buffer_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aea662055e262bf90af51a84984f1aab8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t* RingBuffer::_buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The buffer backing store. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00190">190</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="aec37848d341b186f087b5d4e46bac94b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::_capacity</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The allocated capacity (in bytes) of the backing store. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00189">189</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a542789d93e1246802503ef0ed9fe60c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::recursive_mutex RingBuffer::_lock</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>An access lock, used to prevent modifications. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00196">196</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a99fd6aa07f16183e2fddbd2a356f18dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::_numBytes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The number of bytes available to read. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00192">192</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="a71ff18705c713ad4a538f8b917e6f035"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::_readPos</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The current read position. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00193">193</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<a class="anchor" id="aa782efb113d5fca12e80a8033297f25b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t RingBuffer::_writePos</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The current write position. </p>

<p>Definition at line <a class="el" href="ring__buffer_8h_source.xhtml#l00194">194</a> of file <a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/<a class="el" href="ring__buffer_8h_source.xhtml">ring_buffer.h</a></li>
<li>/Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/<a class="el" href="ring__buffer_8cpp_source.xhtml">ring_buffer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="class_ring_buffer.xhtml">RingBuffer</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:42 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
