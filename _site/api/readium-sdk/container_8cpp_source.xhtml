<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/ePub/container.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('container_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">container.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="container_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  container.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2012-11-28.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="package_8h.xhtml">package.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="container_8h.xhtml">container.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="archive_8h.xhtml">archive.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="archive__xml_8h.xhtml">archive_xml.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="xpath__wrangler_8h.xhtml">xpath_wrangler.h</a>&quot;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="byte__stream_8h.xhtml">byte_stream.h</a>&quot;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="filter__manager_8h.xhtml">filter_manager.h</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/document.h&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;ePub3/xml/io.h&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;ePub3/content_module_manager.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gContainerFilePath = <span class="stringliteral">&quot;META-INF/container.xml&quot;</span>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gEncryptionFilePath = <span class="stringliteral">&quot;META-INF/encryption.xml&quot;</span>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gAppleiBooksDisplayOptionsFilePath = <span class="stringliteral">&quot;META-INF/com.apple.ibooks.display-options.xml&quot;</span>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gRootfilesXPath = <span class="stringliteral">&quot;/ocf:container/ocf:rootfiles/ocf:rootfile&quot;</span>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gRootfilePathsXPath = <span class="stringliteral">&quot;/ocf:container/ocf:rootfiles/ocf:rootfile/@full-path&quot;</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * gVersionXPath = <span class="stringliteral">&quot;/ocf:container/@version&quot;</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="code" href="class_container.xhtml#a1b0c5515d6863c1bc98cc93b65952f42">   41</a></span>&#160;<a class="code" href="class_container.xhtml#a1b0c5515d6863c1bc98cc93b65952f42">Container::Container</a>() :</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;#if <a class="code" href="__platform_8h.xhtml#a34ebb2c17c03dd85efc5bed561bda851">EPUB_PLATFORM</a>(WINRT)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    NativeBridge(),</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;#endif</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="class_package_base.xhtml#aa3e98e134227c3496309840b038ecfc9" title="The archive from which the package was loaded.">_archive</a>(nullptr), _ocf(nullptr), _packages(), _encryption(), _path()</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="code" href="class_container.xhtml#adf380b83327e47842b8aa537e498b7a5">   48</a></span>&#160;<a class="code" href="class_container.xhtml#a1b0c5515d6863c1bc98cc93b65952f42">Container::Container</a>(<a class="code" href="class_container.xhtml">Container</a>&amp;&amp; o) :</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;#if <a class="code" href="__platform_8h.xhtml#a34ebb2c17c03dd85efc5bed561bda851">EPUB_PLATFORM</a>(WINRT)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;NativeBridge(),</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;#endif</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<a class="code" href="class_package_base.xhtml#aa3e98e134227c3496309840b038ecfc9" title="The archive from which the package was loaded.">_archive</a>(std::move(o.<a class="code" href="class_package_base.xhtml#aa3e98e134227c3496309840b038ecfc9" title="The archive from which the package was loaded.">_archive</a>)), _ocf(o._ocf), _packages(std::move(o._packages)), _path(std::move(o._path))</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    o._ocf = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="class_container.xhtml#ae9f5d07bfc3defda274aa06091c19f56">   56</a></span>&#160;<a class="code" href="class_container.xhtml#ae9f5d07bfc3defda274aa06091c19f56">Container::~Container</a>()</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="code" href="class_container.xhtml#aec35a6ffbb3cb8ee492b21a1e1be271e">   59</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_container.xhtml#aec35a6ffbb3cb8ee492b21a1e1be271e" title="Opens the archive at a given path.">Container::Open</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a> = <a class="code" href="class_archive.xhtml#ab9630eb1a4c3ac336356aeb2438655ee">Archive::Open</a>(path.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a> == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(_Str(<span class="stringliteral">&quot;Path does not point to a recognised archive file: &#39;&quot;</span>, path, <span class="stringliteral">&quot;&#39;&quot;</span>));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="class_container.xhtml#afd0efde2df9993c92dbc0416575785a1">_path</a> = path;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// TODO: Initialize lazily? Doing so would make initialization faster, but require</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// PackageLocations() to become non-const, like Packages().</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="class_archive_xml_reader.xhtml">ArchiveXmlReader</a> reader(<a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a>-&gt;ReaderAtPath(gContainerFilePath));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (!reader) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(_Str(<span class="stringliteral">&quot;Path does not point to a recognised archive file: &#39;&quot;</span>, path, <span class="stringliteral">&quot;&#39;&quot;</span>));</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a> = reader.xmlReadDocument(gContainerFilePath, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor"></span>    decltype(<a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a>) __tmp(reader.ReadDocument(gContainerFilePath, <span class="keyword">nullptr</span>, <span class="comment">/*RESOLVE_EXTERNALS*/</span> 1));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a> = __tmp;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> (!((<span class="keywordtype">bool</span>)_ocf))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(_ocf, { { <span class="stringliteral">&quot;ocf&quot;</span>, <span class="stringliteral">&quot;urn:oasis:names:tc:opendocument:xmlns:container&quot;</span> } });</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    __ns[<span class="stringliteral">&quot;ocf&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ade8ad548c3287ee02648cfecfd680d6c">OCFNamespaceURI</a>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(_ocf, __ns);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor"></span>    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> nodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(gRootfilesXPath);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span> (nodes.empty())</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="class_container.xhtml#a0008c728b757f582190b0ff138cdc260" title="Parses the file META-INF/encryption.xml into an EncryptionList.">LoadEncryption</a>();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="class_container.xhtml#a333e6c868888f70d537eaa1fdad18c10" title="Check for vendor-specific metadata http://www.idpf.org/epub/fxl/#mappings TODO: currently only checks...">ParseVendorMetadata</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> n : nodes)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordtype">string</span> type = _getProp(n, <span class="stringliteral">&quot;media-type&quot;</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordtype">string</span> path = _getProp(n, <span class="stringliteral">&quot;full-path&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">if</span> (path.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>())</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keyword">auto</span> pkg = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">Package::New</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>(), type);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">if</span> (pkg-&gt;Open(path))</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="class_container.xhtml#acb6a2981ad4a7fbebdf087deccddb8fc">_packages</a>.push_back(pkg);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="code" href="class_container.xhtml#a8ee5ecf9935bba4c6dfea27043104aa4">  113</a></span>&#160;<a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> <a class="code" href="class_container.xhtml#a8ee5ecf9935bba4c6dfea27043104aa4" title="Creates and returns a new Container instance by calling OpenContainerAsync() and blocking.">Container::OpenContainer</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;path)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keyword">auto</span> <a class="code" href="classfuture.xhtml">future</a> = <a class="code" href="class_content_module_manager.xhtml#a08fe4c9cf717a7a45b7a7acaa2b1ce19">ContentModuleManager::Instance</a>()-&gt;LoadContentAtPath(path, launch::any);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> result;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">// Added by DRM inside H.S. Lee on 2015-03-15</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Without following code part, program crash happens on some situations</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="class____basic__future.xhtml#accf0a262280993df2a6a49e94082058f">__future_</a> == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">// There are registered modules, but</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">//1-1 no proper content module</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">//1-2 canceled by users</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="comment">//1-3 Signature error (currently, throwing error)</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">//1-4 Password error (currently, throwing error)</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">//2, plain content</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56" title="Synchronously creates a new container. Available for the use of ContentModule implementations only...">OpenContainerForContentModule</a>(path);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// see if it&#39;s complete with a nil value</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="class____basic__future.xhtml#a09355e14dccf9e138ae8642841b03fdb">wait_for</a>(std::chrono::system_clock::duration(0)) == future_status::ready)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        result = <a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="classfuture.xhtml#a8177d6b6cea7bc1f5315722c59c14d97">get</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">if</span> (!<span class="keywordtype">bool</span>(result))</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment">//No registered content module</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56" title="Synchronously creates a new container. Available for the use of ContentModule implementations only...">OpenContainerForContentModule</a>(path);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> (!<span class="keywordtype">bool</span>(result))</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">//There is a proper registered content module to handle the encrypted EPUB</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        result = <a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="classfuture.xhtml#a8177d6b6cea7bc1f5315722c59c14d97">get</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#ifdef SUPPORT_ASYNC</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor"></span><a class="code" href="classfuture.xhtml">future&lt;ContainerPtr&gt;</a> Container::OpenContainerAsync(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, <a class="code" href="future_8h.xhtml#a9b3224d19f20667b3b24145a7b395a33">launch</a> policy)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">auto</span> result = <a class="code" href="class_content_module_manager.xhtml#a08fe4c9cf717a7a45b7a7acaa2b1ce19">ContentModuleManager::Instance</a>()-&gt;LoadContentAtPath(path, policy);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// see if it&#39;s complete with a nil value</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (result.wait_for(std::chrono::system_clock::duration(0)) == future_status::ready)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> container = result.get();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">if</span> (container)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            result = make_ready_future&lt;ContainerPtr&gt;(std::move(container));</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            result = <a class="code" href="future_8h.xhtml#abb3e62fb4f669ea319c9efdb1383a50b">async</a>(policy, &amp;<a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56" title="Synchronously creates a new container. Available for the use of ContentModule implementations only...">Container::OpenContainerForContentModule</a>, path);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* SUPPORT_ASYNC */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#if EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor"></span><a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> Container::OpenSynchronouslyForWinRT(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">auto</span> <a class="code" href="classfuture.xhtml">future</a> = <a class="code" href="class_content_module_manager.xhtml#a08fe4c9cf717a7a45b7a7acaa2b1ce19">ContentModuleManager::Instance</a>()-&gt;LoadContentAtPath(path, <a class="code" href="namespace____future__state.xhtml#ae989a8c9d02a1fcd02e3faa8ebe93821ad76b7cdc3586b923607f0c8ff5b02512">std::launch::deferred</a>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">// see if it&#39;s complete with a nil value</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="class____basic__future.xhtml#a09355e14dccf9e138ae8642841b03fdb">wait_for</a>(std::chrono::system_clock::duration(0)) == std::future_status::ready)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> result = <a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="classfuture.xhtml#a8177d6b6cea7bc1f5315722c59c14d97">get</a>();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">if</span> (<span class="keywordtype">bool</span>(result))</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56" title="Synchronously creates a new container. Available for the use of ContentModule implementations only...">OpenContainerForContentModule</a>(path);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// deferred call, will run the operation synchronously now</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classfuture.xhtml">future</a>.<a class="code" href="classfuture.xhtml#a8177d6b6cea7bc1f5315722c59c14d97">get</a>();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56">  186</a></span>&#160;<span class="preprocessor"></span><a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> <a class="code" href="class_container.xhtml#adce323cc608c2c05d06bb73f52eaed56" title="Synchronously creates a new container. Available for the use of ContentModule implementations only...">Container::OpenContainerForContentModule</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="_forward_8h.xhtml#a96b279dc4c30984cab89df2ea2d7289b">ContainerPtr</a> container = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">Container::New</a>();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">if</span> (container-&gt;Open(path) == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">return</span> container;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;}</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="code" href="class_container.xhtml#a8c5a03f25163267e318d45b44e38e060">  193</a></span>&#160;<a class="code" href="class_container.xhtml#a3a75db0a5d6fceed272c8d58d17ee4f3" title="A list of container sub-item paths.">Container::PathList</a> <a class="code" href="class_container.xhtml#a8c5a03f25163267e318d45b44e38e060" title="Retrieves the paths for all Package documents in the container.">Container::PackageLocations</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(<a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a>, {{<span class="stringliteral">&quot;ocf&quot;</span>, <span class="stringliteral">&quot;urn:oasis:names:tc:opendocument:xmlns:container&quot;</span>}});</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    __ns[<span class="stringliteral">&quot;ocf&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ade8ad548c3287ee02648cfecfd680d6c">OCFNamespaceURI</a>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(<a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a>, __ns);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="class_container.xhtml#a3a75db0a5d6fceed272c8d58d17ee4f3" title="A list of container sub-item paths.">PathList</a> output;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">for</span> ( <span class="keywordtype">string</span>&amp; str : xpath.<a class="code" href="class_x_path_wrangler.xhtml#a31f1027104151bf01f40403c2180925e">Strings</a>(gRootfilePathsXPath) )</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        output.emplace_back(std::move(str));</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">return</span> output;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="code" href="class_container.xhtml#a1037f928ee6cc41f8dab30d8a01b422d">  211</a></span>&#160;shared_ptr&lt;Package&gt; <a class="code" href="class_container.xhtml#a1037f928ee6cc41f8dab30d8a01b422d">Container::DefaultPackage</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_container.xhtml#acb6a2981ad4a7fbebdf087deccddb8fc">_packages</a>.empty() )</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#acb6a2981ad4a7fbebdf087deccddb8fc">_packages</a>[0];</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="code" href="class_container.xhtml#aa41929240846b8c09987c1c94494e9f1">  217</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_container.xhtml#aa41929240846b8c09987c1c94494e9f1" title="The OCF version of the container document.">Container::Version</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(<a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a>, {{<span class="stringliteral">&quot;ocf&quot;</span>, <span class="stringliteral">&quot;urn:oasis:names:tc:opendocument:xmlns:container&quot;</span>}});</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    __ns[<span class="stringliteral">&quot;ocf&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ade8ad548c3287ee02648cfecfd680d6c">OCFNamespaceURI</a>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(<a class="code" href="class_container.xhtml#a4c117e1efec5b34771658ab2bf1cec65">_ocf</a>, __ns);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    std::vector&lt;string&gt; strings = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a31f1027104151bf01f40403c2180925e">Strings</a>(gVersionXPath);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">if</span> ( strings.empty() )</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;1.0&quot;</span>;       <span class="comment">// guess</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">return</span> std::move(strings[0]);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="code" href="class_container.xhtml#a333e6c868888f70d537eaa1fdad18c10">  234</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_container.xhtml#a333e6c868888f70d537eaa1fdad18c10" title="Check for vendor-specific metadata http://www.idpf.org/epub/fxl/#mappings TODO: currently only checks...">Container::ParseVendorMetadata</a>()</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;{</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    unique_ptr&lt;ArchiveReader&gt; pZipReader = <a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a>-&gt;ReaderAtPath(gAppleiBooksDisplayOptionsFilePath);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> ( !pZipReader )</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="class_archive_xml_reader.xhtml">ArchiveXmlReader</a> reader(std::move(pZipReader));</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor"></span>    shared_ptr&lt;xml::Document&gt; docXml = reader.<a class="code" href="class_archive_xml_reader.xhtml#a19b2150f4b5ca4dfe01a5994a0774e5e">xmlReadDocument</a>(gAppleiBooksDisplayOptionsFilePath, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#elif EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor"></span>    <span class="keyword">auto</span> docXml = reader.ReadDocument(gAppleiBooksDisplayOptionsFilePath, <span class="keyword">nullptr</span>, 0);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> ( !<span class="keywordtype">bool</span>(docXml) )</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(docXml);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(docXml, __ns);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> nodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;/display_options/platform/option&quot;</span>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">if</span> ( nodes.empty() )</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">//xml::string str(docXml-&gt;XMLString());</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="comment">//printf(&quot;%s\n&quot;, docXml-&gt;XMLString().utf8());</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> node : nodes )</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordtype">string</span> name = _getProp(node, <span class="stringliteral">&quot;name&quot;</span>);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">if</span> (name.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>())</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">if</span> (name == <span class="stringliteral">&quot;fixed-layout&quot;</span>)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <a class="code" href="class_container.xhtml#afe6d8bc25449f38d2c4d8ac948f1f224">_appleIBooksDisplayOption_FixedLayout</a> = node-&gt;Content(); <span class="comment">// true | false</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (name == <span class="stringliteral">&quot;orientation-lock&quot;</span>)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <a class="code" href="class_container.xhtml#a3d78655c0e51f83052a411b95a919b29">_appleIBooksDisplayOption_Orientation</a> = node-&gt;Content(); <span class="comment">// landscape-only | portrait-only | none</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="code" href="class_container.xhtml#a0008c728b757f582190b0ff138cdc260">  281</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_container.xhtml#a0008c728b757f582190b0ff138cdc260" title="Parses the file META-INF/encryption.xml into an EncryptionList.">Container::LoadEncryption</a>()</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    unique_ptr&lt;ArchiveReader&gt; pZipReader = <a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a>-&gt;ReaderAtPath(gEncryptionFilePath);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">if</span> ( !pZipReader )</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="class_archive_xml_reader.xhtml">ArchiveXmlReader</a> reader(std::move(pZipReader));</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#if EPUB_USE(LIBXML2)</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor"></span>    shared_ptr&lt;xml::Document&gt; enc = reader.<a class="code" href="class_archive_xml_reader.xhtml#a19b2150f4b5ca4dfe01a5994a0774e5e">xmlReadDocument</a>(gEncryptionFilePath, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#elif EPUB_USE(WIN_XML)</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor"></span>    <span class="keyword">auto</span> enc = reader.ReadDocument(gEncryptionFilePath, <span class="keyword">nullptr</span>, 0);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">if</span> ( !<span class="keywordtype">bool</span>(enc) )</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(enc, {{<span class="stringliteral">&quot;enc&quot;</span>, <a class="code" href="epub3_8h.xhtml#a0aa34669d7dc6c9ab2c7f9dddb7fcf2c">XMLENCNamespaceURI</a>}, {<span class="stringliteral">&quot;ocf&quot;</span>, <a class="code" href="epub3_8h.xhtml#ade8ad548c3287ee02648cfecfd680d6c">OCFNamespaceURI</a>}});</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_x_path_wrangler.xhtml#a1bfb05168e27f2e3e6acc241b8932bea" title="A list of namespace prefix to URI pairs.">XPathWrangler::NamespaceList</a> __ns;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    __ns[<span class="stringliteral">&quot;ocf&quot;</span>] = <a class="code" href="epub3_8h.xhtml#ade8ad548c3287ee02648cfecfd680d6c">OCFNamespaceURI</a>;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    __ns[<span class="stringliteral">&quot;enc&quot;</span>] = <a class="code" href="epub3_8h.xhtml#a0aa34669d7dc6c9ab2c7f9dddb7fcf2c">XMLENCNamespaceURI</a>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="class_x_path_wrangler.xhtml">XPathWrangler</a> xpath(enc, __ns);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor"></span>    <a class="code" href="node_8h.xhtml#ae3307b459c7fb4bdd8209f965914e070">xml::NodeSet</a> nodes = xpath.<a class="code" href="class_x_path_wrangler.xhtml#a6ed9664548383d612b3c3b631421bb4c">Nodes</a>(<span class="stringliteral">&quot;/ocf:encryption/enc:EncryptedData&quot;</span>);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">if</span> ( nodes.empty() )</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        xml::string str(enc-&gt;XMLString());</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        printf(<span class="stringliteral">&quot;%s\n&quot;</span>, enc-&gt;XMLString().utf8());</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <span class="keywordflow">return</span>;     <span class="comment">// should be a hard error?</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> node : nodes )</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keyword">auto</span> encPtr = <a class="code" href="class_pointer_type.xhtml#a532e3efd5145c8c89933b4fa5531f296">EncryptionInfo::New</a>(<a class="code" href="class_pointer_type.xhtml#a253402439a2f9b96382596074d2d7271">Ptr</a>());</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        <span class="keywordflow">if</span> ( encPtr-&gt;ParseXML(node) )</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <a class="code" href="class_container.xhtml#ac85e07c059d99b65d3ca28c753e1af41">_encryption</a>.push_back(encPtr);</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    }</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="code" href="class_container.xhtml#ad935f54f6b368953ee90bfc302cc3ba0">  318</a></span>&#160;shared_ptr&lt;EncryptionInfo&gt; <a class="code" href="class_container.xhtml#ad935f54f6b368953ee90bfc302cc3ba0">Container::EncryptionInfoForPath</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;path)<span class="keyword"> const</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">for</span> ( <span class="keyword">auto</span> item : <a class="code" href="class_container.xhtml#ac85e07c059d99b65d3ca28c753e1af41">_encryption</a> )</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">if</span> ( item-&gt;Path() == path )</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordflow">return</span> item;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="code" href="class_container.xhtml#a11595da49bc79e64119e103313b94d5d">  328</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_container.xhtml#a11595da49bc79e64119e103313b94d5d">Container::FileExistsAtPath</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path)<span class="keyword"> const</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a>-&gt;ContainsItem(path.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;}</div>
<div class="line"><a name="l00332"></a><span class="lineno"><a class="code" href="class_container.xhtml#abf1a8f32ae766c47b89be6e6f910b4f8">  332</a></span>&#160;unique_ptr&lt;ByteStream&gt; <a class="code" href="class_container.xhtml#abf1a8f32ae766c47b89be6e6f910b4f8">Container::ReadStreamAtPath</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;path)<span class="keyword"> const</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_container.xhtml#a20c80b8ac25369882b7f6ac4710e10ce">_archive</a>-&gt;ByteStreamAtPath(path.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d81697a4833f1d44a7e9bc8387132cc4.xhtml">ePub</a></li><li class="navelem"><a class="el" href="container_8cpp.xhtml">container.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
