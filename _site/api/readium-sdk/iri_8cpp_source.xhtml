<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/iri.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('iri_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">iri.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="iri_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  iri.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2013-01-15.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="iri_8h.xhtml">iri.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;google-url/url_util.h&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="cfi_8h.xhtml">cfi.h</a>&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="make__unique_8h.xhtml">make_unique.h</a>&quot;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include REGEX_INCLUDE</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="code" href="iri_8cpp.xhtml#ac7829874ef136b4b43ea23e4d40f13cc">   29</a></span>&#160;<span class="preprocessor">#define INCREMENT_IF_VALID(x) if ((x) != 0) { (x)++; }</span></div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="code" href="iri_8cpp.xhtml#a2a713e3bfded7121c726151f94d3f46b">   30</a></span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define DECREMENT_IF_VALID(x) if ((x) != 0) { (x)--; }</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">string</span> IRI::gPathSeparator(<span class="stringliteral">&quot;/&quot;</span>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keywordtype">string</span> IRI::gURNScheme(<span class="stringliteral">&quot;urn&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#a86a6e23ff6d1b40a2ddece72c05d0fbb" title="The IRI scheme used to refer to EPUB 3 documents.">IRI::gEPUBScheme</a>(<span class="stringliteral">&quot;epub3&quot;</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keywordtype">string</span> IRI::gReservedCharacters(<span class="stringliteral">&quot;!*&#39;();:@&amp;=+$,/?%#[]&quot;</span>);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">   37</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> url_parse::Component <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> url_parse::Component(0, str.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() ? -1 : <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(str.<a class="code" href="classstring.xhtml#a708e8f77226917886c81e234d4ca339c">utf8_size</a>()));</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ab731c5d191b1b3b814dff778a60ca829">   42</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#ab731c5d191b1b3b814dff778a60ca829">IRI::AddStandardScheme</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; scheme)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    url_util::AddStandardScheme(scheme.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>());</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a7faeaac6c1b95c6bf67ab278ca23e6fb">   47</a></span>&#160;<a class="code" href="class_i_r_i.xhtml#a0510e921b5e359b169fe5dea3da00428" title="Initializes an empty (and thus invalid) IRI.">IRI::IRI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; iriStr) : _urnComponents(), _url(<a class="code" href="make__unique_8h.xhtml#ab64d3fc2fe615e091be31852973e9ef4">make_unique</a>&lt;GURL&gt;(iriStr.stl_str())), _pureIRI(iriStr)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// is it a URN?</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> ( iriStr.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(<span class="stringliteral">&quot;urn:&quot;</span>, 0, 4) == 0 )</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        REGEX_NS::regex reg(<span class="stringliteral">&quot;:&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">auto</span> components = iriStr.<a class="code" href="classstring.xhtml#a7ea242429f8b63e5750cff43390f4fbb">split</a>(reg);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">if</span> ( components.size() == 3 )</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(gURNScheme);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(components[1]);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(components[2]);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a3e465630ba1629bd0703474a65c31193">   62</a></span>&#160;<a class="code" href="class_i_r_i.xhtml#a0510e921b5e359b169fe5dea3da00428" title="Initializes an empty (and thus invalid) IRI.">IRI::IRI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; nameID, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; namespacedString) :</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;#if <a class="code" href="__compiler_8h.xhtml#a9a2b9ee29c8cd618e54afbf03cb4230a">EPUB_COMPILER_SUPPORTS</a>(CXX_INITIALIZER_LISTS)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    _urnComponents({gURNScheme, nameID, namespacedString}),</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;#endif</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    _pureIRI(_Str(<span class="stringliteral">&quot;urn:&quot;</span>, nameID, <span class="stringliteral">&quot;:&quot;</span>, namespacedString)),</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    _url(make_unique&lt;GURL&gt;(_pureIRI.stl_str()))</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#if !EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor"></span>    <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(gURNScheme);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(nameID);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(namespacedString);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor"></span>}</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#abdb768dfde084e87ddb606353496ad76">   75</a></span>&#160;<a class="code" href="class_i_r_i.xhtml#a0510e921b5e359b169fe5dea3da00428" title="Initializes an empty (and thus invalid) IRI.">IRI::IRI</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; scheme, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; host, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; path, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; query, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; fragment) : _urnComponents(), _url(<a class="code" href="make__unique_8h.xhtml#ab64d3fc2fe615e091be31852973e9ef4">make_unique</a>&lt;GURL&gt;())</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> = _Str(scheme, <span class="stringliteral">&quot;://&quot;</span>, host);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> ( path.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += <span class="charliteral">&#39;/&#39;</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( path.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(gPathSeparator) != 0 )</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += (<span class="stringliteral">&quot;/&quot;</span> + path);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += path;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">if</span> ( !query.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += _Str(<span class="stringliteral">&quot;?&quot;</span>, query);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">if</span> ( !fragment.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += _Str(<span class="stringliteral">&quot;#&quot;</span>, fragment);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> = make_unique&lt;GURL&gt;(<a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ac36a28468bf50681763279e1cd948b71">   92</a></span>&#160;<a class="code" href="class_i_r_i.xhtml#ac36a28468bf50681763279e1cd948b71">IRI::~IRI</a>()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#aaa2632040378756d51926ce3540f2ebc">   95</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; <a class="code" href="class_i_r_i.xhtml#aaa2632040378756d51926ce3540f2ebc" title="Assigns the value of another IRI (copy assignment).">IRI::operator=</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; o)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a> = o.<a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> = o.<a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> != <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        *<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> = *o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> = make_unique&lt;GURL&gt;(*o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#aab77c89cfd84695cb0fac6753dbf00b2">  105</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; <a class="code" href="class_i_r_i.xhtml#aaa2632040378756d51926ce3540f2ebc" title="Assigns the value of another IRI (copy assignment).">IRI::operator=</a>(<a class="code" href="class_i_r_i.xhtml">IRI</a> &amp;&amp;o)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a> = std::move(o._urnComponents);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> = std::move(o._pureIRI);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> = std::move(o._url);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    o._url = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ab6bce73125f98406f4cac84f47e5d9e9">  113</a></span>&#160;<a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; <a class="code" href="class_i_r_i.xhtml#aaa2632040378756d51926ce3540f2ebc" title="Assigns the value of another IRI (copy assignment).">IRI::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Support for URN strings</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">bool</span> isURN = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> ( str.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(<span class="stringliteral">&quot;urn:&quot;</span>, 0, 4) == 0 )</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        REGEX_NS::regex reg(<span class="stringliteral">&quot;:&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keyword">auto</span> components = str.<a class="code" href="classstring.xhtml#a7ea242429f8b63e5750cff43390f4fbb">split</a>(reg);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> ( components.size() == 3 )</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(gURNScheme);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(components[1]);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.push_back(components[2]);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            isURN = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">auto</span> newURL = make_unique&lt;GURL&gt;(str.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span> ( !newURL-&gt;is_valid() &amp;&amp; !isURN )</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(_Str(<span class="stringliteral">&quot;IRI: &#39;&quot;</span>, str, <span class="stringliteral">&quot;&#39; is not a valid URL string.&quot;</span>));</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> = std::move(newURL);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> = str;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">if</span> ( !isURN )</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>.clear();</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a7ea690a46e0855968ea384b8a3f590da">  141</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_i_r_i.xhtml#a7ea690a46e0855968ea384b8a3f590da">IRI::operator==</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a> &amp;o)<span class="keyword"> const</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#a4e7e4c1b726867bf77fc0fe9265a36d6" title="Returns true if the IRI is a URN.">IsURN</a>() )</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a> == o.<a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> == <span class="keyword">nullptr</span> || o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> == <span class="keyword">nullptr</span> )</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> *<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> == *o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a6016dd595d4a9257c61be3b223d9f29a">  149</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_i_r_i.xhtml#a6016dd595d4a9257c61be3b223d9f29a">IRI::operator!=</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; o)<span class="keyword"> const</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#a4e7e4c1b726867bf77fc0fe9265a36d6" title="Returns true if the IRI is a URN.">IsURN</a>() )</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a> != o.<a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> *<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> != *o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ad354b0623a86e9a9fd04df55690c9671">  155</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="class_i_r_i.xhtml#ad354b0623a86e9a9fd04df55690c9671">IRI::operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="class_i_r_i.xhtml">IRI</a>&amp; o)<span class="keyword"> const</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#a4e7e4c1b726867bf77fc0fe9265a36d6" title="Returns true if the IRI is a URN.">IsURN</a>() )</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a> &lt; o.<a class="code" href="class_i_r_i.xhtml#a9b1289f315aba120aaf1869e09e1ea48" title="The components of a URN.">_urnComponents</a>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> *<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> &lt; *o.<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a62b4db724c4b1c1b5a43e7413aa71819">  161</a></span>&#160;<a class="code" href="class_i_r_i.xhtml#a5c7bf57e68630daef2e7ad5d691974e5" title="A type encapsulating an account and shared-secret pair, such as username and password.">IRI::IRICredentials</a> <a class="code" href="class_i_r_i.xhtml#a62b4db724c4b1c1b5a43e7413aa71819" title="Retrieves any credentials attached to an IRI.">IRI::Credentials</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">string</span> u, p;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;has_username() )</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        u = <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;username();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;has_password() )</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        p = <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;password();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#a5c7bf57e68630daef2e7ad5d691974e5" title="A type encapsulating an account and shared-secret pair, such as username and password.">IRICredentials</a>(u, p);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a72ef3cdac74e591d5ebfb75f2f0853a4">  175</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#a72ef3cdac74e591d5ebfb75f2f0853a4">IRI::Path</a>(<span class="keywordtype">bool</span> urlEncoded)<span class="keyword"> const</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    std::string encodedPath(<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;path());</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">if</span> ( urlEncoded )</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">return</span> encodedPath;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    url_canon::RawCanonOutputW&lt;256&gt; output;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// note that .size() is on std::string here (equivalent to strlen(str.c_str()) ),</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// which is in fact the same as ePub3:string .utf8_size() defined in utfstring.h,</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="comment">// but not the same as ePub3:string .size() !!</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// WATCH OUT!</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">int</span> length = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(encodedPath.size());</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    url_util::DecodeURLEscapeSequences(encodedPath.c_str(), length, &amp;output);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml">string</a>(output.data(), output.length());</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a18f9e89463e7cfca4c75d4c4dcd4ee12">  192</a></span>&#160;<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a> <a class="code" href="class_i_r_i.xhtml#a18f9e89463e7cfca4c75d4c4dcd4ee12">IRI::ContentFragmentIdentifier</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;has_ref() )</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">string</span> ref = <a class="code" href="class_i_r_i.xhtml#a76913516cf7fa53447186fd8d1bba665" title="Retrieves any fragment part of a URL IRI.">Fragment</a>();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> ( ref.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(<span class="stringliteral">&quot;epubcfi(&quot;</span>) != 0 )</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_c_f_i.xhtml">CFI</a>(ref);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;}</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#af93100043635f9ab12f272831a138d95">  203</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#af93100043635f9ab12f272831a138d95">IRI::SetScheme</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; scheme)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    rep.SetScheme(scheme.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(scheme));</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="comment">// can&#39;t keep the IRI up to date</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#aebac5e21b125028b581aa92b955d05e5">  212</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#aebac5e21b125028b581aa92b955d05e5">IRI::SetHost</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; host)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    rep.SetHost(host.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(host));</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="comment">// can&#39;t keep the IRI up to date</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;}</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#af7a4b478bd1cdfbca241f6855319aa30">  221</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#af7a4b478bd1cdfbca241f6855319aa30">IRI::SetPort</a>(uint16_t port)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordtype">char</span> portStr[6];</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordtype">int</span> len = ::snprintf(portStr, 6, <span class="stringliteral">&quot;%hu&quot;</span>, port);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    rep.SetPort(portStr, url_parse::Component(0, len));</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="comment">// can&#39;t keep the IRI up to date</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#abf65eebceaca6ac448b6f82d63ccaa03">  232</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#abf65eebceaca6ac448b6f82d63ccaa03">IRI::SetCredentials</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; user, <span class="keyword">const</span> <span class="keywordtype">string</span>&amp; pass)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;{</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    url_parse::Component invalid(0, -1);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    rep.SetUsername(user.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(user));</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    rep.SetPassword(pass.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(pass));</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="comment">// can&#39;t keep the IRI up to date</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#afbc2ba436874c474145f45a4780bf9ac">  243</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#afbc2ba436874c474145f45a4780bf9ac">IRI::AddPathComponent</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; component)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;{</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    std::string path(<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;path());</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">if</span> ( path[path.size()-1] != <span class="charliteral">&#39;/&#39;</span> )</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        path += <span class="charliteral">&#39;/&#39;</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    path += component.<a class="code" href="classstring.xhtml#a35bdd7a62c541f7aa1277f22d7a3c916">stl_str</a>();</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    rep.SetPath(path.c_str(), url_parse::Component(0, static_cast&lt;int&gt;(path.size())));</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() &amp;&amp; !<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;has_query() &amp;&amp; !<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;has_ref() )</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>[<a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#aecb9d18894116bec678f039638fd0958">size</a>()-1] != char32_t(<span class="charliteral">&#39;/&#39;</span>) )</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += <span class="charliteral">&#39;/&#39;</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a> += component;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="comment">// can&#39;t keep the IRI up to date</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a61728c6a130781ce3d6d0f5cf42537d5">clear</a>();</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;}</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a463194246bf6817fafc9a5835d693f6b">  266</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#a463194246bf6817fafc9a5835d693f6b">IRI::SetQuery</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; query)</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;{</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    rep.SetQuery(query.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(query));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <a class="code" href="classstring.xhtml#a000faf060ecec169c870bd9d8501046c">string::size_type</a> pos = <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(<span class="charliteral">&#39;?&#39;</span>);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span> ( pos != <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> )</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <a class="code" href="classstring.xhtml#a000faf060ecec169c870bd9d8501046c">string::size_type</a> end = <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a646c4270831260d2e77cea0e3b704538">rfind</a>(<span class="charliteral">&#39;#&#39;</span>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a40f92a94edfb869c45832b3abbb794dc">replace</a>(pos+1, (end == <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> ? <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> : end - pos), query);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        pos = <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a646c4270831260d2e77cea0e3b704538">rfind</a>(<span class="charliteral">&#39;#&#39;</span>);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">if</span> ( pos != <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> )</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ae2d58f7b6185142dd302a8d00bb4ae6f">insert</a>(pos, 1, <span class="charliteral">&#39;?&#39;</span>);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ae2d58f7b6185142dd302a8d00bb4ae6f">insert</a>(pos+1, query);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ad877fe3f0bf888eadef70b0a428f76db">append</a>(1, <span class="charliteral">&#39;?&#39;</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ad877fe3f0bf888eadef70b0a428f76db">append</a>(query);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a61e08c4e300f426b30ec2de21b7d936d">  296</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#a61e08c4e300f426b30ec2de21b7d936d">IRI::SetFragment</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; fragment)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    url_canon::Replacements&lt;char&gt; rep;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    rep.SetRef(fragment.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <a class="code" href="iri_8cpp.xhtml#aaec166fa5ff6058a53d051d92c36a0c0">ComponentForString</a>(fragment));</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;ReplaceComponentsInline(rep);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classstring.xhtml#a000faf060ecec169c870bd9d8501046c">string::size_type</a> pos = <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a646c4270831260d2e77cea0e3b704538">rfind</a>(<span class="charliteral">&#39;#&#39;</span>);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">if</span> ( pos != <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> )</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#a40f92a94edfb869c45832b3abbb794dc">replace</a>(pos+1, <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a>, fragment);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ad877fe3f0bf888eadef70b0a428f76db">append</a>(1, <span class="charliteral">&#39;#&#39;</span>);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#ad877fe3f0bf888eadef70b0a428f76db">append</a>(fragment);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#aec838c4c509c47726eae11475b6a6e57">  313</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_i_r_i.xhtml#aec838c4c509c47726eae11475b6a6e57">IRI::SetContentFragmentIdentifier</a>(<span class="keyword">const</span> <a class="code" href="class_c_f_i.xhtml">CFI</a> &amp;cfi)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordflow">if</span> ( cfi.<a class="code" href="class_c_f_i.xhtml#a63626f95caa06f17410b56a3daba9d49">Empty</a>() )</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="class_i_r_i.xhtml#a61e08c4e300f426b30ec2de21b7d936d">SetFragment</a>(cfi.<a class="code" href="class_c_f_i.xhtml#ab93b9d0d5ebb03172b019391eb1b3bb6">String</a>());</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;}</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a592db9fd708f2d3f9ae9cd9de348674d">  319</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#a592db9fd708f2d3f9ae9cd9de348674d" title="URL-encodes a path, query, or fragment component.">IRI::URLEncodeComponent</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;{</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    url_canon::RawCanonOutput&lt;256&gt; output;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    url_util::EncodeURIComponent(str.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(str.<a class="code" href="classstring.xhtml#a708e8f77226917886c81e234d4ca339c">utf8_size</a>()), &amp;output);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml">string</a>(output.data(), output.length());</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ad026fb169dc64c0ce8900ccb545d90ea">  325</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#ad026fb169dc64c0ce8900ccb545d90ea" title="Percent-encodes the UTF-8 representation of any non-ASCII characters in a string.">IRI::PercentEncodeUCS</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;{</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    std::stringstream ss;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">for</span> ( char32_t ch : str )</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">if</span> ( ch &gt; 0x7F )</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <span class="comment">// get utf8 representation and percent-encode it</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            std::string utf8 = <a class="code" href="classstring.xhtml#a7ab8dbaa72c6afb0b7081710f8ce40d2">string::utf8_of</a>(ch);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="keywordflow">for</span> ( <span class="keyword">auto</span> byte : utf8 )</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                <span class="keywordtype">char</span> buf[3];</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                snprintf(buf, 3, <span class="stringliteral">&quot;%%%02X&quot;</span>, byte);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                ss &lt;&lt; buf;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            }</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="comment">// single valid ASCII character</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            ss &lt;&lt; static_cast&lt;char&gt;(ch);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">return</span> ss.str();</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#ae462a251eb331b2a0767e072a5382fe9">  350</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#ae462a251eb331b2a0767e072a5382fe9" title="Converts an IDN (hostname in non-ASCII Unicode format) into its ASCII representation.">IRI::IDNEncodeHostname</a>(<span class="keyword">const</span> <span class="keywordtype">string</span>&amp; str)</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;{</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    url_canon::RawCanonOutputW&lt;256&gt; output;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">const</span> string16 src = str.<a class="code" href="classstring.xhtml#ac536ec55387a215f506cb76e56b91ce8">utf16string</a>();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">if</span> ( url_canon::IDNToASCII(src.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(src.size()), &amp;output) )</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">return</span> output.data();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;}</div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a1407182eb7fe89e5780e8f91ec380ead">  358</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#a1407182eb7fe89e5780e8f91ec380ead">IRI::IRIString</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>.<a class="code" href="classstring.xhtml#aa1e79021cefb7799622b58913efb52ec">empty</a>() )</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#a4102e0d68e7521d39e79947712055321" title="A cache of the Unicode IRI string. May be empty.">_pureIRI</a>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> )</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="comment">// we&#39;ll have to reverse-engineer it, grr</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordtype">string</span> uri(<a class="code" href="class_i_r_i.xhtml#a2698ea7751b5dc4bbec3b1902f7b0741">URIString</a>());</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::string plainHost(<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;host());</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    url_canon::RawCanonOutputW&lt;256&gt; idnDecoded;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keyword">const</span> string16 idnSrc = <a class="code" href="classstring.xhtml">string</a>(plainHost).<a class="code" href="classstring.xhtml#ac536ec55387a215f506cb76e56b91ce8">utf16string</a>();</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">if</span> ( url_canon::IDNToUnicode(idnSrc.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(idnSrc.size()), &amp;idnDecoded) &amp;&amp; idnSrc != idnDecoded.data() )</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        <span class="comment">// swap out the IDN-encoded hostname</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <a class="code" href="classstring.xhtml#a000faf060ecec169c870bd9d8501046c">string::size_type</a> pos = uri.<a class="code" href="classstring.xhtml#a37f7e313ee9a39ef3e06b535efa7870c">find</a>(plainHost);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">if</span> ( pos != <a class="code" href="classstring.xhtml#a5481c7537c2e018b4cf3bd905d342d0c">string::npos</a> )</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            uri.<a class="code" href="classstring.xhtml#a40f92a94edfb869c45832b3abbb794dc">replace</a>(pos, plainHost.size(), idnDecoded.data());</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    </div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <span class="comment">// have to leave it all url-encoded, sadly...</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">return</span> uri;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div>
<div class="line"><a name="l00385"></a><span class="lineno"><a class="code" href="class_i_r_i.xhtml#a2698ea7751b5dc4bbec3b1902f7b0741">  385</a></span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_i_r_i.xhtml#a2698ea7751b5dc4bbec3b1902f7b0741">IRI::URIString</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a> )</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml#abe5d1e831b477878a03caf8104c0639d">string::EmptyString</a>;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_i_r_i.xhtml#aadb4e1fc66a83fbe94ab0f02c0a65fe4" title="The underlying URL object.">_url</a>-&gt;spec();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;}</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;EPUB3_END_NAMESPACE</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_090fe5b49b20e659802fc7ff806b453c.xhtml">utilities</a></li><li class="navelem"><a class="el" href="iri_8cpp.xhtml">iri.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
