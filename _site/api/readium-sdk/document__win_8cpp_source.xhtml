<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/xml/tree/document_win.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('document__win_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">document_win.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="document__win_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  document_win.cpp</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2013-09-24.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="document_8h.xhtml">document.h</a>&quot;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="element_8h.xhtml">element.h</a>&quot;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;../validation/dtd.h&quot;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;collection.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">using namespace </span>::Windows::Data::Xml::Dom;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="keyword">typedef</span> std::map&lt;ePub3::xml::Node*, ePub3::xml::NodeType&gt; <a class="code" href="document_8cpp.xhtml#aeb70a79d4c98fef104d47d23d5519473">NodeMap</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">void</span> <a class="code" href="document_8cpp.xhtml#a1c20d8ceb38699567b9efbffa25a922c">find_wrappers</a>(xmlNodePtr node, <a class="code" href="document_8cpp.xhtml#aeb70a79d4c98fef104d47d23d5519473">NodeMap</a> &amp; nmap)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">if</span> (node == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// entity references can be cyclic, so ignore them</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// (libxml also does this)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (node-&gt;type != XML_ENTITY_REF_NODE)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">for</span> (xmlNodePtr child = node-&gt;children; child != <span class="keyword">nullptr</span>; child = child-&gt;next)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <a class="code" href="document_8cpp.xhtml#a1c20d8ceb38699567b9efbffa25a922c">find_wrappers</a>(child, nmap);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// local wrapper</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (node-&gt;_private != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        nmap[<span class="keyword">reinterpret_cast&lt;</span>ePub3::xml::Node*<span class="keyword">&gt;</span>(node-&gt;_private)] = node-&gt;type;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    switch (node-&gt;type)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">case</span> XML_DTD_NODE:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">case</span> XML_ATTRIBUTE_NODE:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">case</span> XML_ELEMENT_DECL:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">case</span> XML_ATTRIBUTE_DECL:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">case</span> XML_ENTITY_DECL:</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">case</span> XML_DOCUMENT_NODE:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">for</span> (xmlAttrPtr attr = node-&gt;properties; attr != <span class="keyword">nullptr</span>; attr = attr-&gt;next) {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="document_8cpp.xhtml#a1c20d8ceb38699567b9efbffa25a922c">find_wrappers</a>(reinterpret_cast&lt;xmlNodePtr&gt;(attr), nmap);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keywordtype">void</span> <a class="code" href="document_8cpp.xhtml#a3331a8d1879ab82c5e3cbe8d6be64414">prune_unchanged_wrappers</a>(xmlNodePtr node, <a class="code" href="document_8cpp.xhtml#aeb70a79d4c98fef104d47d23d5519473">NodeMap</a> &amp; nmap)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (node == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> (node-&gt;type != XML_ENTITY_REF_NODE)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">for</span> (xmlNodePtr child = node-&gt;children; child != <span class="keyword">nullptr</span>; child = child-&gt;next)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <a class="code" href="document_8cpp.xhtml#a3331a8d1879ab82c5e3cbe8d6be64414">prune_unchanged_wrappers</a>(child, nmap);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (node-&gt;_private != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">const</span> NodeMap::iterator pos = nmap.find(reinterpret_cast&lt;ePub3::xml::Node*&gt;(node-&gt;_private));</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">if</span> (pos != nmap.end())</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (pos-&gt;second == node-&gt;type)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                nmap.erase(pos);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                node-&gt;_private = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">switch</span> (node-&gt;type)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">case</span> XML_DTD_NODE:</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">case</span> XML_ATTRIBUTE_NODE:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">case</span> XML_ELEMENT_DECL:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">case</span> XML_ATTRIBUTE_DECL:</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">case</span> XML_ENTITY_DECL:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">case</span> XML_DOCUMENT_NODE:</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">for</span> (xmlAttrPtr attr = node-&gt;properties; attr != <span class="keyword">nullptr</span>; attr = attr-&gt;next) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="document_8cpp.xhtml#a1c20d8ceb38699567b9efbffa25a922c">find_wrappers</a>(reinterpret_cast&lt;xmlNodePtr&gt;(attr), nmap);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<a class="code" href="xml_2utilities_2base_8h.xhtml#aad3f08b1d0c77112eed0e2524e14be9d">EPUB3_XML_BEGIN_NAMESPACE</a></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor"></span><a class="code" href="class_node.xhtml#a4960e0081853a3ec9defa3a0a418b163">Document::Document</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp; version) : <a class="code" href="class_node.xhtml">Node</a>(reinterpret_cast&lt;xmlNodePtr&gt;(xmlNewDoc(version.utf8())))</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor"></span><a class="code" href="class_node.xhtml#a4960e0081853a3ec9defa3a0a418b163">Document::Document</a>(NativeDocPtr doc) : <a class="code" href="class_node.xhtml">Node</a>(<a class="code" href="xml_2utilities_2base_8h.xhtml#a3f4aac247a5f1c3c7af35b6df6a5f23f">xml_native_cast</a>&lt;NativePtr&gt;(doc))</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a> == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">throw</span> InternalError(<span class="stringliteral">&quot;Failed to create new document&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor"></span><a class="code" href="class_node.xhtml#a4960e0081853a3ec9defa3a0a418b163">Document::Document</a>(<a class="code" href="class_element.xhtml">Element</a> * rootElement) : <a class="code" href="class_node.xhtml">Node</a>(reinterpret_cast&lt;xmlNodePtr&gt;(xmlNewDoc(BAD_CAST <span class="stringliteral">&quot;1.0&quot;</span>)))</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span> (SetRoot(rootElement) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">throw</span> InternalError(<span class="stringliteral">&quot;Failed to set document root element&quot;</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span><a class="code" href="class_document.xhtml#ac2e3f62307dc22baac21ddc10fa1609c">Document::~Document</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_document.xhtml#a38433d0975d05d68e210e14e67b3891f">Document::Encoding</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> (<span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="stringliteral">&quot;utf-8&quot;</span>;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;std::shared_ptr&lt;DTD&gt; <a class="code" href="class_document.xhtml#a7383c76ccaaec8efd01af35cae0f216c">Document::InternalSubset</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">auto</span> notation = <span class="keyword">dynamic_cast&lt;</span>DtdNotation^<span class="keyword">&gt;</span>(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>()-&gt;Doctype-&gt;Notations-&gt;First()-&gt;Current);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (notation == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> std::make_shared&lt;DTD&gt;(notation);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor"></span><span class="keywordtype">void</span> Document::SetInternalSubset(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;externalID, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;systemID)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    xmlDtd * dtd = xmlCreateIntSubset(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), name.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(), externalID.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(), systemID.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>());</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> (dtd != <span class="keyword">nullptr</span> &amp;&amp; dtd-&gt;_private == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        (void)Wrapped&lt;DTD, _xmlDtd&gt;(dtd);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor"></span>std::shared_ptr&lt;Element&gt; <a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Document::Root</a>()</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    XmlElement^ element = <a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>()-&gt;DocumentElement;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">if</span> (element == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> std::make_shared&lt;Element&gt;(element);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;std::shared_ptr&lt;const Element&gt; <a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Document::Root</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><a class="code" href="class_document.xhtml">Document</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Root</a>();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#if EPUB_ENABLE(XML_BUILDER)</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor"></span><a class="code" href="class_element.xhtml">Element</a> * Document::SetRoot(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;name, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;nsUri, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;nsPrefix)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="class_element.xhtml">Element</a> * newRoot = <span class="keyword">new</span> <a class="code" href="class_node.xhtml#a016b821f88c7c0a2de1451c175cefbf9">Element</a>(name, <span class="keyword">this</span>, nsUri, nsPrefix);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="class_element.xhtml">Element</a> * result = SetRoot(newRoot);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> (result != newRoot)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keyword">delete</span> newRoot;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">return</span> newRoot;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<a class="code" href="class_element.xhtml">Element</a> * Document::SetRoot(<span class="keyword">const</span> <a class="code" href="class_node.xhtml">Node</a> *nodeToCopy, <span class="keywordtype">bool</span> recursive)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    xmlNodePtr theCopy = xmlDocCopyNode(const_cast&lt;xmlNodePtr&gt;(nodeToCopy-&gt;<a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">xml</a>()), <a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), (recursive ? 1 : 0));</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (theCopy == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">throw</span> InternalError(<span class="stringliteral">&quot;Failed to copy new root node.&quot;</span>);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    xmlNodePtr oldRoot = xmlDocSetRootElement(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), theCopy);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> (oldRoot != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        xmlFreeNode(oldRoot);       <span class="comment">// the glue will delete any associated C++ object</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Root</a>();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<a class="code" href="class_element.xhtml">Element</a> * Document::SetRoot(<a class="code" href="class_element.xhtml">Element</a> * element)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    xmlNodePtr xmlRoot = (element == <span class="keyword">nullptr</span> ? <span class="keyword">nullptr</span> : element-&gt;<a class="code" href="class_node.xhtml#a6e1cbf3fe96d139d2869889175cbdf1b">xml</a>());</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    xmlNodePtr oldRoot = xmlDocSetRootElement(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), xmlRoot);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">if</span> (oldRoot != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        xmlFreeNode(oldRoot);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Root</a>();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<a class="code" href="class_node.xhtml">Node</a> * Document::AddNode(<a class="code" href="class_node.xhtml">Node</a> *commentOrPINode, <span class="keywordtype">bool</span> beforeRoot)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> (commentOrPINode-&gt;<a class="code" href="class_node.xhtml#a1a6a9787af2a0443be2675e265e7c163">Type</a>() != <a class="code" href="group__tree.xhtml#gga94dfb1c8fbb2b0291508beb395b7affaa0be8406951cdfda82f00f79328cf4efc">NodeType::Comment</a> &amp;&amp; commentOrPINode-&gt;<a class="code" href="class_node.xhtml#a1a6a9787af2a0443be2675e265e7c163">Type</a>() != <a class="code" href="group__tree.xhtml#gga94dfb1c8fbb2b0291508beb395b7affaa2b9f6898f2b04eda17c66078f58467bc">NodeType::ProcessingInstruction</a>)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">throw</span> std::invalid_argument(std::string(<a class="code" href="__config_8h.xhtml#a9c15fe1e91b07ea3280f5239f9841b67">__PRETTY_FUNCTION__</a>) + <span class="stringliteral">&quot;: argument must be a Comment or Processing Instruction&quot;</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="class_element.xhtml">Element</a> * root = <a class="code" href="class_document.xhtml#a268f144be4e5af559d82118b2d76e2fc">Root</a>();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">if</span> (root == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        AddChild(commentOrPINode);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (beforeRoot)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        root-&gt;InsertBefore(commentOrPINode);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        root-&gt;InsertAfter(commentOrPINode);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">return</span> commentOrPINode;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<a class="code" href="class_node.xhtml">Node</a> * Document::AddComment(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;comment, <span class="keywordtype">bool</span> beforeRoot)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">return</span> AddNode(Wrapped&lt;Node, _xmlNode&gt;(xmlNewDocComment(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), comment.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>())), beforeRoot);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<a class="code" href="class_node.xhtml">Node</a> * Document::AddProcessingInstruction(<span class="keyword">const</span> ePub3::string &amp;name, <span class="keyword">const</span> ePub3::string &amp;content, <span class="keywordtype">bool</span> beforeRoot)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> AddNode(Wrapped&lt;Node, _xmlNode&gt;(xmlNewDocPI(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), name.utf8(), content.utf8())), beforeRoot);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keywordtype">void</span> Document::DeclareEntity(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;name, <a class="code" href="group__tree.xhtml#gad79a57ed3105eb60d991a1aeb4a9dc44">EntityType</a> type, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;publicID, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;systemID, <span class="keyword">const</span> <span class="keywordtype">string</span> &amp;value)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;{</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">if</span> (xmlAddDocEntity(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>(), name.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(type), publicID.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(), systemID.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>(), value.<a class="code" href="classstring.xhtml#a1f0e4d4913bb2a5cf978b40763365bc6">utf8</a>()) == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">throw</span> InternalError(std::string(<span class="stringliteral">&quot;Unable to add entity declaration for &quot;</span>) + name.<a class="code" href="classstring.xhtml#a933a133175c37d014070c21068c514a2">c_str</a>());</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor"></span>Document::NativeEntityPtr <a class="code" href="class_document.xhtml#a8ff25d81f368e79029b4b0666b8803f6">Document::NamedEntity</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">dynamic_cast&lt;</span>NativeEntityPtr<span class="keyword">&gt;</span>(<a class="code" href="class_document.xhtml#a4dba8293ddcd2af753677726638b60cf">xml</a>()-&gt;Doctype-&gt;Entities-&gt;GetNamedItem(name));</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keywordtype">string</span> <a class="code" href="class_document.xhtml#a6e8fcba8e7abc1009dcc57c340187a6a">Document::ContentOfNamedEntity</a>(<span class="keyword">const</span> <span class="keywordtype">string</span> &amp;name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    NativeEntityPtr entity = <a class="code" href="class_document.xhtml#a8ff25d81f368e79029b4b0666b8803f6">NamedEntity</a>(name);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">if</span> (entity == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml">string</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classstring.xhtml">string</a>(entity-&gt;NodeValue-&gt;ToString());</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keywordtype">void</span> <a class="code" href="class_document.xhtml#a1f1004197168d87497f404029d201a97">Document::WriteXML</a>(<span class="keywordtype">string</span>&amp; str)<span class="keyword"> const</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    str = <a class="code" href="classstring.xhtml">string</a>(<a class="code" href="class_node.xhtml#a4b8f0f37dd1d071e70322204c7abe72d">_xml</a>-&gt;GetXml());</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<a class="code" href="xml_2utilities_2base_8h.xhtml#a1855726ae847a4b9be62158be5842e55">EPUB3_XML_END_NAMESPACE</a></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_d2dc3c0cadcebb3fe799a79b2b95c908.xhtml">xml</a></li><li class="navelem"><a class="el" href="dir_f24255c03ecd8d9b97df6bed7f990a1d.xhtml">tree</a></li><li class="navelem"><a class="el" href="document__win_8cpp.xhtml">document_win.cpp</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:41 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
