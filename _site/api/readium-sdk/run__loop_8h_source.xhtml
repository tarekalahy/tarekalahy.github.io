<!-- HTML header for doxygen 1.8.3.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>Readium SDK: /Users/rkwright/Documents/github/readium-sdk-D/ePub3/utilities/run_loop.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/NativeMML"],
});
</script><script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
   <link rel="shortcut icon" type="image/png" href="favicon.png"/>
 </head>
<body>
<div id="page-top-wrapper"><br/><br/></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="readiumlogo_128.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">Readium SDK
   &#160;<span id="projectnumber">0.23</span>
   </div>
   <div id="projectbrief">An EPUB 3 compliant rendering engine for eBooks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('run__loop_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">run_loop.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="run__loop_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  run_loop.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//  ePub3</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//  Created by Jim Dovey on 2013-04-08.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//  This program is distributed in the hope that it will be useful, but WITHOUT ANY </span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">//  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//  Licensed under Gnu Affero General Public License Version 3 (provided, notwithstanding this notice, </span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//  Readium Foundation reserves the right to license this material under a different separate license, </span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//  and if you have done so, the terms of that separate license control and the following references </span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//  to GPL do not apply).</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//  </span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//  This program is free software: you can redistribute it and/or modify it under the terms of the GNU </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//  Affero General Public License as published by the Free Software Foundation, either version 3 of </span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">//  the License, or (at your option) any later version. You should have received a copy of the GNU </span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//  Affero General Public License along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifndef __ePub3__run_loop__</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __ePub3__run_loop__</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">//#undef EPUB_USE_CF</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">//#define EPUB_OS_ANDROID 1</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="base_8h.xhtml">ePub3/base.h</a>&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># include &lt;CoreFoundation/CoreFoundation.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#elif EPUB_OS(ANDROID)</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># include &lt;time.h&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">struct </span>ALooper;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#elif EPUB_OS(WINDOWS)</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># include &lt;windows.h&gt;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># include &lt;condition_variable&gt;</span>      <span class="comment">// GNU libstdc++ 4.7 has this guy in a separate header</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor"># include &lt;pthread.h&gt;</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"># include &lt;time.h&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &lt;ePub3/epub3.h&gt;</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="basic_8h.xhtml">ePub3/utilities/basic.h</a>&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="utfstring_8h.xhtml">ePub3/utilities/utfstring.h</a>&gt;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &lt;list&gt;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;mutex&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &lt;atomic&gt;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="cf__helpers_8h.xhtml">cf_helpers.h</a>&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;ThreadEmulation.h&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">using namespace </span>Windows::System::Threading;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;EPUB3_BEGIN_NAMESPACE</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml">   61</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_run_loop.xhtml">RunLoop</a> : <span class="keyword">public</span> <a class="code" href="class_pointer_type.xhtml">PointerType</a>&lt;RunLoop&gt;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">enum class</span> <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a> ExitReason : uint8_t</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="run__loop_8h.xhtml#a2afd6b6a5f173c7a6df63a9425c8eb32">   66</a></span>&#160;        <a class="code" href="run__loop_8h.xhtml#a2afd6b6a5f173c7a6df63a9425c8eb32" title="The RunLoop has no timers or event sources to process.">RunFinished</a>         = 1,    </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="code" href="run__loop_8h.xhtml#adb28018deee3434883d50c04b624a6a7">   67</a></span>&#160;        <a class="code" href="run__loop_8h.xhtml#adb28018deee3434883d50c04b624a6a7" title="The RunLoop was stopped by a call to RunLoop::Stop().">RunStopped</a>          = 2,    </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="run__loop_8h.xhtml#a6b37ec84b88405013b980403aa4e1442">   68</a></span>&#160;        <a class="code" href="run__loop_8h.xhtml#a6b37ec84b88405013b980403aa4e1442" title="The RunLoop timed out while waiting for an event or timer.">RunTimedOut</a>         = 3,    </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        RunHandledSource    = 4     </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    };</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">class </span>Observer;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">class </span>EventSource;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml#aa39ebe6d39b3de293c212d9bdec6fa02">   74</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">typedef</span> std::shared_ptr&lt;Observer&gt;       <a class="code" href="class_run_loop.xhtml#aa39ebe6d39b3de293c212d9bdec6fa02">ObserverPtr</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">   77</a></span>&#160;    <span class="keyword">typedef</span> std::shared_ptr&lt;EventSource&gt;    <a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">EventSourcePtr</a>;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">   78</a></span>&#160;    <span class="keyword">typedef</span> std::shared_ptr&lt;Timer&gt;          <a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="class_run_loop_1_1___source_base.xhtml">   81</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_run_loop_1_1___source_base.xhtml">_SourceBase</a></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="code" href="class_run_loop_1_1___source_base.xhtml#a428f55c7a64910e738979870d7bd4ef5">   84</a></span>&#160;        <a class="code" href="class_run_loop_1_1___source_base.xhtml#a428f55c7a64910e738979870d7bd4ef5">_SourceBase</a>() {}</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="code" href="class_run_loop_1_1___source_base.xhtml#ac9137d8ef61be975a86bce4c24fb202a">   85</a></span>&#160;        <span class="keyword">virtual</span> <a class="code" href="class_run_loop_1_1___source_base.xhtml#ac9137d8ef61be975a86bce4c24fb202a">~_SourceBase</a>() {}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    };</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml#ad00280c634611c72adb5adc2ab2e3c0d">   87</a></span>&#160;    <span class="keyword">typedef</span> std::shared_ptr&lt;_SourceBase&gt;    <a class="code" href="class_run_loop.xhtml#ad00280c634611c72adb5adc2ab2e3c0d">_SourceBasePtr</a>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml">   90</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_run_loop_1_1_observer.xhtml">Observer</a> : <span class="keyword">public</span> <a class="code" href="class_pointer_type.xhtml">PointerType</a>&lt;Observer&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a">   95</a></span>&#160;        <span class="keyword">typedef</span> uint32_t <a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Activity</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1">   98</a></span>&#160;        <span class="keyword">enum</span> <a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1" title="The different Activity flags.">ActivityFlags</a> : uint32_t</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        {</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1ac91ac1e418fbff7392ed8e871b2e1fca">  100</a></span>&#160;            RunLoopEntry            = (1U &lt;&lt; 0),    </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1a6fadd33297c485ca0f78e074a8df4da0">  101</a></span>&#160;            RunLoopBeforeTimers     = (1U &lt;&lt; 1),    </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1a3444b699abe74d9333f67f7e1a4d52e7">  102</a></span>&#160;            RunLoopBeforeSources    = (1U &lt;&lt; 2),    </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1a1a8d56b098d776912d2141a086cbdc0d">  103</a></span>&#160;            RunLoopBeforeWaiting    = (1U &lt;&lt; 5),    </div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1a2a9784a13ab7448d72e4729d68c93769">  104</a></span>&#160;            RunLoopAfterWaiting     = (1U &lt;&lt; 6),    </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1ae9057b78f525f03cfc352115f529d852">  105</a></span>&#160;            RunLoopExit             = (1U &lt;&lt; 7),    </div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a0b55929d5d4da9935ffba76e4097a2b1af124702eb4b820c430837cf7b6d9edfd">  106</a></span>&#160;            RunLoopAllActivities    = 0x0FFFFFFFU</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        };</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        </div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#ac2c1ee730514fe72d9e2bce376a9210c">  111</a></span>&#160;        <span class="keyword">typedef</span> std::function&lt;void(Observer&amp;, Activity)&gt; <a class="code" href="class_run_loop_1_1_observer.xhtml#ac2c1ee730514fe72d9e2bce376a9210c" title="The type of function invoked by an observer.">ObserverFn</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor"></span>        CFRefCounted&lt;CFRunLoopObserverRef&gt;  _cf;        </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span>        <a class="code" href="class_run_loop_1_1_observer.xhtml#ac2c1ee730514fe72d9e2bce376a9210c" title="The type of function invoked by an observer.">ObserverFn</a>              _fn;        </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Activity</a>                _acts;      </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordtype">bool</span>                    _repeats;   </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordtype">bool</span>                    _cancelled; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor"></span>        </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a7678af8a3c11340f5f337e6a70fb8c0a">  123</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_run_loop.xhtml">RunLoop</a>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                <a class="code" href="class_run_loop_1_1_observer.xhtml">Observer</a>()                  <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    public:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <a class="code" href="class_run_loop_1_1_observer.xhtml">Observer</a>(<a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Activity</a> activities, <span class="keywordtype">bool</span> repeats, <a class="code" href="class_run_loop_1_1_observer.xhtml#ac2c1ee730514fe72d9e2bce376a9210c" title="The type of function invoked by an observer.">ObserverFn</a> fn);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <a class="code" href="class_run_loop_1_1_observer.xhtml">Observer</a>(const <a class="code" href="class_run_loop_1_1_observer.xhtml">Observer</a>&amp;);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        Observer(Observer&amp;&amp; o);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        ~Observer();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        Observer&amp;       operator=(const Observer&amp;);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        Observer&amp;       operator=(Observer&amp;&amp;o);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordtype">bool</span>            operator==(const Observer&amp;)     const;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_observer.xhtml#a71120c302355c391fa1d4a49918e26c4">  159</a></span>&#160;        <span class="keywordtype">bool</span>            operator!=(const Observer&amp;o)<span class="keyword">    const   </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(o) == <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        Activity        GetActivities()                 <span class="keyword">const</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordtype">bool</span>            Repeats()                       <span class="keyword">const</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordtype">bool</span>            IsCancelled()                   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordtype">void</span>            Cancel();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    };</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_event_source.xhtml">  181</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a> : <span class="keyword">public</span> <a class="code" href="class_pointer_type.xhtml">PointerType</a>&lt;EventSource&gt;, <span class="keyword">public</span> <a class="code" href="class_run_loop_1_1___source_base.xhtml">_SourceBase</a></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_event_source.xhtml#af0bf12fd11819584475f28d6accb43b9">  184</a></span>&#160;        <span class="keyword">typedef</span> std::function&lt;void(EventSource&amp;)&gt;   <a class="code" href="class_run_loop_1_1_event_source.xhtml#af0bf12fd11819584475f28d6accb43b9">EventHandlerFn</a>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor"></span>        CFRefCounted&lt;CFRunLoopSourceRef&gt;    _cf;    </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        std::map&lt;CFRunLoopRef, int&gt;         _rl;    </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#elif EPUB_OS(ANDROID)</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor"></span>        <span class="keywordtype">int</span>                                 _evt[2];    </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor">#elif EPUB_OS(WINDOWS)</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="preprocessor"></span>        HANDLE                              _event;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        std::vector&lt;std::weak_ptr&lt;RunLoop&gt;&gt; _runLoops;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor"></span>        std::atomic&lt;bool&gt;                   _signalled; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordtype">bool</span>                                _cancelled; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor"></span>        </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="class_run_loop_1_1_event_source.xhtml#af0bf12fd11819584475f28d6accb43b9">EventHandlerFn</a>              _fn;    </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        </div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_event_source.xhtml#a7678af8a3c11340f5f337e6a70fb8c0a">  202</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_run_loop.xhtml">RunLoop</a>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                        <a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>()                   <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    public:</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>(<a class="code" href="class_run_loop_1_1_event_source.xhtml#af0bf12fd11819584475f28d6accb43b9">EventHandlerFn</a> fn);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>(const <a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>&amp; o);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>(<a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>&amp;&amp; o);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    ~<a class="code" href="class_run_loop_1_1_event_source.xhtml">EventSource</a>();</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        EventSource&amp;    operator=(const EventSource&amp;);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        EventSource&amp;    operator=(EventSource&amp;&amp;);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordtype">bool</span>            operator==(const EventSource&amp;)  const;</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_event_source.xhtml#a377fa796c6eafa6a0fd902a6a9df1e36">  225</a></span>&#160;        <span class="keywordtype">bool</span>            operator!=(const EventSource&amp;o)<span class="keyword"> const   </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(o) == <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordtype">bool</span>            IsCancelled()                   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordtype">void</span>            Cancel();</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordtype">void</span>            Signal();</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor"></span>        <span class="keyword">static</span> <span class="keywordtype">void</span> _FireCFSourceEvent(<span class="keywordtype">void</span>* __i);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> _ScheduleCF(<span class="keywordtype">void</span>*, CFRunLoopRef, CFStringRef);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">void</span> _CancelCF(<span class="keywordtype">void</span>*, CFRunLoopRef, CFStringRef);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor"></span>        </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    };</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    </div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml">  251</a></span>&#160;    <span class="keyword">class </span><a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a> : <span class="keyword">public</span> <a class="code" href="class_pointer_type.xhtml">PointerType</a>&lt;Timer&gt;, <span class="keyword">public</span> <a class="code" href="class_run_loop_1_1___source_base.xhtml">_SourceBase</a></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">  254</a></span>&#160;        <span class="keyword">typedef</span> std::function&lt;void(Timer&amp;)&gt;  <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a>;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#if EPUB_COMPILER_SUPPORTS(CXX_ALIAS_TEMPLATES)</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor"></span>        <span class="keyword">using</span> <a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a> = cf_clock;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor"># else</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor"></span>        <span class="keyword">using</span> <a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a> = std::chrono::system_clock;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor"></span><span class="preprocessor"># if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor"></span>        <span class="keyword">typedef</span> cf_clock <a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor"># else</span></div>
<div class="line"><a name="l00268"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69">  268</a></span>&#160;<span class="preprocessor"></span>        <span class="keyword">typedef</span> std::chrono::system_clock <a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor"></span>        </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor"></span>        CFRefCounted&lt;CFRunLoopTimerRef&gt;     _cf;        </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">#elif EPUB_OS(ANDROID)</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor"></span>        timer_t                             _timer;     </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordtype">int</span>                                 _pipeFDs[2];</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a>                             _fn;        </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#elif EPUB_OS(WINDOWS)</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor"></span>        ThreadPoolTimer^                    _timer;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor"></span>        HANDLE                              _handle;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        std::vector&lt;std::weak_ptr&lt;RunLoop&gt;&gt; _runLoops;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        Clock::time_point                   _fireDate;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        Clock::duration                     _interval;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a>                             _fn;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordtype">bool</span>                                _cancelled;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor"></span>        Clock::time_point                   _fireDate;  </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a>                             _fn;        </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        Clock::duration                     _interval;  </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="keywordtype">bool</span>                                _cancelled; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor"></span>        </div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a7678af8a3c11340f5f337e6a70fb8c0a">  296</a></span>&#160;        <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="class_run_loop.xhtml">RunLoop</a>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>()                 <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    protected:</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(<a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>::time_point&amp; fireDate, <a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>::duration&amp; interval, <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a> fn);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(<a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>::duration&amp; interval, <span class="keywordtype">bool</span> repeat, <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a> fn);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    public:</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        template &lt;class _Rep&gt;</div>
<div class="line"><a name="l00316"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a823bce9b2f7e011e559575099b4897cc">  316</a></span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(std::chrono::time_point&lt;<a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>, _Rep&gt;&amp; fireDate,</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;              std::chrono::duration&lt;_Rep&gt;&amp; interval,</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;              <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a> fn) : <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(std::chrono::time_point_cast&lt;Clock::duration&gt;(fireDate), std::chrono::duration_cast&lt;Clock::duration&gt;(interval), fn) {}</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Rep&gt;</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a6d134a7279f6064571875c54201f75f8">  327</a></span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(std::chrono::duration&lt;_Rep&gt;&amp; interval,</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;              <span class="keywordtype">bool</span> repeat, <a class="code" href="class_run_loop_1_1_timer.xhtml#aa2dfc0374ace4d881215a8edef4b5a39">TimerFn</a> fn) : <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(std::chrono::duration_cast&lt;<a class="code" href="class_run_loop_1_1_timer.xhtml#a990d2d4cc004bb7aa3e0ecd637d12e69" title="Timers always use the system clock.">Clock</a>::duration&gt;(interval), repeat, fn) {}</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(<span class="keyword">const</span> <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp; o);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>(<a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;&amp; o);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    ~<a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>();</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;          operator=(<span class="keyword">const</span> <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;          operator=(<a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;&amp;);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(<span class="keyword">const</span> <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a31860f8fc55398c67b859e7ec6bc2231">  353</a></span>&#160;        <span class="keywordtype">bool</span>            <a class="code" href="class_run_loop_1_1_timer.xhtml#a31860f8fc55398c67b859e7ec6bc2231">operator!=</a>(<span class="keyword">const</span> <a class="code" href="class_run_loop_1_1_timer.xhtml">Timer</a>&amp;o)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="optional_8h.xhtml#ad0987ccb81a41f4db135845aa1f6e198">operator==</a>(o) == <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordtype">void</span>            Cancel();</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordtype">bool</span>            IsCancelled()   <span class="keyword">const</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordtype">bool</span>            Repeats()       <span class="keyword">const</span>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Rep, <span class="keyword">class</span> _Period _DEFAULT_(std::ratio&lt;1&gt;)&gt;</div>
<div class="line"><a name="l00372"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#ad1c3b7e83dc695c005a80a533f40d362">  372</a></span>&#160;        std::chrono::duration&lt;_Rep, _Period&gt;    <a class="code" href="class_run_loop_1_1_timer.xhtml#ad1c3b7e83dc695c005a80a533f40d362" title="Retrieves the repeat interval of a timer.">RepeatInterval</a>()<span class="keyword">    const </span>{</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="keywordflow">return</span> duration_cast&lt;decltype(RepeatInterval&lt;_Rep,_Period&gt;())&gt;(RepeatIntervalInternal());</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        }</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Duration _DEFAULT_(<span class="keyword">typename</span> Clock::duration)&gt;</div>
<div class="line"><a name="l00380"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#ad74942b8b9410e04ff90f5aa6b6d20e9">  380</a></span>&#160;        std::chrono::time_point&lt;Clock, _Duration&gt;  <a class="code" href="class_run_loop_1_1_timer.xhtml#ad74942b8b9410e04ff90f5aa6b6d20e9" title="Retrieves the date at which the timer will next fire.">GetNextFireDate</a>()<span class="keyword">   const </span>{</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="keywordflow">return</span> time_point_cast&lt;_Duration&gt;(GetNextFireDateTime());</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Duration _DEFAULT_(<span class="keyword">typename</span> Clock::duration)&gt;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#afc072c718b2729d9659e9d922ece84b5">  388</a></span>&#160;        <span class="keywordtype">void</span>            <a class="code" href="class_run_loop_1_1_timer.xhtml#afc072c718b2729d9659e9d922ece84b5" title="Sets the date at whech the timer will next fire.">SetNextFireDate</a>(std::chrono::time_point&lt;Clock, _Duration&gt;&amp; when) {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            Clock::time_point __t = time_point_cast&lt;Clock::duration&gt;(when);</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">return</span> SetNextFireDateTime(__t);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Rep, <span class="keyword">class</span> _Period _DEFAULT_(std::ratio&lt;1&gt;)&gt;</div>
<div class="line"><a name="l00397"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#a28adc28ef74e740ad8732956d6aa2e13">  397</a></span>&#160;        std::chrono::duration&lt;_Rep, _Period&gt;    <a class="code" href="class_run_loop_1_1_timer.xhtml#a28adc28ef74e740ad8732956d6aa2e13" title="Retrieves the timer&#39;s next fire date as an interval from the current time.">GetNextFireDate</a>()<span class="keyword">   const </span>{</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">return</span> duration_cast&lt;_Rep&gt;(GetNextFireDateDuration());</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Rep, <span class="keyword">class</span> _Period _DEFAULT_(std::ratio&lt;1&gt;)&gt;</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="code" href="class_run_loop_1_1_timer.xhtml#aa27efa18ef63909b678eb101425f25ab">  405</a></span>&#160;        <span class="keywordtype">void</span>            <a class="code" href="class_run_loop_1_1_timer.xhtml#aa27efa18ef63909b678eb101425f25ab" title="Sets the timer&#39;s next fire date using a relative time interval (from now).">SetNextFireDate</a>(std::chrono::duration&lt;_Rep, _Period&gt;&amp; when) {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            Clock::duration __d = duration_cast&lt;Clock::duration&gt;(when);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordflow">return</span> SetNextFireDateDuration(__d);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        </div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        Clock::duration RepeatIntervalInternal() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        Clock::time_point GetNextFireDateTime() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordtype">void</span> SetNextFireDateTime(Clock::time_point&amp; when);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        Clock::duration GetNextFireDateDuration() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordtype">void</span> SetNextFireDateDuration(Clock::duration&amp; when);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    };</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keyword">static</span> <a class="code" href="_forward_8h.xhtml#a0d88f76e5f51a60c95a53714587c88da">RunLoopPtr</a> <a class="code" href="class_run_loop.xhtml#a9fe2e979cf341dfd8faf3a6da1b1a088" title="This is the only way to obtain a RunLoop. Use it wisely.">CurrentRunLoop</a>();</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop.xhtml#aa9f17aa60a3515c1a674ee3db4a67e8d">~RunLoop</a>();</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    </div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#a9109a35166a200a3cff41b1e8fb805ed" title="Call a function on the run loop&#39;s assigned thread.">PerformFunction</a>(std::function&lt;<span class="keywordtype">void</span>()&gt; fn);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    </div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#a411d4923e3e14fdad66d5f4c145c93b2" title="Adds a timer to the run loop.">AddTimer</a>(<a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a> timer);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_run_loop.xhtml#aca4dacd66138f452b8f60dbbda409754" title="Whether a timer is registered on this runloop.">ContainsTimer</a>(<a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a> timer)            <span class="keyword">const</span>;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#a0a76804ba7aaf2754a773faec4d21dc4" title="Removes the timer from this RunLoop (without cancelling it).">RemoveTimer</a>(<a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a> timer);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#af57041aff3ec26f5c82a8e8b57cd7a4e" title="Adds an event source to the run loop.">AddEventSource</a>(<a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">EventSourcePtr</a> source);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_run_loop.xhtml#a9907b16835ae0a77350f222c62f33c10" title="Whether an event source is registered on this runloop.">ContainsEventSource</a>(<a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">EventSourcePtr</a> source)  <span class="keyword">const</span>;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#ab69e27aee3d6fb861356878b87620bdf" title="Removes an event source from this RunLoop (without cancelling it).">RemoveEventSource</a>(<a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">EventSourcePtr</a> source);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#ae0613d5c2977c5ea2aea4125cab57bf3" title="Adds an observer to the run loop.">AddObserver</a>(<a class="code" href="class_run_loop.xhtml#aa39ebe6d39b3de293c212d9bdec6fa02">ObserverPtr</a> observer);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_run_loop.xhtml#a331035b1619b66d0b9963aa6ec00413d" title="Whether an observer is registered on this runloop.">ContainsObserver</a>(<a class="code" href="class_run_loop.xhtml#aa39ebe6d39b3de293c212d9bdec6fa02">ObserverPtr</a> observer)      <span class="keyword">const</span>;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#aed2fd6278def89e8e30cc6a3cd369d9e" title="Removes an observer from this RunLoop (without cancelling it).">RemoveObserver</a>(<a class="code" href="class_run_loop.xhtml#aa39ebe6d39b3de293c212d9bdec6fa02">ObserverPtr</a> observer);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    </div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _Rep _DEFAULT_(<span class="keywordtype">long</span> <span class="keywordtype">long</span>), <span class="keyword">class</span> _Period _DEFAULT_(std::ratio&lt;1&gt;)&gt;</div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="code" href="class_run_loop.xhtml#ae98661eae8a10c1d5385e3cf723f70a8">  489</a></span>&#160;    ExitReason      <a class="code" href="class_run_loop.xhtml#aa36e5151633273d11638ce53b611ccc4" title="Runs the RunLoop forever, or until Stop() is called.">Run</a>(<span class="keywordtype">bool</span> returnAfterSourceHandled,</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                        std::chrono::duration&lt;_Rep,_Period&gt; timeout) {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keyword">using namespace </span>std::chrono;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        nanoseconds ns = duration_cast&lt;nanoseconds&gt;(timeout);</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="class_run_loop.xhtml#abe73f25f4b147563f96e7ba94d2f233a" title="Internal Run function which takes an explicit timeout duration type.">RunInternal</a>(returnAfterSourceHandled, ns);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#aa36e5151633273d11638ce53b611ccc4" title="Runs the RunLoop forever, or until Stop() is called.">Run</a>();</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    </div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#a49dbe91ce6dda49d715ff65f70ec36fa" title="Stops the RunLoop, exiting any invocations of Run() or Run(bool, std::chrono::duration).">Stop</a>();</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    </div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordtype">bool</span>            <a class="code" href="class_run_loop.xhtml#ae99efcad26a1d58174ba09efa85e3253" title="Whether the RunLoop is currently waiting for an event or timer to fire.">IsWaiting</a>()                                     <span class="keyword">const</span>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    </div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <span class="keywordtype">void</span>            <a class="code" href="class_run_loop.xhtml#ac9c1720a1a67ea363838a09e64efe0b9" title="Explicitly wake the RunLoop, causing it to check timers and event sources.">WakeUp</a>();</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    </div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="preprocessor"># if EPUB_OS(WINDOWS) &amp;&amp; EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keywordtype">void</span> InitRunLoopTLSKey();</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> KillRunLoopTLSKey();</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    ExitReason      <a class="code" href="class_run_loop.xhtml#abe73f25f4b147563f96e7ba94d2f233a" title="Internal Run function which takes an explicit timeout duration type.">RunInternal</a>(<span class="keywordtype">bool</span> returnAfterSourceHandled, std::chrono::nanoseconds&amp; timeout);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    </div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    <a class="code" href="__config_8h.xhtml#a0590ab5cb2aa738973dc05a6bf17a425">EPUB3_EXPORT</a>    <a class="code" href="class_run_loop.xhtml#a04bf50286cc31db317951bf4aa43efbd" title="Obtains the run loop for the current thread.">RunLoop</a>();</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                    <a class="code" href="class_run_loop.xhtml#a04bf50286cc31db317951bf4aa43efbd" title="Obtains the run loop for the current thread.">RunLoop</a>(<span class="keyword">const</span> <a class="code" href="class_run_loop.xhtml">RunLoop</a>&amp; o) <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                    <a class="code" href="class_run_loop.xhtml#a04bf50286cc31db317951bf4aa43efbd" title="Obtains the run loop for the current thread.">RunLoop</a>(<a class="code" href="class_run_loop.xhtml">RunLoop</a>&amp;&amp; o) <a class="code" href="__config_8h.xhtml#ac12c242fbf92718c8469d07768efde7d">_DELETED_</a>;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="preprocessor">#if EPUB_OS(ANDROID)</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> <span class="keywordtype">int</span>      _ReceiveLoopEvent(<span class="keywordtype">int</span> fd, <span class="keywordtype">int</span> events, <span class="keywordtype">void</span>* data);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#if !EPUB_USE(CF)</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordtype">void</span>            RunObservers(<a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Observer::Activity</a> activity);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="preprocessor">#if !EPUB_OS(ANDROID) &amp;&amp; !EPUB_OS(WINDOWS) &amp;&amp; !EPUB_USE(CF)</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <a class="code" href="classshared__vector.xhtml">shared_vector&lt;Timer&gt;</a>        CollectFiringTimers();</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <a class="code" href="classshared__vector.xhtml">shared_vector&lt;EventSource&gt;</a>  CollectFiringSources(<span class="keywordtype">bool</span> onlyOne);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    std::chrono::system_clock::time_point   TimeoutOrTimer(std::chrono::system_clock::time_point&amp; timeout);</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="preprocessor">#elif EPUB_OS(WINDOWS)</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordtype">void</span>            ProcessTimer(<a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a> timer);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="keywordtype">void</span>            ProcessEventSource(<a class="code" href="class_run_loop.xhtml#a6618b31b385e72913ccf1b2b27ba1959">EventSourcePtr</a> source);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="preprocessor">#if EPUB_USE(CF)</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="preprocessor"></span>    CFRunLoopRef        _cf;            </div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="preprocessor">#elif EPUB_OS(ANDROID)</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="preprocessor"></span>    ALooper*            _looper;        </div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordtype">int</span>                 _wakeFDs[2];    </div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    std::recursive_mutex            _listLock;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    </div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="keyword">typedef</span> std::map&lt;int,_SourceBasePtr&gt; SourceMap_t;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    SourceMap_t         _handlers;      </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    </div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <a class="code" href="classshared__list.xhtml">shared_list&lt;Observer&gt;</a>           _observers;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Observer::Activity</a>              _observerMask;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    std::atomic&lt;bool&gt;               _waiting;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor">#elif EPUB_OS(WINDOWS)</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="preprocessor"></span>    HANDLE                              _wakeHandle;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    std::map&lt;HANDLE, TimerPtr&gt;          _timers;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    std::map&lt;HANDLE, EventSourcePtr&gt;    _sources;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <a class="code" href="classshared__list.xhtml">shared_list&lt;Observer&gt;</a>               _observers;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    std::recursive_mutex                _listLock;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    std::atomic&lt;bool&gt;                   _waiting;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    std::atomic&lt;bool&gt;                   _stop;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    std::atomic&lt;bool&gt;                   _resetHandles;</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Observer::Activity</a>                  _observerMask;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="preprocessor"># if EPUB_PLATFORM(WINRT)</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="preprocessor"></span>    <span class="keyword">static</span> DWORD RunLoopTLSKey;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="preprocessor"># endif</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="preprocessor"></span>    <a class="code" href="classshared__list.xhtml">shared_list&lt;Timer&gt;</a>                  _timers;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <a class="code" href="classshared__list.xhtml">shared_list&lt;Observer&gt;</a>               _observers;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <a class="code" href="classshared__list.xhtml">shared_list&lt;EventSource&gt;</a>            _sources;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    std::recursive_mutex                _listLock;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    std::mutex                          _conditionLock;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    std::condition_variable             _wakeUp;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    std::atomic&lt;bool&gt;                   _waiting;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    std::atomic&lt;bool&gt;                   _stop;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <a class="code" href="class_run_loop_1_1_observer.xhtml#a80f038f2f6678ae315e4eb1c9459250a" title="A bitfield type, used to specify the activities to observe.">Observer::Activity</a>                  _observerMask;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keyword">const</span> <a class="code" href="class_run_loop.xhtml#a6d7230331fff432aab5dcb894d38e533">TimerPtr</a>                      _waitingUntilTimer;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;};</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;EPUB3_END_NAMESPACE</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* defined(__ePub3__run_loop__) */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.3.1-->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_99f496c3a760cbc050f4a6d0965ed892.xhtml">ePub3</a></li><li class="navelem"><a class="el" href="dir_090fe5b49b20e659802fc7ff806b453c.xhtml">utilities</a></li><li class="navelem"><a class="el" href="run__loop_8h.xhtml">run_loop.h</a></li>
    <li class="footer">Generated on Mon Jun 6 2016 09:56:40 for Readium SDK by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
