<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-11-07T16:45:20+01:00</updated><id>http://localhost:4000//</id><title type="html">Readium Projects</title><subtitle>The Readium Projects primary goal is to provide rock-solid,  performant building blocks and applications for EPUB3 publications.
</subtitle><entry><title type="html">Let’s try!</title><link href="http://localhost:4000/test/2016/10/31/post.html" rel="alternate" type="text/html" title="Let's try!" /><published>2016-10-31T11:56:00+01:00</published><updated>2016-10-31T11:56:00+01:00</updated><id>http://localhost:4000/test/2016/10/31/post</id><content type="html" xml:base="http://localhost:4000/test/2016/10/31/post.html">&lt;h3 id=&quot;scope-and-goals-of-the-project&quot;&gt;Scope and Goals of the Project&lt;/h3&gt;
&lt;p&gt;The overall Readium project consists of three sub-projects:&lt;/p&gt;

&lt;h4 id=&quot;readium-sdk&quot;&gt;Readium SDK&lt;/h4&gt;

&lt;p&gt;The goal of the SDK is to allow developers to create performant native applications that can run on various desktop and mobile platforms such as iOS and Android as well as desktops.  It supports DRM, but in such a way that it is agnostic with respect to the flavour of DRM.  Readium has implemented support for LCP, which will be available from the Readium repos.  Other DRM flavours, such as Sony DADC and Adobe ACS, can be used with Readium via vendor-specific implementations which are integrated with the readium-sdk core.&lt;/p&gt;

&lt;h4 id=&quot;readiumjs&quot;&gt;ReadiumJS&lt;/h4&gt;

&lt;p&gt;ReadiumJS allows developers to create browser-based EPUB reading systems that can be used by end-users across many different platforms.  ReadiumJS does not support any traditional DRM methods (though content-specific solutions such as watermarking are of course feasible). As pure JavaScript, ReadiumJS allows developers to use the base Readium implementations or to extend those implementations as they see fit.&lt;/p&gt;

&lt;h3 id=&quot;readium-sdk-1&quot;&gt;Readium SDK&lt;/h3&gt;

&lt;p&gt;Readium SDK is consists of three major parts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;readium-sdk&lt;/li&gt;
  &lt;li&gt;readium-shared-js&lt;/li&gt;
  &lt;li&gt;SDKLauncher-*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The diagram below illustrates the high-level relationship of the parts of the architecture.&lt;/p&gt;</content><summary type="html">Scope and Goals of the Project
The overall Readium project consists of three sub-projects:</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2016/10/31/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-10-31T11:02:41+01:00</published><updated>2016-10-31T11:02:41+01:00</updated><id>http://localhost:4000/jekyll/update/2016/10/31/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2016/10/31/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>
